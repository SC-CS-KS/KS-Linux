{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}{\f4\fnil\fcharset2 Symbol;}{\f5\fnil\fcharset0 Courier New;}}{\colortbl;\red0\green0\blue255;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1924385521\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1572602044}
{\list\listtemplateid854947761\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1510923383}
{\list\listtemplateid263728728\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid2101512634}
{\list\listtemplateid1730747558
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid1473244485}
{\list\listtemplateid127384158\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid688086488}
{\list\listtemplateid1077721404
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid1184846899}
{\list\listtemplateid1244099843\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid390044438}
}
{\*\listoverridetable
{\listoverride\listid1572602044\listoverridecount0\ls1}
{\listoverride\listid1510923383\listoverridecount0\ls2}
{\listoverride\listid2101512634\listoverridecount0\ls3}
{\listoverride\listid1473244485\listoverridecount0\ls4}
{\listoverride\listid688086488\listoverridecount0\ls5}
{\listoverride\listid1184846899\listoverridecount0\ls6}
{\listoverride\listid390044438\listoverridecount0\ls7}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf2 /etc/ssh_config man(5) EN
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 SSH_CONFIG(5)               BSD File Formats Manual              SSH_CONFIG(5)
\par 
\par NAME
\par \plain \f1\fs20\cf1      ssh_config - OpenSSH SSH client configuration files
\par \plain \f1\fs20 
\par SYNOPSIS
\par \plain \f1\fs20\cf1      ~/.ssh/config
\par      /etc/ssh/ssh_config
\par \plain \f1\fs20 
\par DESCRIPTION
\par      ssh(1) obtains configuration data from the following sources in the following order:
\par 
\par            1.   command-line options
\par            2.   user\rquote s configuration file (~/.ssh/config)
\par            3.   system-wide configuration file (/etc/ssh/ssh_config)
\par 
\par      For each parameter, the first obtained value will be used.  The configuration files contain sections separated by
\par      \ldblquote Host\rdblquote  specifications, and that section is only applied for hosts that match one of the patterns given in the spec-
\par      ification.  The matched host name is the one given on the command line.
\par 
\par      Since the first obtained value for each parameter is used, more host-specific declarations should be given near the
\par      beginning of the file, and general defaults at the end.
\par 
\par      The configuration file has the following format:
\par 
\par      Empty lines and lines starting with \lquote #\rquote  are comments.  Otherwise a line is of the format \ldblquote keyword arguments\rdblquote .  Con-
\par      figuration options may be separated by whitespace or optional whitespace and exactly one \lquote =\rquote ; the latter format is
\par      useful to avoid the need to quote whitespace when specifying configuration options using the ssh, scp, and sftp -o
\par      option.  Arguments may optionally be enclosed in double quotes (") in order to represent arguments containing
\par      spaces.
\par 
\par      The possible keywords and their meanings are as follows (note that keywords are case-insensitive and arguments are
\par      case-sensitive):
\par 
\par      Host    Restricts the following declarations (up to the next Host keyword) to be only for those hosts that match
\par              one of the patterns given after the keyword.  If more than one pattern is provided, they should be sepa-
\par              rated by whitespace.  A single \lquote *\rquote  as a pattern can be used to provide global defaults for all hosts.  The
\par              host is the hostname argument given on the command line (i.e. the name is not converted to a canonicalized
\par              host name before matching).
\par 
\par              See PATTERNS for more information on patterns.
\par 
\par      AddressFamily
\par              Specifies which address family to use when connecting.  Valid arguments are \ldblquote any\rdblquote , \ldblquote inet\rdblquote  (use IPv4 only),
\par              or \ldblquote inet6\rdblquote  (use IPv6 only).
\par 
\par      BatchMode
\par              If set to \ldblquote yes\rdblquote , passphrase/password querying will be disabled.  This option is useful in scripts and other
\par              batch jobs where no user is present to supply the password.  The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The
\par              default is \ldblquote no\rdblquote .
\par 
\par      BindAddress
\par              Use the specified address on the local machine as the source address of the connection.  Only useful on
\par              systems with more than one address.  Note that this option does not work if UsePrivilegedPort is set to
\par              \ldblquote yes\rdblquote .
\par 
\par      ChallengeResponseAuthentication
\par              Specifies whether to use challenge-response authentication.  The argument to this keyword must be \ldblquote yes\rdblquote  or
\par              \ldblquote no\rdblquote .  The default is \ldblquote yes\rdblquote .
\par 
\par      CheckHostIP
\par              If this flag is set to \ldblquote yes\rdblquote , ssh(1) will additionally check the host IP address in the known_hosts file.
\par              This allows ssh to detect if a host key changed due to DNS spoofing.  If the option is set to \ldblquote no\rdblquote , the
\par              check will not be executed.  The default is \ldblquote yes\rdblquote .
\par 
\par      Cipher  Specifies the cipher to use for encrypting the session in protocol version 1.  Currently, \ldblquote blowfish\rdblquote ,
\par              \ldblquote 3des\rdblquote , and \ldblquote des\rdblquote  are supported.  des is only supported in the ssh(1) client for interoperability with
\par              legacy protocol 1 implementations that do not support the 3des cipher.  Its use is strongly discouraged due
\par              to cryptographic weaknesses.  The default is \ldblquote 3des\rdblquote .
\par 
\par      Ciphers
\par              Specifies the ciphers allowed for protocol version 2 in order of preference.  Multiple ciphers must be
\par              comma-separated.  The supported ciphers are \ldblquote 3des-cbc\rdblquote , \ldblquote aes128-cbc\rdblquote , \ldblquote aes192-cbc\rdblquote , \ldblquote aes256-cbc\rdblquote ,
\par              \ldblquote aes128-ctr\rdblquote , \ldblquote aes192-ctr\rdblquote , \ldblquote aes256-ctr\rdblquote , \ldblquote arcfour128\rdblquote , \ldblquote arcfour256\rdblquote , \ldblquote arcfour\rdblquote , \ldblquote blowfish-cbc\rdblquote , and
\par              \ldblquote cast128-cbc\rdblquote .  The default is:
\par 
\par                 aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,
\par                 aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,
\par                 aes256-cbc,arcfour
\par 
\par      ClearAllForwardings
\par              Specifies that all local, remote, and dynamic port forwardings specified in the configuration files or on
\par              the command line be cleared.  This option is primarily useful when used from the ssh(1) command line to
\par              clear port forwardings set in configuration files, and is automatically set by scp(1) and sftp(1).  The
\par              argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par      Compression
\par              Specifies whether to use compression.  The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par      CompressionLevel
\par              Specifies the compression level to use if compression is enabled.  The argument must be an integer from 1
\par              (fast) to 9 (slow, best).  The default level is 6, which is good for most applications.  The meaning of the
\par              values is the same as in gzip(1).  Note that this option applies to protocol version 1 only.
\par 
\par      ConnectionAttempts
\par              Specifies the number of tries (one per second) to make before exiting.  The argument must be an integer.
\par              This may be useful in scripts if the connection sometimes fails.  The default is 1.
\par 
\par      ConnectTimeout
\par              Specifies the timeout (in seconds) used when connecting to the SSH server, instead of using the default
\par              system TCP timeout.  This value is used only when the target is down or really unreachable, not when it
\par              refuses the connection.
\par 
\par      ControlMaster
\par              Enables the sharing of multiple sessions over a single network connection.  When set to \ldblquote yes\rdblquote , ssh(1) will
\par              listen for connections on a control socket specified using the ControlPath argument.  Additional sessions
\par              can connect to this socket using the same ControlPath with ControlMaster set to \ldblquote no\rdblquote  (the default).  These
\par              sessions will try to reuse the master instance\rquote s network connection rather than initiating new ones, but
\par              will fall back to connecting normally if the control socket does not exist, or is not listening.
\par 
\par              Setting this to \ldblquote ask\rdblquote  will cause ssh to listen for control connections, but require confirmation using the
\par              SSH_ASKPASS program before they are accepted (see ssh-add(1) for details).  If the ControlPath cannot be
\par              opened, ssh will continue without connecting to a master instance.
\par 
\par              X11 and ssh-agent(1) forwarding is supported over these multiplexed connections, however the display and
\par              agent forwarded will be the one belonging to the master connection i.e. it is not possible to forward mul-
\par              tiple displays or agents.
\par 
\par              Two additional options allow for opportunistic multiplexing: try to use a master connection but fall back
\par              to creating a new one if one does not already exist.  These options are: \ldblquote auto\rdblquote  and \ldblquote autoask\rdblquote .  The latter
\par              requires confirmation like the \ldblquote ask\rdblquote  option.
\par 
\par      ControlPath
\par              Specify the path to the control socket used for connection sharing as described in the ControlMaster sec-
\par              tion above or the string \ldblquote none\rdblquote  to disable connection sharing.  In the path, \lquote %l\rquote  will be substituted by
\par              the local host name, \lquote %h\rquote  will be substituted by the target host name, \lquote %p\rquote  the port, and \lquote %r\rquote  by the
\par              remote login username.  It is recommended that any ControlPath used for opportunistic connection sharing
\par              include at least %h, %p, and %r.  This ensures that shared connections are uniquely identified.
\par 
\par      DynamicForward
\par              Specifies that a TCP port on the local machine be forwarded over the secure channel, and the application
\par              protocol is then used to determine where to connect to from the remote machine.
\par 
\par              The argument must be [bind_address:]port.  IPv6 addresses can be specified by enclosing addresses in square
\par              brackets or by using an alternative syntax: [bind_address/]port.  By default, the local port is bound in
\par              accordance with the GatewayPorts setting.  However, an explicit bind_address may be used to bind the con-
\par              nection to a specific address.  The bind_address of \ldblquote localhost\rdblquote  indicates that the listening port be bound
\par              for local use only, while an empty address or \lquote *\rquote  indicates that the port should be available from all
\par              interfaces.
\par 
\par              Currently the SOCKS4 and SOCKS5 protocols are supported, and ssh(1) will act as a SOCKS server.  Multiple
\par              forwardings may be specified, and additional forwardings can be given on the command line.  Only the supe-
\par              ruser can forward privileged ports.
\par 
\par      EnableSSHKeysign
\par              Setting this option to \ldblquote yes\rdblquote  in the global client configuration file /etc/ssh/ssh_config enables the use of
\par              the helper program ssh-keysign(8) during HostbasedAuthentication.  The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The
\par              default is \ldblquote no\rdblquote .  This option should be placed in the non-hostspecific section.  See ssh-keysign(8) for
\par              more information.
\par 
\par      EscapeChar
\par              Sets the escape character (default: \lquote ~\rquote ).  The escape character can also be set on the command line.  The
\par              argument should be a single character, \lquote ^\rquote  followed by a letter, or \ldblquote none\rdblquote  to disable the escape character
\par              entirely (making the connection transparent for binary data).
\par 
\par      ExitOnForwardFailure
\par              Specifies whether ssh(1) should terminate the connection if it cannot set up all requested dynamic, tunnel,
\par              local, and remote port forwardings.  The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par      ForwardAgent
\par              Specifies whether the connection to the authentication agent (if any) will be forwarded to the remote
\par              machine.  The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par              Agent forwarding should be enabled with caution.  Users with the ability to bypass file permissions on the
\par              remote host (for the agent\rquote s Unix-domain socket) can access the local agent through the forwarded connec-
\par              tion.  An attacker cannot obtain key material from the agent, however they can perform operations on the
\par              keys that enable them to authenticate using the identities loaded into the agent.
\par 
\par      ForwardX11
\par              Specifies whether X11 connections will be automatically redirected over the secure channel and DISPLAY set.
\par              The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par              X11 forwarding should be enabled with caution.  Users with the ability to bypass file permissions on the
\par              remote host (for the user\rquote s X11 authorization database) can access the local X11 display through the for-
\par              warded connection.  An attacker may then be able to perform activities such as keystroke monitoring if the
\par              ForwardX11Trusted option is also enabled.
\par 
\par      ForwardX11Trusted
\par              If this option is set to \ldblquote yes\rdblquote , remote X11 clients will have full access to the original X11 display.
\par 
\par              If this option is set to \ldblquote no\rdblquote , remote X11 clients will be considered untrusted and prevented from stealing
\par              or tampering with data belonging to trusted X11 clients.  Furthermore, the xauth(1) token used for the ses-
\par              sion will be set to expire after 20 minutes.  Remote clients will be refused access after this time.
\par 
\par              The default is \ldblquote no\rdblquote .
\par 
\par              See the X11 SECURITY extension specification for full details on the restrictions imposed on untrusted
\par              clients.
\par 
\par      GatewayPorts
\par              Specifies whether remote hosts are allowed to connect to local forwarded ports.  By default, ssh(1) binds
\par              local port forwardings to the loopback address.  This prevents other remote hosts from connecting to for-
\par              warded ports.  GatewayPorts can be used to specify that ssh should bind local port forwardings to the wild-
\par              card address, thus allowing remote hosts to connect to forwarded ports.  The argument must be \ldblquote yes\rdblquote  or
\par              \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par      GlobalKnownHostsFile
\par              Specifies a file to use for the global host key database instead of /etc/ssh/ssh_known_hosts.
\par 
\par      GSSAPIAuthentication
\par              Specifies whether user authentication based on GSSAPI is allowed.  The default is \ldblquote no\rdblquote .  Note that this
\par              option applies to protocol version 2 only.
\par 
\par      GSSAPIKeyExchange
\par              Specifies whether key exchange based on GSSAPI may be used. When using GSSAPI key exchange the server need
\par              not have a host key.  The default is \ldblquote no\rdblquote .  Note that this option applies to protocol version 2 only.
\par 
\par      GSSAPIClientIdentity
\par              If set, specifies the GSSAPI client identity that ssh should use when connecting to the server. The default
\par              is unset, which means that the default identity will be used.
\par 
\par      GSSAPIDelegateCredentials
\par              Forward (delegate) credentials to the server.  The default is \ldblquote no\rdblquote .  Note that this option applies to pro-
\par              tocol version 2 connections using GSSAPI.
\par 
\par      GSSAPIRenewalForcesRekey
\par              If set to \ldblquote yes\rdblquote  then renewal of the client\rquote s GSSAPI credentials will force the rekeying of the ssh connec-
\par              tion. With a compatible server, this can delegate the renewed credentials to a session on the server.  The
\par              default is \ldblquote no\rdblquote .
\par 
\par      GSSAPITrustDns
\par              Set to \ldblquote yes to indicate that the DNS is trusted to securely canonicalize\rdblquote  the name of the host being con-
\par              nected to. If \ldblquote no, the hostname entered on the\rdblquote  command line will be passed untouched to the GSSAPI
\par              library.  The default is \ldblquote no\rdblquote .  This option only applies to protocol version 2 connections using GSSAPI.
\par 
\par      HashKnownHosts
\par              Indicates that ssh(1) should hash host names and addresses when they are added to ~/.ssh/known_hosts.
\par              These hashed names may be used normally by ssh(1) and sshd(8), but they do not reveal identifying informa-
\par              tion should the file\rquote s contents be disclosed.  The default is \ldblquote no\rdblquote .  Note that existing names and addresses
\par              in known hosts files will not be converted automatically, but may be manually hashed using ssh-keygen(1).
\par 
\par      HostbasedAuthentication
\par              Specifies whether to try rhosts based authentication with public key authentication.  The argument must be
\par              \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .  This option applies to protocol version 2 only and is similar to
\par              RhostsRSAAuthentication.
\par 
\par      HostKeyAlgorithms
\par              Specifies the protocol version 2 host key algorithms that the client wants to use in order of preference.
\par              The default for this option is: \ldblquote ssh-rsa,ssh-dss\rdblquote .
\par 
\par      HostKeyAlias
\par              Specifies an alias that should be used instead of the real host name when looking up or saving the host key
\par              in the host key database files.  This option is useful for tunneling SSH connections or for multiple
\par              servers running on a single host.
\par 
\par      HostName
\par              Specifies the real host name to log into.  This can be used to specify nicknames or abbreviations for
\par              hosts.  The default is the name given on the command line.  Numeric IP addresses are also permitted (both
\par              on the command line and in HostName specifications).
\par 
\par      IdentitiesOnly
\par              Specifies that ssh(1) should only use the authentication identity files configured in the ssh_config files,
\par              even if ssh-agent(1) offers more identities.  The argument to this keyword must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  This
\par              option is intended for situations where ssh-agent offers many different identities.  The default is \ldblquote no\rdblquote .
\par 
\par      IdentityFile
\par              Specifies a file from which the user\rquote s RSA or DSA authentication identity is read.  The default is
\par              ~/.ssh/identity for protocol version 1, and ~/.ssh/id_rsa and ~/.ssh/id_dsa for protocol version 2.  Addi-
\par              tionally, any identities represented by the authentication agent will be used for authentication.
\par 
\par              The file name may use the tilde syntax to refer to a user\rquote s home directory or one of the following escape
\par              characters: \lquote %d\rquote  (local user\rquote s home directory), \lquote %u\rquote  (local user name), \lquote %l\rquote  (local host name), \lquote %h\rquote 
\par              (remote host name) or \lquote %r\rquote  (remote user name).
\par 
\par              It is possible to have multiple identity files specified in configuration files; all these identities will
\par              be tried in sequence.
\par 
\par      KbdInteractiveAuthentication
\par              Specifies whether to use keyboard-interactive authentication.  The argument to this keyword must be \ldblquote yes\rdblquote 
\par              or \ldblquote no\rdblquote .  The default is \ldblquote yes\rdblquote .
\par 
\par      KbdInteractiveDevices
\par              Specifies the list of methods to use in keyboard-interactive authentication.  Multiple method names must be
\par              comma-separated.  The default is to use the server specified list.  The methods available vary depending on
\par              what the server supports.  For an OpenSSH server, it may be zero or more of: \ldblquote bsdauth\rdblquote , \ldblquote pam\rdblquote , and \ldblquote skey\rdblquote .
\par 
\par      LocalCommand
\par              Specifies a command to execute on the local machine after successfully connecting to the server.  The com-
\par              mand string extends to the end of the line, and is executed with the user\rquote s shell.  The following escape
\par              character substitutions will be performed: \lquote %d\rquote  (local user\rquote s home directory), \lquote %h\rquote  (remote host name),
\par              \lquote %l\rquote  (local host name), \lquote %n\rquote  (host name as provided on the command line), \lquote %p\rquote  (remote port), \lquote %r\rquote  (remote
\par              user name) or \lquote %u\rquote  (local user name).  This directive is ignored unless PermitLocalCommand has been
\par              enabled.
\par 
\par      LocalForward
\par              Specifies that a TCP port on the local machine be forwarded over the secure channel to the specified host
\par              and port from the remote machine.  The first argument must be [bind_address:]port and the second argument
\par              must be host:hostport.  IPv6 addresses can be specified by enclosing addresses in square brackets or by
\par              using an alternative syntax: [bind_address/]port and host/hostport.  Multiple forwardings may be specified,
\par              and additional forwardings can be given on the command line.  Only the superuser can forward privileged
\par              ports.  By default, the local port is bound in accordance with the GatewayPorts setting.  However, an
\par              explicit bind_address may be used to bind the connection to a specific address.  The bind_address of
\par              \ldblquote localhost\rdblquote  indicates that the listening port be bound for local use only, while an empty address or \lquote *\rquote 
\par              indicates that the port should be available from all interfaces.
\par 
\par      LogLevel
\par              Gives the verbosity level that is used when logging messages from ssh(1).  The possible values are: QUIET,
\par              FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.  The default is INFO.  DEBUG and DEBUG1 are
\par              equivalent.  DEBUG2 and DEBUG3 each specify higher levels of verbose output.
\par 
\par      MACs    Specifies the MAC (message authentication code) algorithms in order of preference.  The MAC algorithm is
\par              used in protocol version 2 for data integrity protection.  Multiple algorithms must be comma-separated.
\par              The default is:
\par 
\par                    hmac-md5,hmac-sha1,umac-64@openssh.com,
\par                    hmac-ripemd160,hmac-sha1-96,hmac-md5-96
\par 
\par      NoHostAuthenticationForLocalhost
\par              This option can be used if the home directory is shared across machines.  In this case localhost will refer
\par              to a different machine on each of the machines and the user will get many warnings about changed host keys.
\par              However, this option disables host authentication for localhost.  The argument to this keyword must be
\par              \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is to check the host key for localhost.
\par 
\par      NumberOfPasswordPrompts
\par              Specifies the number of password prompts before giving up.  The argument to this keyword must be an inte-
\par              ger.  The default is 3.
\par 
\par      PasswordAuthentication
\par              Specifies whether to use password authentication.  The argument to this keyword must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The
\par              default is \ldblquote yes\rdblquote .
\par 
\par      PermitLocalCommand
\par              Allow local command execution via the LocalCommand option or using the !command escape sequence in ssh(1).
\par              The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par      Port    Specifies the port number to connect on the remote host.  The default is 22.
\par 
\par      PreferredAuthentications
\par              Specifies the order in which the client should try protocol 2 authentication methods.  This allows a client
\par              to prefer one method (e.g. keyboard-interactive) over another method (e.g. password) The default for this
\par              option is: \ldblquote gssapi-with-mic, hostbased, publickey, keyboard-interactive, password\rdblquote .
\par 
\par      Protocol
\par              Specifies the protocol versions ssh(1) should support in order of preference.  The possible values are \lquote 1\rquote 
\par              and \lquote 2\rquote .  Multiple versions must be comma-separated.  The default is \ldblquote 2,1\rdblquote .  This means that ssh tries ver-
\par              sion 2 and falls back to version 1 if version 2 is not available.
\par 
\par      ProxyCommand
\par              Specifies the command to use to connect to the server.  The command string extends to the end of the line,
\par              and is executed with the user\rquote s shell.  In the command string, \lquote %h\rquote  will be substituted by the host name to
\par              connect and \lquote %p\rquote  by the port.  The command can be basically anything, and should read from its standard
\par              input and write to its standard output.  It should eventually connect an sshd(8) server running on some
\par              machine, or execute sshd -i somewhere.  Host key management will be done using the HostName of the host
\par              being connected (defaulting to the name typed by the user).  Setting the command to \ldblquote none\rdblquote  disables this
\par              option entirely.  Note that CheckHostIP is not available for connects with a proxy command.
\par 
\par              This directive is useful in conjunction with nc(1) and its proxy support.  For example, the following
\par              directive would connect via an HTTP proxy at 192.0.2.0:
\par 
\par                 ProxyCommand /usr/bin/nc -X connect -x 192.0.2.0:8080 %h %p
\par 
\par      PubkeyAuthentication
\par              Specifies whether to try public key authentication.  The argument to this keyword must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .
\par              The default is \ldblquote yes\rdblquote .  This option applies to protocol version 2 only.
\par 
\par      RekeyLimit
\par              Specifies the maximum amount of data that may be transmitted before the session key is renegotiated.  The
\par              argument is the number of bytes, with an optional suffix of \lquote K\rquote , \lquote M\rquote , or \lquote G\rquote  to indicate Kilobytes,
\par              Megabytes, or Gigabytes, respectively.  The default is between \lquote 1G\rquote  and \lquote 4G\rquote , depending on the cipher.
\par              This option applies to protocol version 2 only.
\par 
\par      RemoteForward
\par              Specifies that a TCP port on the remote machine be forwarded over the secure channel to the specified host
\par              and port from the local machine.  The first argument must be [bind_address:]port and the second argument
\par              must be host:hostport.  IPv6 addresses can be specified by enclosing addresses in square brackets or by
\par              using an alternative syntax: [bind_address/]port and host/hostport.  Multiple forwardings may be specified,
\par              and additional forwardings can be given on the command line.  Privileged ports can be forwarded only when
\par              logging in as root on the remote machine.
\par 
\par              If the port argument is \lquote 0\rquote , the listen port will be dynamically allocated on the server and reported to
\par              the client at run time.
\par 
\par              If the bind_address is not specified, the default is to only bind to loopback addresses.  If the
\par              bind_address is \lquote *\rquote  or an empty string, then the forwarding is requested to listen on all interfaces.
\par              Specifying a remote bind_address will only succeed if the server\rquote s GatewayPorts option is enabled (see
\par              sshd_config(5)).
\par 
\par      RhostsRSAAuthentication
\par              Specifies whether to try rhosts based authentication with RSA host authentication.  The argument must be
\par              \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .  This option applies to protocol version 1 only and requires ssh(1) to
\par              be setuid root.
\par 
\par      RSAAuthentication
\par              Specifies whether to try RSA authentication.  The argument to this keyword must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  RSA
\par              authentication will only be attempted if the identity file exists, or an authentication agent is running.
\par              The default is \ldblquote yes\rdblquote .  Note that this option applies to protocol version 1 only.
\par 
\par      SendEnv
\par              Specifies what variables from the local environ(7) should be sent to the server.  Note that environment
\par              passing is only supported for protocol 2.  The server must also support it, and the server must be config-
\par              ured to accept these environment variables.  Refer to AcceptEnv in sshd_config(5) for how to configure the
\par              server.  Variables are specified by name, which may contain wildcard characters.  Multiple environment
\par              variables may be separated by whitespace or spread across multiple SendEnv directives.  The default is not
\par              to send any environment variables.
\par 
\par              See PATTERNS for more information on patterns.
\par 
\par      ServerAliveCountMax
\par              Sets the number of server alive messages (see below) which may be sent without ssh(1) receiving any mes-
\par              sages back from the server.  If this threshold is reached while server alive messages are being sent, ssh
\par              will disconnect from the server, terminating the session.  It is important to note that the use of server
\par              alive messages is very different from TCPKeepAlive (below).  The server alive messages are sent through the
\par              encrypted channel and therefore will not be spoofable.  The TCP keepalive option enabled by TCPKeepAlive is
\par              spoofable.  The server alive mechanism is valuable when the client or server depend on knowing when a con-
\par              nection has become inactive.
\par 
\par              The default value is 3.  If, for example, ServerAliveInterval (see below) is set to 15 and
\par              ServerAliveCountMax is left at the default, if the server becomes unresponsive, ssh will disconnect after
\par              approximately 45 seconds.  This option applies to protocol version 2 only.
\par 
\par      ServerAliveInterval
\par              Sets a timeout interval in seconds after which if no data has been received from the server, ssh(1) will
\par              send a message through the encrypted channel to request a response from the server.  The default is 0,
\par              indicating that these messages will not be sent to the server.  This option applies to protocol version 2
\par              only.
\par 
\par      SmartcardDevice
\par              Specifies which smartcard device to use.  The argument to this keyword is the device ssh(1) should use to
\par              communicate with a smartcard used for storing the user\rquote s private RSA key.  By default, no device is speci-
\par              fied and smartcard support is not activated.
\par 
\par      StrictHostKeyChecking
\par              If this flag is set to \ldblquote yes\rdblquote , ssh(1) will never automatically add host keys to the ~/.ssh/known_hosts file,
\par              and refuses to connect to hosts whose host key has changed.  This provides maximum protection against tro-
\par              jan horse attacks, though it can be annoying when the /etc/ssh/ssh_known_hosts file is poorly maintained or
\par              when connections to new hosts are frequently made.  This option forces the user to manually add all new
\par              hosts.  If this flag is set to \ldblquote no\rdblquote , ssh will automatically add new host keys to the user known hosts
\par              files.  If this flag is set to \ldblquote ask\rdblquote , new host keys will be added to the user known host files only after
\par              the user has confirmed that is what they really want to do, and ssh will refuse to connect to hosts whose
\par              host key has changed.  The host keys of known hosts will be verified automatically in all cases.  The argu-
\par              ment must be \ldblquote yes\rdblquote , \ldblquote no\rdblquote , or \ldblquote ask\rdblquote .  The default is \ldblquote ask\rdblquote .
\par 
\par      TCPKeepAlive
\par              Specifies whether the system should send TCP keepalive messages to the other side.  If they are sent, death
\par              of the connection or crash of one of the machines will be properly noticed.  However, this means that con-
\par              nections will die if the route is down temporarily, and some people find it annoying.
\par 
\par              The default is \ldblquote yes\rdblquote  (to send TCP keepalive messages), and the client will notice if the network goes down
\par              or the remote host dies.  This is important in scripts, and many users want it too.
\par 
\par              To disable TCP keepalive messages, the value should be set to \ldblquote no\rdblquote .
\par 
\par      Tunnel  Request tun(4) device forwarding between the client and the server.  The argument must be \ldblquote yes\rdblquote ,
\par              \ldblquote point-to-point\rdblquote  (layer 3), \ldblquote ethernet\rdblquote  (layer 2), or \ldblquote no\rdblquote .  Specifying \ldblquote yes\rdblquote  requests the default tunnel
\par              mode, which is \ldblquote point-to-point\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par      TunnelDevice
\par              Specifies the tun(4) devices to open on the client (local_tun) and the server (remote_tun).
\par 
\par              The argument must be local_tun[:remote_tun].  The devices may be specified by numerical ID or the keyword
\par              \ldblquote any\rdblquote , which uses the next available tunnel device.  If remote_tun is not specified, it defaults to \ldblquote any\rdblquote .
\par              The default is \ldblquote any:any\rdblquote .
\par 
\par      UsePrivilegedPort
\par              Specifies whether to use a privileged port for outgoing connections.  The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .
\par              The default is \ldblquote no\rdblquote .  If set to \ldblquote yes\rdblquote , ssh(1) must be setuid root.  Note that this option must be set to
\par              \ldblquote yes\rdblquote  for RhostsRSAAuthentication with older servers.
\par 
\par      User    Specifies the user to log in as.  This can be useful when a different user name is used on different
\par              machines.  This saves the trouble of having to remember to give the user name on the command line.
\par 
\par      UserKnownHostsFile
\par              Specifies a file to use for the user host key database instead of ~/.ssh/known_hosts.
\par 
\par      VerifyHostKeyDNS
\par              Specifies whether to verify the remote key using DNS and SSHFP resource records.  If this option is set to
\par              \ldblquote yes\rdblquote , the client will implicitly trust keys that match a secure fingerprint from DNS.  Insecure finger-
\par              prints will be handled as if this option was set to \ldblquote ask\rdblquote .  If this option is set to \ldblquote ask\rdblquote , information on
\par              fingerprint match will be displayed, but the user will still need to confirm new host keys according to the
\par              StrictHostKeyChecking option.  The argument must be \ldblquote yes\rdblquote , \ldblquote no\rdblquote , or \ldblquote ask\rdblquote .  The default is \ldblquote no\rdblquote .  Note that
\par              this option applies to protocol version 2 only.
\par 
\par              See also VERIFYING HOST KEYS in ssh(1).
\par 
\par      VisualHostKey
\par              If this flag is set to \ldblquote yes\rdblquote , an ASCII art representation of the remote host key fingerprint is printed in
\par              addition to the hex fingerprint string at login and for unknown host keys.  If this flag is set to \ldblquote no\rdblquote , no
\par              fingerprint strings are printed at login and only the hex fingerprint string will be printed for unknown
\par              host keys.  The default is \ldblquote no\rdblquote .
\par 
\par      XAuthLocation
\par              Specifies the full pathname of the xauth(1) program.  The default is /usr/bin/xauth.
\par 
\par PATTERNS
\par      A pattern consists of zero or more non-whitespace characters, \lquote *\rquote  (a wildcard that matches zero or more charac-
\par      ters), or \lquote ?\rquote  (a wildcard that matches exactly one character).  For example, to specify a set of declarations for
\par      any host in the \ldblquote .co.uk\rdblquote  set of domains, the following pattern could be used:
\par 
\par            Host *.co.uk
\par 
\par      The following pattern would match any host in the 192.168.0.[0-9] network range:
\par 
\par            Host 192.168.0.?
\par 
\par      A pattern-list is a comma-separated list of patterns.  Patterns within pattern-lists may be negated by preceding
\par      them with an exclamation mark (\lquote !\rquote ).  For example, to allow a key to be used from anywhere within an organisation
\par      except from the \ldblquote dialup\rdblquote  pool, the following entry (in authorized_keys) could be used:
\par 
\par            from="!*.dialup.example.com,*.example.com"
\par 
\par FILES
\par      ~/.ssh/config
\par              This is the per-user configuration file.  The format of this file is described above.  This file is used by
\par              the SSH client.  Because of the potential for abuse, this file must have strict permissions: read/write for
\par              the user, and not accessible by others.
\par 
\par      /etc/ssh/ssh_config
\par              Systemwide configuration file.  This file provides defaults for those values that are not specified in the
\par              user\rquote s configuration file, and for those users who do not have a configuration file.  This file must be
\par              world-readable.
\par 
\par SEE ALSO
\par      ssh(1)
\par 
\par AUTHORS
\par      OpenSSH is a derivative of the original and free ssh 1.2.12 release by Tatu Ylonen.  Aaron Campbell, Bob Beck,
\par      Markus Friedl, Niels Provos, Theo de Raadt and Dug Song removed many bugs, re-added newer features and created
\par      OpenSSH.  Markus Friedl contributed the support for SSH protocol versions 1.5 and 2.0.
\par 
\par BSD                             January 5, 2014                            BSD\par}