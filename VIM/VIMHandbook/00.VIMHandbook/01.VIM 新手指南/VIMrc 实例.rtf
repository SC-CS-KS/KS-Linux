{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}}{\colortbl;\red0\green0\blue255;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid47060026\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1179160356}
}
{\*\listoverridetable
{\listoverride\listid1179160356\listoverridecount0\ls1}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf2 VIMrc \uc2\u23454 \'ca\'b5\u20363 \'c0\'fd\uc1
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 \uc2\u20197 \'d2\'d4\u19979 \'cf\'c2\u26159 \'ca\'c7\u28359 \'b5\'e1\u29392 \'ba\'fc\u33258 \'d7\'d4\u24049 \'bc\'ba\u30340 \'b5\'c4 .vimrc\u65292 \'a3\'ac \u26377 \'d3\'d0\u35768 \'d0\'ed\u22810 \'b6\'e0\u26681 \'b8\'f9\u25454 \'be\'dd\u28359 \'b5\'e1\u29392 \'ba\'fc\u33258 \'d7\'d4\u24049 \'bc\'ba\u30340 \'b5\'c4\u20064 \'cf\'b0\u24815 \'b9\'df\u20570 \'d7\'f6\u30340 \'b5\'c4\u35774 \'c9\'e8\u32622 \'d6\'c3\u65292 \'a3\'ac \u22914 \'c8\'e7\u26524 \'b9\'fb\u20320 \'c4\'e3\u35201 \'d2\'aa\u22312 \'d4\'da\u33258 \'d7\'d4\u24049 \'bc\'ba\u26426 \'bb\'fa\u22120 \'c6\'f7\u19978 \'c9\'cf\u20351 \'ca\'b9\u29992 \'d3\'c3\u30340 \'b5\'c4\u35805 \'bb\'b0\u65292 \'a3\'ac\u35831 \'c7\'eb\u26681 \'b8\'f9\u25454 \'be\'dd\u20320 \'c4\'e3\u33258 \'d7\'d4\u24049 \'bc\'ba\u30340 \'b5\'c4\u20064 \'cf\'b0\u24815 \'b9\'df\u20316 \'d7\'f7\u20986 \'b3\'f6\u30456 \'cf\'e0\u24212 \'d3\'a6\u20462 \'d0\'de\u25913 \'b8\'c4\u12290 \'a1\'a3\uc1
\par 
\par \uc2\u21478 \'c1\'ed\u22806 \'cd\'e2\u65292 \'a3\'ac \u36825 \'d5\'e2\u20221 \'b7\'dd .vimrc \u37324 \'c0\'ef\u38754 \'c3\'e6\u26377 \'d3\'d0\u35768 \'d0\'ed\u22810 \'b6\'e0\u35774 \'c9\'e8\u32622 \'d6\'c3\u26159 \'ca\'c7\u38024 \'d5\'eb\u23545 \'b6\'d4\u25554 \'b2\'e5\u20214 \'bc\'fe\u30340 \'b5\'c4\u65292 \'a3\'ac \u21482 \'d6\'bb\u26377 \'d3\'d0\u23433 \'b0\'b2\u35013 \'d7\'b0\u20102 \'c1\'cb\u30456 \'cf\'e0\u24212 \'d3\'a6\u25554 \'b2\'e5\u20214 \'bc\'fe\u21518 \'ba\'f3\u65292 \'a3\'ac\u36825 \'d5\'e2\u20123 \'d0\'a9\u37197 \'c5\'e4\u32622 \'d6\'c3\u25165 \'b2\'c5\u20250 \'bb\'e1\u36215 \'c6\'f0\u20316 \'d7\'f7\u29992 \'d3\'c3\u12290 \'a1\'a3 \u36825 \'d5\'e2\u37324 \'c0\'ef\u26377 \'d3\'d0\u28359 \'b5\'e1\u29392 \'ba\'fc\u20351 \'ca\'b9\u29992 \'d3\'c3\u30340 \'b5\'c4\u20840 \'c8\'ab\u37096 \'b2\'bf\u25554 \'b2\'e5\u20214 \'bc\'fe\u25171 \'b4\'f2\u21253 \'b0\'fc\u65292 \'a3\'ac\uc1
\par \uc2\u22914 \'c8\'e7\u26524 \'b9\'fb\u38656 \'d0\'e8\u35201 \'d2\'aa\u30340 \'b5\'c4\u35805 \'bb\'b0\u21487 \'bf\'c9\u20197 \'d2\'d4\u30452 \'d6\'b1\u25509 \'bd\'d3\u19979 \'cf\'c2\u36733 \'d4\'d8\u65292 \'a3\'ac Linux \u29992 \'d3\'c3\u25143 \'bb\'a7\u23558 \'bd\'ab\u35813 \'b8\'c3\u21387 \'d1\'b9\u32553 \'cb\'f5\u21253 \'b0\'fc\u35299 \'bd\'e2\u21387 \'d1\'b9\u21040 \'b5\'bd $HOME \u30446 \'c4\'bf\u24405 \'c2\'bc\u19979 \'cf\'c2\u21363 \'bc\'b4\u21487 \'bf\'c9\u20351 \'ca\'b9\u29992 \'d3\'c3\u65292 \'a3\'ac\uc1
\par Windows \uc2\u29992 \'d3\'c3\u25143 \'bb\'a7\u21487 \'bf\'c9\u20197 \'d2\'d4\u23558 \'bd\'ab\u21387 \'d1\'b9\u32553 \'cb\'f5\u21253 \'b0\'fc\u35299 \'bd\'e2\u21387 \'d1\'b9\u21518 \'ba\'f3\u65292 \'a3\'ac \u23558 \'bd\'ab\u35299 \'bd\'e2\u21387 \'d1\'b9\u24471 \'b5\'c3\u21040 \'b5\'bd\u30340 \'b5\'c4 .vim \u25991 \'ce\'c4\u20214 \'bc\'fe\u22841 \'bc\'d0\u25913 \'b8\'c4\u21517 \'c3\'fb\u20026 \'ce\'aa vimfiles\u65292 \'a3\'ac\u28982 \'c8\'bb\u21518 \'ba\'f3\u22797 \'b8\'b4\u21046 \'d6\'c6\u21040 \'b5\'bd VIM \u30340 \'b5\'c4\u23433 \'b0\'b2\u35013 \'d7\'b0\u36335 \'c2\'b7\u24452 \'be\'b6\u19979 \'cf\'c2\u65292 \'a3\'ac \u35206 \'b8\'b2\u30422 \'b8\'c7\u21407 \'d4\'ad\u26377 \'d3\'d0\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par 
\par "=============================================================================
\par " General settings
\par "=============================================================================
\par 
\par set nocp
\par set ru
\par set cin
\par set sm
\par set ai
\par set sw=4
\par set ts=4
\par set et
\par set cino=:0g0t0(sus
\par set lbr
\par set hls
\par set backspace=indent,eol,start
\par set whichwrap=b,s,<,>,[,]
\par set fo+=mB
\par set selectmode=
\par set mousemodel=popup
\par set keymodel=
\par set selection=inclusive
\par set matchpairs+=<:>
\par 
\par " for gdbvim
\par set noshowcmd
\par 
\par " Encoding settings
\par if has("multi_byte")
\par \~\~\~ " Set fileencoding priority
\par \~\~ if getfsize(expand("%")) > 0
\par \~\~\~\~\~\~ set fileencodings=ucs-bom,utf-8,cp936,big5,euc-jp,euc-kr,latin1
\par \~\~ else
\par \~\~\~\~\~\~ set fileencodings=cp936,big5,euc-jp,euc-kr,latin1
\par \~\~ endif
\par 
\par \~\~\~ " CJK environment detection and corresponding setting
\par \~\~ if v:lang =~ "^zh_CN"
\par \~\~\~\~\~\~\~ " Use cp936 to support GBK, euc-cn == gb2312
\par \~\~\~\~\~\~ set encoding=cp936
\par \~\~\~\~\~\~ set termencoding=cp936
\par \~\~\~\~\~\~ set fileencoding=cp936
\par \~\~ elseif v:lang =~ "^zh_TW"
\par \~\~\~\~\~\~\~ " cp950, big5 or euc-tw
\par \~\~\~\~\~\~\~ " Are they equal to each other?
\par \~\~\~\~\~\~ set encoding=big5
\par \~\~\~\~\~\~ set termencoding=big5
\par \~\~\~\~\~\~ set fileencoding=big5
\par \~\~ elseif v:lang =~ "^ko"
\par \~\~\~\~\~\~\~ " Copied from someone's dotfile, untested
\par \~\~\~\~\~\~ set encoding=euc-kr
\par \~\~\~\~\~\~ set termencoding=euc-kr
\par \~\~\~\~\~\~ set fileencoding=euc-kr
\par \~\~ elseif v:lang =~ "^ja_JP"
\par \~\~\~\~\~\~\~ " Copied from someone's dotfile, unteste
\par \~\~\~\~\~\~ set encoding=euc-jp
\par \~\~\~\~\~\~ set termencoding=euc-jp
\par \~\~\~\~\~\~ set fileencoding=euc-jp
\par \~\~ endif
\par \~\~\~ " Detect UTF-8 locale, and replace CJK setting if needed
\par \~\~ if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
\par \~\~\~\~\~\~ set encoding=utf-8
\par \~\~\~\~\~\~ set termencoding=utf-8
\par \~\~\~\~\~\~ set fileencoding=utf-8
\par \~\~ endif
\par else
\par \~\~ echoerr "Sorry, this version of (g)vim was not compiled with multi_byte"
\par endif
\par 
\par " Cursor movement
\par nnoremap <Down> gj
\par nnoremap <Up> gk
\par vnoremap <Down> gj
\par vnoremap <Up> gk
\par inoremap <Down> <C-o>gj
\par inoremap <Up> <C-o>gk
\par 
\par nnoremap <End> g$
\par nnoremap <Home> g0
\par vnoremap <End> g$
\par vnoremap <Home> g0
\par inoremap <End> <C-o>g$
\par inoremap <Home> <C-o>g0
\par 
\par nmap <C-F4> :confirm bd<CR>
\par vmap <C-F4> <ESC>:confirm bd
\par omap <C-F4> <ESC>:confirm bd
\par map! <C-F4> <ESC>:confirm bd
\par 
\par " Move lines
\par nmap <C-Down> :<C-u>move .+1<CR>
\par nmap <C-Up> :<C-u>move .-2<CR>
\par 
\par imap <C-Down> <C-o>:<C-u>move .+1<CR>
\par imap <C-Up> <C-o>:<C-u>move .-2<CR>
\par 
\par vmap <C-Down> :move '>+1<CR>gv
\par vmap <C-Up> :move '<-2<CR>gv
\par 
\par " Toggle line number
\par nmap <C-F12> :set nu!<CR>
\par imap <C-F12> <C-o>:set nu!<CR>
\par 
\par " Toggle spell check
\par " For VIM7 only
\par nmap <C-F11> :set spell!<CR>
\par imap <C-F11> <C-o>:set spell!<CR>
\par 
\par syntax on
\par if (has("gui_running"))
\par \~\~ set nowrap
\par \~\~ set guioptions+=b
\par \~\~ colo torte
\par else
\par \~\~ set wrap
\par \~\~ colo ron
\par endif
\par 
\par " ============================================================================
\par " Plugins settings
\par " ============================================================================
\par 
\par " Sketch
\par command -nargs=0 ToggleSketch call ToggleSketch()
\par 
\par " WinManager
\par " let g:winManagerWindowLayout = "FileExplorer"
\par 
\par " Tlist
\par let Tlist_Use_Right_Window=1
\par let Tlist_File_Fold_Auto_Close=1
\par 
\par " A
\par let g:alternateNoDefaultAlternate=1
\par " VIM7 doesn't support this.
\par "let g:alternateExtensions_\{"aspx"\} = "aspx.cs,aspx.CS"
\par "let g:alternateExtensions_\{"aspx.cs"\} = "aspx,ASPX"
\par 
\par " LateXSuite
\par filetype plugin on
\par set grepprg=grep" -nH" $*
\par 
\par " Viki
\par let g:vikiNameSuffix=".viki"
\par augr viki
\par au!
\par au BufRead,BufNewFile *.viki set filetype=viki
\par augr END
\par 
\par "=============================================================================
\par " Functions
\par "=============================================================================
\par 
\par function TextWork()
\par \~\~ set nocin
\par \~\~ set nosm
\par \~\~ set noai
\par \~\~ set tw=78
\par \~\~ set sw=8
\par \~\~ set ts=8
\par \~\~ set nowrap
\par endfunction
\par 
\par function NoTextWork()
\par \~\~ set cin
\par \~\~ set sm
\par \~\~ set ai
\par \~\~ set tw=0
\par \~\~ set sw=4
\par \~\~ set ts=4
\par \~\~ if (!has("gui_running"))
\par \~\~\~\~\~\~ set wrap
\par \~\~ endif
\par endfunction
\par 
\par function CodeWork()
\par \~\~ call NoTextWork()
\par \~\~ WManager
\par \~\~ Tlist
\par endfunction
\par 
\par function TimeStamp()
\par \~\~ let curposn= SaveWinPosn()
\par \~\~ %s/"$Date: .*"$/"=strftime("$Date: %Y-%m-%d %H:%M:%S$")/ge
\par \~\~ %s/Last Change: .*$/"=strftime("Last Change: %Y-%m-%d %H:%M:%S")/ge
\par \~\~ %s/Last Modified: .*$/"=strftime("Last Modified: %Y-%m-%d %H:%M:%S")/ge
\par \~\~\~ " Replace once and never update.
\par \~\~ %s/Created: *$/"=strftime("Created: %Y-%m-%d %H:%M:%S")/ge
\par \~\~ call RestoreWinPosn(curposn)
\par endfunction
\par 
\par function AutoTimeStamp()
\par \~\~ augr tagdate
\par \~\~ au!
\par \~\~ au BufWritePre,FileWritePre * call TimeStamp()
\par \~\~ augr END
\par endfunction
\par call AutoTimeStamp()
\par 
\par function NoAutoTimeStamp()
\par \~\~ augr tagdate
\par \~\~ au!
\par \~\~ augr END
\par endfunction
\par 
\par "=============================================================================
\par " Commands
\par "=============================================================================
\par 
\par command -nargs=0 TextWork call TextWork()
\par command -nargs=0 NoTextWork call NoTextWork()
\par command -nargs=0 CodeWork call CodeWork()
\par command -nargs=0 TimeStamp call TimeStamp()
\par command -nargs=0 AutoTimeStamp call AutoTimeStamp()
\par command -nargs=0 NoAutoTimeStamp call NoAutoTimeStamp()
\par 
\par "=============================================================================
\par " Platform dependent settings
\par "=============================================================================
\par 
\par "-----------------------------------------------------------------------------
\par " Common
\par "-----------------------------------------------------------------------------
\par 
\par " Calender
\par let g:calendar_diary="/home/edward/document/diary"
\par 
\par " Spell Check
\par " VIM7 supports built-in spell check.
\par "function SpellCheck()
\par "\~\~\~ !aspell --lang=en -c %
\par "endfunction
\par "command -nargs=0 SpellCheck call SpellCheck()
\par 
\par " Mail Template
\par function MailWork()
\par \~\~ 0r ~/document/text/mailtemp.txt
\par \~\~ %s/%%date%%/"=strftime("%Y-%m-%d")/ge
\par \~\~ %s/%%cursor%%//ge
\par \~\~ call TextWork()
\par endfunction
\par command -nargs=0 MailWork call MailWork()
\par 
\par " Use kittiemake as the default compiler
\par function Kittie()
\par \~\~ set makeprg=kittiemake
\par endfunction
\par command -nargs=0 Kittie call Kittie()
\par 
\par " Don't use kittiemake as the default compiler
\par function NoKittie()
\par \~\~ set makeprg=make
\par endfunction
\par command -nargs=0 NoKittie call NoKittie()
\par 
\par "-----------------------------------------------------------------------------
\par " Win32
\par "-----------------------------------------------------------------------------
\par 
\par "if (has("gui_running"))
\par "\~\~\~ set guifont=\uc2\u26032 \'d0\'c2\u23435 \'cb\'ce\u20307 \'cc\'e5:h9:cGB2312\uc1
\par "endif
\par 
\par " For LaTeX Suite
\par "let g:Tex_CompileRule_dvi="latex -src-specials -interaction=nonstopmode $*"
\par "set shellslash
\par 
\par " For tee
\par "set shellpipe=2>&1"|" tee
\par 
\par " VimTweak
\par "if (has("gui_running"))
\par "\~\~\~ command -nargs=1 SetAlpha call libcallnr("vimtweak.dll",\~
\par "\~\~\~\~\~\~\~ ""SetAlpha", )
\par "\~\~\~ command -nargs=0 TopMost call libcallnr("vimtweak.dll",
\par "\~\~\~\~\~\~\~ ""EnableTopMost", 1)
\par "\~\~\~ command -nargs=0 NoTopMost call libcallnr("vimtweak.dll",\~
\par "\~\~\~\~\~\~\~ ""EnableTopMost", 0)
\par "endif
\par 
\par "-----------------------------------------------------------------------------
\par " Linux
\par "-----------------------------------------------------------------------------
\par 
\par "For LaTeX Suite
\par "function RemoteLaTeX()
\par "\~\~\~ let g:Tex_ViewRule_dvi="xdvi -editor 'gvim --servername """
\par "\~\~\~\~\~\~\~ ".expand("%:p").""" --remote-silent'"
\par "\~\~\~ augr remotelatex
\par "\~\~\~ au!
\par "\~\~\~ augr END
\par "endfunction
\par 
\par "augr remotelatex
\par "au!
\par "au BufRead * call RemoteLaTeX()
\par "augr END
\par 
\par let g:Tex_CompileRule_dvi
\par \~\~\~ "="latex -src-specials -interaction=nonstopmode $*"
\par let g:Tex_ViewRule_dvi
\par \~\~\~ "="xdvi -editor 'gvim --servername latex-suite --remote-silent'"
\par 
\par if (has("gui_running"))
\par \~\~ set guifont=Bitstream" Vera" Sans" Mono" 9
\par \~\~ source $VIMRUNTIME/delmenu.vim
\par \~\~ source $VIMRUNTIME/menu.vim
\par endif\par}