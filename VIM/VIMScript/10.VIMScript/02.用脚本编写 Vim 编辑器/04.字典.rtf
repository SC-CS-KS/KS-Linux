{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}{\f4\fnil\fcharset2 Symbol;}{\f5\fnil\fcharset0 Courier New;}}{\colortbl;\red0\green0\blue255;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid918915961\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid429302114}
{\list\listtemplateid1245442284
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid1255008416}
}
{\*\listoverridetable
{\listoverride\listid429302114\listoverridecount0\ls1}
{\listoverride\listid1255008416\listoverridecount0\ls2}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf2 04.\uc2\u23383 \'d7\'d6\u20856 \'b5\'e4\uc1
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\i\fs20 \uc2\u23398 \'d1\'a7\u20064 \'cf\'b0\u20309 \'ba\'ce\u26102 \'ca\'b1\u20351 \'ca\'b9\u29992 \'d3\'c3\u23383 \'d7\'d6\u20856 \'b5\'e4\u20351 \'ca\'b9\u20195 \'b4\'fa\u30721 \'c2\'eb\u26356 \'b8\'fc\u31616 \'bc\'f2\u27905 \'bd\'e0\u65292 \'a3\'ac\u26356 \'b8\'fc\u36805 \'d1\'b8\u36895 \'cb\'d9\uc1
\par \plain \f1\fs20 \uc2\u23383 \'d7\'d6\u20856 \'b5\'e4\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u20174 \'b4\'d3\u21015 \'c1\'d0\u34920 \'b1\'ed\u25552 \'cc\'e1\u20379 \'b9\'a9\u19981 \'b2\'bb\u21516 \'cd\'ac\u20248 \'d3\'c5\u21270 \'bb\'af\u21644 \'ba\'cd\u26435 \'c8\'a8\u34913 \'ba\'e2\u30340 \'b5\'c4\u23481 \'c8\'dd\u22120 \'c6\'f7\u25968 \'ca\'fd\u25454 \'be\'dd\u32467 \'bd\'e1\u26500 \'b9\'b9\u12290 \'a1\'a3\u29305 \'cc\'d8\u21035 \'b1\'f0\u35828 \'cb\'b5\u26126 \'c3\'f7\u30340 \'b5\'c4\u26159 \'ca\'c7\u65292 \'a3\'ac\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u20803 \'d4\'aa\u32032 \'cb\'d8\u23384 \'b4\'e6\u20648 \'b4\'a2\u30340 \'b5\'c4\u39034 \'cb\'b3\u24207 \'d0\'f2\u26159 \'ca\'c7\u26080 \'ce\'de\u20851 \'b9\'d8\u32039 \'bd\'f4\u35201 \'d2\'aa\u30340 \'b5\'c4\u65292 \'a3\'ac\u27599 \'c3\'bf\u20010 \'b8\'f6\u20803 \'d4\'aa\u32032 \'cb\'d8\u30340 \'b5\'c4\u36523 \'c9\'ed\u20221 \'b7\'dd\u26159 \'ca\'c7\u26126 \'c3\'f7\u30830 \'c8\'b7\u30340 \'b5\'c4\u12290 \'a1\'a3\u22312 \'d4\'da\u20171 \'bd\'e9\u32461 \'c9\'dc Vimscript\~\uc1\plain \f1\ul\fs20\cf1 \uc2\u31995 \'cf\'b5\u21015 \'c1\'d0\uc1\plain \f1\fs20 \~\uc2\u25991 \'ce\'c4\u31456 \'d5\'c2\u30340 \'b5\'c4\u31532 \'b5\'da\u22235 \'cb\'c4\u31687 \'c6\'aa\u20013 \'d6\'d0\u65292 \'a3\'acDamian Conway \u23558 \'bd\'ab\u21521 \'cf\'f2\u24744 \'c4\'fa\u20171 \'bd\'e9\u32461 \'c9\'dc\u23383 \'d7\'d6\u20856 \'b5\'e4\u65292 \'a3\'ac\u21253 \'b0\'fc\u25324 \'c0\'a8\u23427 \'cb\'fc\u20204 \'c3\'c7\u30340 \'b5\'c4\u22522 \'bb\'f9\u30784 \'b4\'a1\u35821 \'d3\'ef\u27861 \'b7\'a8\u21644 \'ba\'cd\u35768 \'d0\'ed\u22810 \'b6\'e0\u20989 \'ba\'af\u25968 \'ca\'fd\u30340 \'b5\'c4\u27010 \'b8\'c5\u36848 \'ca\'f6\u12290 \'a1\'a3\u20182 \'cb\'fb\u26368 \'d7\'ee\u21518 \'ba\'f3\u36824 \'bb\'b9\u20030 \'be\'d9\u20986 \'b3\'f6\u20102 \'c1\'cb\u19968 \'d2\'bb\u20123 \'d0\'a9\u20363 \'c0\'fd\u23376 \'d7\'d3\u65292 \'a3\'ac\u26469 \'c0\'b4\u35828 \'cb\'b5\u26126 \'c3\'f7\u22914 \'c8\'e7\u20309 \'ba\'ce\u20351 \'ca\'b9\u29992 \'d3\'c3\u23383 \'d7\'d6\u20856 \'b5\'e4\u33719 \'bb\'f1\u21462 \'c8\'a1\u26356 \'b8\'fc\u26377 \'d3\'d0\u25928 \'d0\'a7\u30340 \'b5\'c4\u25968 \'ca\'fd\u25454 \'be\'dd\u22788 \'b4\'a6\u29702 \'c0\'ed\u21644 \'ba\'cd\u26356 \'b8\'fc\u31616 \'bc\'f2\u27905 \'bd\'e0\u30340 \'b5\'c4\u20195 \'b4\'fa\u30721 \'c2\'eb\u12290 \'a1\'a3\uc1
\par 
\par Vimscript \uc2\u20013 \'d6\'d0\u30340 \'b5\'c4\uc1\plain \f1\i\fs20 \uc2\u23383 \'d7\'d6\u20856 \'b5\'e4\uc1\plain \f1\fs20 \~\uc2\u22312 \'d4\'da\u26412 \'b1\'be\u36136 \'d6\'ca\u19978 \'c9\'cf\u21644 \'ba\'cd AWK \u20851 \'b9\'d8\u32852 \'c1\'aa\u25968 \'ca\'fd\u32452 \'d7\'e9\u12289 \'a1\'a2Perl \u21704 \'b9\'fe\u24076 \'cf\'a3\u34920 \'b1\'ed\u65292 \'a3\'ac\u25110 \'bb\'f2\u32773 \'d5\'df Python \u23383 \'d7\'d6\u20856 \'b5\'e4\u37117 \'b6\'bc\u26159 \'ca\'c7\u19968 \'d2\'bb\u26679 \'d1\'f9\u12290 \'a1\'a3\u20063 \'d2\'b2\u23601 \'be\'cd\u26159 \'ca\'c7\u35828 \'cb\'b5\u65292 \'a3\'ac\u36825 \'d5\'e2\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u26080 \'ce\'de\u24207 \'d0\'f2\u23481 \'c8\'dd\u22120 \'c6\'f7\u65292 \'a3\'ac\u25353 \'b0\'b4\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u25972 \'d5\'fb\u25968 \'ca\'fd\u26469 \'c0\'b4\u36827 \'bd\'f8\u34892 \'d0\'d0\u32034 \'cb\'f7\u24341 \'d2\'fd\u12290 \'a1\'a3\uc1
\par Vimscript\~\plain \f1\ul\fs20\cf1 \uc2\u31995 \'cf\'b5\u21015 \'c1\'d0\uc1\plain \f1\fs20 \~\uc2\u30340 \'b5\'c4\u31532 \'b5\'da\u22235 \'cb\'c4\u31687 \'c6\'aa\u23558 \'bd\'ab\u20250 \'bb\'e1\u20171 \'bd\'e9\u32461 \'c9\'dc\u36825 \'d5\'e2\u19968 \'d2\'bb\u37325 \'d6\'d8\u35201 \'d2\'aa\u30340 \'b5\'c4\u25968 \'ca\'fd\u25454 \'be\'dd\u32467 \'bd\'e1\u26500 \'b9\'b9\u65292 \'a3\'ac\u24182 \'b2\'a2\u35299 \'bd\'e2\u37322 \'ca\'cd\u20854 \'c6\'e4\u22797 \'b8\'b4\u21046 \'d6\'c6\u12289 \'a1\'a2\u36807 \'b9\'fd\u28388 \'c2\'cb\u12289 \'a1\'a2\u25193 \'c0\'a9\u23637 \'d5\'b9\u21644 \'ba\'cd\u25972 \'d5\'fb\u29702 \'c0\'ed\u30340 \'b5\'c4\u22810 \'b6\'e0\u39033 \'cf\'ee\u21151 \'b9\'a6\u33021 \'c4\'dc\u12290 \'a1\'a3\u36825 \'d5\'e2\u20123 \'d0\'a9\u20363 \'c0\'fd\u23376 \'d7\'d3\u37325 \'d6\'d8\u28857 \'b5\'e3\u35828 \'cb\'b5\u26126 \'c3\'f7\u21015 \'c1\'d0\u34920 \'b1\'ed\u21644 \'ba\'cd\u23383 \'d7\'d6\u20856 \'b5\'e4\u20043 \'d6\'ae\u38388 \'bc\'e4\u30340 \'b5\'c4\u24046 \'b2\'ee\u21035 \'b1\'f0\u65292 \'a3\'ac\u20197 \'d2\'d4\u21450 \'bc\'b0\u19968 \'d2\'bb\u20123 \'d0\'a9\u20363 \'c0\'fd\u23376 \'d7\'d3\u12290 \'a1\'a3\u22312 \'d4\'da\u36825 \'d5\'e2\u20123 \'d0\'a9\u20363 \'c0\'fd\u23376 \'d7\'d3\u20013 \'d6\'d0\u65292 \'a3\'ac\u19982 \'d3\'eb\u35762 \'bd\'b2\u36848 \'ca\'f6\u20869 \'c4\'da\u32622 \'d6\'c3\u21015 \'c1\'d0\u34920 \'b1\'ed\u30340 \'b5\'c4\~\uc1\plain \f1\ul\fs20\cf1 \uc2\u20351 \'ca\'b9\u29992 \'d3\'c3\u33050 \'bd\'c5\u26412 \'b1\'be\u32534 \'b1\'e0\u20889 \'d0\'b4 Vim \u32534 \'b1\'e0\u36753 \'bc\'ad\u22120 \'c6\'f7\u65292 \'a3\'ac\u31532 \'b5\'da 3 \u37096 \'b2\'bf\u20998 \'b7\'d6\u65306 \'a3\'ba\u20869 \'c4\'da\u32622 \'d6\'c3\u21015 \'c1\'d0\u34920 \'b1\'ed\uc1\plain \f1\fs20 \~\uc2\u20013 \'d6\'d0\u24320 \'bf\'aa\u21457 \'b7\'a2\u20986 \'b3\'f6\u30340 \'b5\'c4\u22522 \'bb\'f9\u20110 \'d3\'da\u21015 \'c1\'d0\u34920 \'b1\'ed\u30340 \'b5\'c4\u35299 \'bd\'e2\u20915 \'be\'f6\u26041 \'b7\'bd\u26696 \'b0\'b8\u30456 \'cf\'e0\u27604 \'b1\'c8\u65292 \'a3\'ac\u20351 \'ca\'b9\u29992 \'d3\'c3\u23383 \'d7\'d6\u20856 \'b5\'e4\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u26356 \'b8\'fc\u22909 \'ba\'c3\u30340 \'b5\'c4\u26367 \'cc\'e6\u20195 \'b4\'fa\u26041 \'b7\'bd\u26696 \'b0\'b8\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 Vimscript \uc2\u20013 \'d6\'d0\u30340 \'b5\'c4\u23383 \'d7\'d6\u20856 \'b5\'e4\uc1
\par \plain \f1\fs20 \uc2\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u36890 \'cd\'a8\u36807 \'b9\'fd\u22312 \'d4\'da\u38190 \'bc\'fc/\u20540 \'d6\'b5\u23545 \'b6\'d4\u21015 \'c1\'d0\u34920 \'b1\'ed\u19978 \'c9\'cf\u21152 \'bc\'d3\u33457 \'bb\'a8\u25324 \'c0\'a8\u21495 \'ba\'c5\u26469 \'c0\'b4\u21019 \'b4\'b4\u24314 \'bd\'a8\u19968 \'d2\'bb\u20010 \'b8\'f6\u23383 \'d7\'d6\u20856 \'b5\'e4\u12290 \'a1\'a3\u22312 \'d4\'da\u27599 \'c3\'bf\u19968 \'d2\'bb\u23545 \'b6\'d4\u20013 \'d6\'d0\u65292 \'a3\'ac\u38190 \'bc\'fc\u21644 \'ba\'cd\u20540 \'d6\'b5\u29992 \'d3\'c3\u20882 \'c3\'b0\u21495 \'ba\'c5\u20998 \'b7\'d6\u38548 \'b8\'f4\u12290 \'a1\'a3\u20363 \'c0\'fd\u22914 \'c8\'e7\u65306 \'a3\'ba\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 1. \u21019 \'b4\'b4\u24314 \'bd\'a8\u19968 \'d2\'bb\u20010 \'b8\'f6\u23383 \'d7\'d6\u20856 \'b5\'e4\uc1
\par \plain \f1\fs20 let seen = \{\}   \plain \f1\i\fs20 " Haven't seen anything yet
\par \plain \f1\fs20 \'0al
\par let daytonum = \{ 'Sun':0, 'Mon':1, 'Tue':2, 'Wed':3, 'Thu':4, 'Fri':5, 'Sat':6 \}\'0al
\par let diagnosis = \{\'0a 
\par     \\   'Perl'   : 'Tourettes',\'0a 
\par     \\   'Python' : 'OCD',\'0a 
\par     \\   'Lisp'   : 'Megalomania',\'0a 
\par     \\   'PHP'    : 'Idiot-Savant',\'0a 
\par     \\   'C++'    : 'Savant-Idiot',\'0a 
\par     \\   'C#'     : 'Sociopathy',\'0a 
\par     \\   'Java'   : 'Delusional',\'0a 
\par     \\\}
\par \uc2\u19968 \'d2\'bb\u26086 \'b5\'a9\u23436 \'cd\'ea\u25104 \'b3\'c9\u20102 \'c1\'cb\u21019 \'b4\'b4\u24314 \'bd\'a8\u23383 \'d7\'d6\u20856 \'b5\'e4\u65292 \'a3\'ac\u24744 \'c4\'fa\u23601 \'be\'cd\u21487 \'bf\'c9\u20197 \'d2\'d4\u20351 \'ca\'b9\u29992 \'d3\'c3\u26631 \'b1\'ea\u20934 \'d7\'bc\u26041 \'b7\'bd\u25324 \'c0\'a8\u21495 \'ba\'c5\u32034 \'cb\'f7\u24341 \'d2\'fd\u31526 \'b7\'fb\u21495 \'ba\'c5\u26469 \'c0\'b4\u35775 \'b7\'c3\u38382 \'ce\'ca\u23427 \'cb\'fc\u30340 \'b5\'c4\u20540 \'d6\'b5\u65292 \'a3\'ac\u20294 \'b5\'ab\u26159 \'ca\'c7\u35201 \'d2\'aa\u20351 \'ca\'b9\u29992 \'d3\'c3\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u20316 \'d7\'f7\u20026 \'ce\'aa\u32034 \'cb\'f7\u24341 \'d2\'fd\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u25968 \'ca\'fd\u23383 \'d7\'d6\u65306 \'a3\'ba\uc1
\par let lang = input("Patient's name? ")\'0a\'0a
\par \'0al
\par let Dx = diagnosis[lang]
\par \uc2\u22914 \'c8\'e7\u26524 \'b9\'fb\u22312 \'d4\'da\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u19981 \'b2\'bb\u23384 \'b4\'e6\u22312 \'d4\'da\u35813 \'b8\'c3\u38190 \'bc\'fc\u65292 \'a3\'ac\u23601 \'be\'cd\u25243 \'c5\'d7\u20986 \'b3\'f6\u19968 \'d2\'bb\u20010 \'b8\'f6\u24322 \'d2\'ec\u24120 \'b3\'a3\u65306 \'a3\'ba\uc1
\par let Dx = diagnosis['Ruby']\'0a
\par \plain \f1\b\fs20 **E716: Key not present in Dictionary: Ruby**
\par \plain \f1\fs20 \uc2\u19981 \'b2\'bb\u36807 \'b9\'fd\u65292 \'a3\'ac\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u20351 \'ca\'b9\u29992 \'d3\'c3\~get()\~\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u23433 \'b0\'b2\u20840 \'c8\'ab\u22320 \'b5\'d8\u35775 \'b7\'c3\u38382 \'ce\'ca\u19968 \'d2\'bb\u20010 \'b8\'f6\u21487 \'bf\'c9\u33021 \'c4\'dc\u19981 \'b2\'bb\u23384 \'b4\'e6\u22312 \'d4\'da\u30340 \'b5\'c4\u26465 \'cc\'f5\u30446 \'c4\'bf\u12290 \'a1\'a3get()\~\u20351 \'ca\'b9\u29992 \'d3\'c3\u20004 \'c1\'bd\u20010 \'b8\'f6\u21442 \'b2\'ce\u25968 \'ca\'fd\u65306 \'a3\'ba\u19968 \'d2\'bb\u20010 \'b8\'f6\u26159 \'ca\'c7\u23383 \'d7\'d6\u20856 \'b5\'e4\u26412 \'b1\'be\u36523 \'c9\'ed\u65292 \'a3\'ac\u21478 \'c1\'ed\u19968 \'d2\'bb\u20010 \'b8\'f6\u26159 \'ca\'c7\u22312 \'d4\'da\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u26597 \'b2\'e9\u25214 \'d5\'d2\u30340 \'b5\'c4\u38190 \'bc\'fc\u12290 \'a1\'a3\u22914 \'c8\'e7\u26524 \'b9\'fb\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u23384 \'b4\'e6\u22312 \'d4\'da\u35813 \'b8\'c3\u38190 \'bc\'fc\u65292 \'a3\'ac\u23601 \'be\'cd\u20250 \'bb\'e1\u36820 \'b7\'b5\u22238 \'bb\'d8\u30456 \'cf\'e0\u24212 \'d3\'a6\u30340 \'b5\'c4\u20540 \'d6\'b5\u65307 \'a3\'bb\u22914 \'c8\'e7\u26524 \'b9\'fb\u38190 \'bc\'fc\u19981 \'b2\'bb\u23384 \'b4\'e6\u22312 \'d4\'da\u65292 \'a3\'acget()\~\u23601 \'be\'cd\u36820 \'b7\'b5\u22238 \'bb\'d8\u38646 \'c1\'e3\u12290 \'a1\'a3\u25110 \'bb\'f2\u32773 \'d5\'df\u65292 \'a3\'ac\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u25351 \'d6\'b8\u23450 \'b6\'a8\u31532 \'b5\'da\u19977 \'c8\'fd\u20010 \'b8\'f6\u21442 \'b2\'ce\u25968 \'ca\'fd\u65292 \'a3\'ac\u22914 \'c8\'e7\u26524 \'b9\'fb\u27809 \'c3\'bb\u26377 \'d3\'d0\u25214 \'d5\'d2\u21040 \'b5\'bd\u38190 \'bc\'fc\u65292 \'a3\'acget()\~\u36820 \'b7\'b5\u22238 \'bb\'d8\u36825 \'d5\'e2\u20010 \'b8\'f6\u20540 \'d6\'b5\u65306 \'a3\'ba\uc1
\par let Dx = get(diagnosis, 'Ruby')                     \'0a
\par \plain \f1\i\fs20 " Returns: 0
\par \plain \f1\fs20 \'0al
\par let Dx = get(diagnosis, 'Ruby', 'Schizophrenia')    \'0a
\par \plain \f1\i\fs20 " Returns: 'Schizophrenia'
\par \plain \f1\fs20 \uc2\u35775 \'b7\'c3\u38382 \'ce\'ca\u19968 \'d2\'bb\u20010 \'b8\'f6\u29305 \'cc\'d8\u27530 \'ca\'e2\u30340 \'b5\'c4\u23383 \'d7\'d6\u20856 \'b5\'e4\u26465 \'cc\'f5\u30446 \'c4\'bf\u36824 \'bb\'b9\u26377 \'d3\'d0\u31532 \'b5\'da\u19977 \'c8\'fd\u20010 \'b8\'f6\u26041 \'b7\'bd\u27861 \'b7\'a8\u12290 \'a1\'a3\u22914 \'c8\'e7\u26524 \'b9\'fb\u36825 \'d5\'e2\u20010 \'b8\'f6\u26465 \'cc\'f5\u30446 \'c4\'bf\u30340 \'b5\'c4\u38190 \'bc\'fc\u21482 \'d6\'bb\u30001 \'d3\'c9\u26631 \'b1\'ea\u35782 \'ca\'b6\u31526 \'b7\'fb\u23383 \'d7\'d6\u31526 \'b7\'fb\u65288 \'a3\'a8\u23383 \'d7\'d6\u27597 \'c4\'b8\u25968 \'ca\'fd\u23383 \'d7\'d6\u21644 \'ba\'cd\u19979 \'cf\'c2\u21010 \'bb\'ae\u32447 \'cf\'df\u65289 \'a3\'a9\u32452 \'d7\'e9\u25104 \'b3\'c9\u65292 \'a3\'ac\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u20351 \'ca\'b9\u29992 \'d3\'c3 \ldblquote \u28857 \'b5\'e3\u31526 \'b7\'fb\u21495 \'ba\'c5\rdblquote  \u35775 \'b7\'c3\u38382 \'ce\'ca\u30456 \'cf\'e0\u24212 \'d3\'a6\u30340 \'b5\'c4\u20540 \'d6\'b5\u65292 \'a3\'ac\u23601 \'be\'cd\u20687 \'cf\'f1\u65306 \'a3\'ba\uc1
\par let Dx = diagnosis.Lisp                    \plain \f1\i\fs20 " Same as: diagnosis['Lisp']
\par \plain \f1\fs20 \'0ad
\par diagnosis.Perl = 'Multiple Personality'    \plain \f1\i\fs20 " Same as: diagnosis['Perl']
\par \plain \f1\fs20 \uc2\u36825 \'d5\'e2\u31181 \'d6\'d6\u29305 \'cc\'d8\u27530 \'ca\'e2\u38480 \'cf\'de\u21046 \'d6\'c6\u31526 \'b7\'fb\u21495 \'ba\'c5\u20351 \'ca\'b9\u24471 \'b5\'c3\u23383 \'d7\'d6\u20856 \'b5\'e4\u23601 \'be\'cd\u20687 \'cf\'f1\u35760 \'bc\'c7\u24405 \'c2\'bc\u25110 \'bb\'f2\u32773 \'d5\'df\u32467 \'bd\'e1\u26500 \'b9\'b9\u20307 \'cc\'e5\u19968 \'d2\'bb\u26679 \'d1\'f9\u26131 \'d2\'d7\u20110 \'d3\'da\u20351 \'ca\'b9\u29992 \'d3\'c3\u65306 \'a3\'ba\uc1
\par let user = \{\}\'0a\'0a
\par \'0al
\par let user.name    = 'Bram'\'0al
\par let user.acct    = 123007\'0al
\par let user.pin_num = '1337'
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u23383 \'d7\'d6\u20856 \'b5\'e4\u30340 \'b5\'c4\u25209 \'c5\'fa\u37327 \'c1\'bf\u22788 \'b4\'a6\u29702 \'c0\'ed\uc1
\par \plain \f1\fs20 Vimscript \uc2\u25552 \'cc\'e1\u20379 \'b9\'a9\u19968 \'d2\'bb\u20123 \'d0\'a9\u21151 \'b9\'a6\u33021 \'c4\'dc\u65292 \'a3\'ac\u20801 \'d4\'ca\u35768 \'d0\'ed\u24744 \'c4\'fa\u33719 \'bb\'f1\u21462 \'c8\'a1\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u25152 \'cb\'f9\u26377 \'d3\'d0\u38190 \'bc\'fc\u30340 \'b5\'c4\u21015 \'c1\'d0\u34920 \'b1\'ed\u12289 \'a1\'a2\u25152 \'cb\'f9\u26377 \'d3\'d0\u20540 \'d6\'b5\u30340 \'b5\'c4\u21015 \'c1\'d0\u34920 \'b1\'ed\u65292 \'a3\'ac\u25110 \'bb\'f2\u32773 \'d5\'df\u25152 \'cb\'f9\u26377 \'d3\'d0\u38190 \'bc\'fc/\u20540 \'d6\'b5\u23545 \'b6\'d4\u30340 \'b5\'c4\u21015 \'c1\'d0\u34920 \'b1\'ed\u65306 \'a3\'ba\uc1
\par let keylist   = keys(dict)\'0al
\par let valuelist = values(dict)\'0al
\par let pairlist  = items(dict)
\par \uc2\u36825 \'d5\'e2\u20010 \'b8\'f6\~items()\~\u20989 \'ba\'af\u25968 \'ca\'fd\u20107 \'ca\'c2\u23454 \'ca\'b5\u19978 \'c9\'cf\u36820 \'b7\'b5\u22238 \'bb\'d8\u19968 \'d2\'bb\u20010 \'b8\'f6\u21015 \'c1\'d0\u34920 \'b1\'ed\u30340 \'b5\'c4\u28165 \'c7\'e5\u21333 \'b5\'a5\u65292 \'a3\'ac\u20854 \'c6\'e4\u20013 \'d6\'d0\u65292 \'a3\'ac\u27599 \'c3\'bf\u20010 \'b8\'f6 \ldblquote \u20869 \'c4\'da\u37096 \'b2\'bf\rdblquote  \u28165 \'c7\'e5\u21333 \'b5\'a5\u27491 \'d5\'fd\u22909 \'ba\'c3\u26377 \'d3\'d0\u20004 \'c1\'bd\u20010 \'b8\'f6\u20803 \'d4\'aa\u32032 \'cb\'d8\u65306 \'a3\'ba\u19968 \'d2\'bb\u20010 \'b8\'f6\u38190 \'bc\'fc\u21450 \'bc\'b0\u20854 \'c6\'e4\u23545 \'b6\'d4\u24212 \'d3\'a6\u20540 \'d6\'b5\u12290 \'a1\'a3\u22240 \'d2\'f2\u27492 \'b4\'cb\u65292 \'a3\'acitems()\~\u22312 \'d4\'da\u24744 \'c4\'fa\u24819 \'cf\'eb\u35201 \'d2\'aa\u36845 \'b5\'fc\u20195 \'b4\'fa\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u25152 \'cb\'f9\u26377 \'d3\'d0\u26465 \'cc\'f5\u30446 \'c4\'bf\u30340 \'b5\'c4\u26102 \'ca\'b1\u20505 \'ba\'f2\u23588 \'d3\'c8\u20026 \'ce\'aa\u26041 \'b7\'bd\u20415 \'b1\'e3\u65306 \'a3\'ba\uc1
\par \plain \f1\b\fs20 for [next_key, next_val] in items(dict)
\par \plain \f1\fs20     let result = process(next_val)\'0a 
\par     echo "Result for " next_key " is " result\'0ae
\par endfor
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u36171 \'b8\'b3\u20540 \'d6\'b5\u21644 \'ba\'cd\u36523 \'c9\'ed\u20221 \'b7\'dd\uc1
\par \plain \f1\fs20 \uc2\u22312 \'d4\'da\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u36171 \'b8\'b3\u20540 \'d6\'b5\u23601 \'be\'cd\u21644 \'ba\'cd\u22312 \'d4\'da Vimscript \u21015 \'c1\'d0\u34920 \'b1\'ed\u20013 \'d6\'d0\u19968 \'d2\'bb\u26679 \'d1\'f9\u12290 \'a1\'a3\u23383 \'d7\'d6\u20856 \'b5\'e4\u30001 \'d3\'c9\u24341 \'d2\'fd\u29992 \'d3\'c3\u65288 \'a3\'a8\u21363 \'bc\'b4\u25351 \'d6\'b8\u38024 \'d5\'eb\u65289 \'a3\'a9\u26469 \'c0\'b4\u34920 \'b1\'ed\u31034 \'ca\'be\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u23558 \'bd\'ab\u23383 \'d7\'d6\u20856 \'b5\'e4\u36171 \'b8\'b3\u32473 \'b8\'f8\u21478 \'c1\'ed\u19968 \'d2\'bb\u20010 \'b8\'f6\u21464 \'b1\'e4\u37327 \'c1\'bf\u23601 \'be\'cd\u23558 \'bd\'ab\u20004 \'c1\'bd\u20010 \'b8\'f6\u21464 \'b1\'e4\u37327 \'c1\'bf\u35774 \'c9\'e8\u20026 \'ce\'aa\u30456 \'cf\'e0\u21516 \'cd\'ac\u30340 \'b5\'c4\u24213 \'b5\'d7\u23618 \'b2\'e3\u25968 \'ca\'fd\u25454 \'be\'dd\u32467 \'bd\'e1\u26500 \'b9\'b9\u65292 \'a3\'ac\u21069 \'c7\'b0\u32773 \'d5\'df\u30456 \'cf\'e0\u24403 \'b5\'b1\u20110 \'d3\'da\u21518 \'ba\'f3\u32773 \'d5\'df\u30340 \'b5\'c4\u21035 \'b1\'f0\u21517 \'c3\'fb\u12290 \'a1\'a3\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u39318 \'ca\'d7\u20808 \'cf\'c8\u36890 \'cd\'a8\u36807 \'b9\'fd\u22797 \'b8\'b4\u21046 \'d6\'c6\u25110 \'bb\'f2\u32773 \'d5\'df\u28145 \'c9\'ee\u22797 \'b8\'b4\u21046 \'d6\'c6\u65288 \'a3\'a8deep-coping\u65289 \'a3\'a9\u21407 \'d4\'ad\u22987 \'ca\'bc\u20869 \'c4\'da\u23481 \'c8\'dd\u26469 \'c0\'b4\u35299 \'bd\'e2\u20915 \'be\'f6\u36825 \'d5\'e2\u20010 \'b8\'f6\u38382 \'ce\'ca\u39064 \'cc\'e2\u65306 \'a3\'ba\uc1
\par let dict2 = dict1             \plain \f1\i\fs20 " dict2 just another name for dict1
\par \plain \f1\fs20                                   \'0al
\par let dict3 = copy(dict1)       \plain \f1\i\fs20 " dict3 has a copy of dict1's top-level elements
\par \plain \f1\fs20 \'0al
\par let dict4 = deepcopy(dict1)   \plain \f1\i\fs20 " dict4 has a copy of dict1 (all the way down)
\par \plain \f1\fs20 \uc2\u21644 \'ba\'cd\u21015 \'c1\'d0\u34920 \'b1\'ed\u19968 \'d2\'bb\u26679 \'d1\'f9\u65292 \'a3\'ac\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u29992 \'d3\'c3\~\uc1\plain \f1\i\fs20 is\plain \f1\fs20 \~\uc2\u25805 \'b2\'d9\u20316 \'d7\'f7\u31526 \'b7\'fb\u26469 \'c0\'b4\u27604 \'b1\'c8\u36739 \'bd\'cf\u36523 \'c9\'ed\u20221 \'b7\'dd\u65292 \'a3\'ac\u29992 \'d3\'c3\~\uc1\plain \f1\i\fs20 ==\plain \f1\fs20 \~\uc2\u25805 \'b2\'d9\u20316 \'d7\'f7\u31526 \'b7\'fb\u26469 \'c0\'b4\u27604 \'b1\'c8\u36739 \'bd\'cf\u20540 \'d6\'b5\u65306 \'a3\'ba\uc1
\par if dictA is dictB\'0a 
\par \plain \f1\i\fs20     " They alias the same container, so must have the same keys and values\plain \f1\fs20 \'0ae
\par elseif dictA == dictB\'0a 
\par \plain \f1\i\fs20     " Same keys and values, but maybe in different containers\plain \f1\fs20 \'0ae
\par else\'0a 
\par \plain \f1\i\fs20     " Different keys and/or values, so must be different containers\plain \f1\fs20 \'0ae
\par endif
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u28155 \'cc\'ed\u21152 \'bc\'d3\u21644 \'ba\'cd\u21024 \'c9\'be\u38500 \'b3\'fd\u26465 \'cc\'f5\u30446 \'c4\'bf\uc1
\par \plain \f1\fs20 \uc2\u23558 \'bd\'ab\u19968 \'d2\'bb\u20010 \'b8\'f6\u26465 \'cc\'f5\u30446 \'c4\'bf\u28155 \'cc\'ed\u21152 \'bc\'d3\u21040 \'b5\'bd\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u65292 \'a3\'ac\u21482 \'d6\'bb\u38656 \'d0\'e8\u35201 \'d2\'aa\u23545 \'b6\'d4\u26032 \'d0\'c2\u30340 \'b5\'c4\u38190 \'bc\'fc\u36171 \'b8\'b3\u19968 \'d2\'bb\u20010 \'b8\'f6\u20540 \'d6\'b5\u65306 \'a3\'ba\uc1
\par let diagnosis['COBOL'] = 'Dementia'
\par \uc2\u35201 \'d2\'aa\u21512 \'ba\'cf\u24182 \'b2\'a2\u26469 \'c0\'b4\u33258 \'d7\'d4\u20854 \'c6\'e4\u23427 \'cb\'fc\u23383 \'d7\'d6\u20856 \'b5\'e4\u30340 \'b5\'c4\u26465 \'cc\'f5\u30446 \'c4\'bf\u65292 \'a3\'ac\u21487 \'bf\'c9\u20197 \'d2\'d4\u20351 \'ca\'b9\u29992 \'d3\'c3\~extend()\~\u20989 \'ba\'af\u25968 \'ca\'fd\u12290 \'a1\'a3\u31532 \'b5\'da\u19968 \'d2\'bb\u21442 \'b2\'ce\u25968 \'ca\'fd\u65288 \'a3\'a8\u27491 \'d5\'fd\u22312 \'d4\'da\u36827 \'bd\'f8\u34892 \'d0\'d0\u25193 \'c0\'a9\u23637 \'d5\'b9\u30340 \'b5\'c4\u65289 \'a3\'a9\u21644 \'ba\'cd\u31532 \'b5\'da\u20108 \'b6\'fe\u21442 \'b2\'ce\u25968 \'ca\'fd\u65288 \'a3\'a8\u21253 \'b0\'fc\u21547 \'ba\'ac\u39069 \'b6\'ee\u22806 \'cd\'e2\u30340 \'b5\'c4\u26465 \'cc\'f5\u30446 \'c4\'bf\u65289 \'a3\'a9\u37117 \'b6\'bc\u24517 \'b1\'d8\u39035 \'d0\'eb\u26159 \'ca\'c7\u23383 \'d7\'d6\u20856 \'b5\'e4\u65306 \'a3\'ba\uc1
\par call extend(diagnosis, new_diagnoses)
\par \uc2\u24403 \'b5\'b1\u24744 \'c4\'fa\u24819 \'cf\'eb\u35201 \'d2\'aa\u26174 \'cf\'d4\u24335 \'ca\'bd\u28155 \'cc\'ed\u21152 \'bc\'d3\u22810 \'b6\'e0\u20010 \'b8\'f6\u26465 \'cc\'f5\u30446 \'c4\'bf\u26102 \'ca\'b1\u65292 \'a3\'ac\u20351 \'ca\'b9\u29992 \'d3\'c3\~extend()\~\u20063 \'d2\'b2\u26159 \'ca\'c7\u38750 \'b7\'c7\u24120 \'b3\'a3\u26041 \'b7\'bd\u20415 \'b1\'e3\u30340 \'b5\'c4\u65306 \'a3\'ba\uc1
\par call extend(diagnosis, \{'COBOL':'Dementia', 'Forth':'Dyslexia'\})
\par \uc2\u23558 \'bd\'ab\u19968 \'d2\'bb\u20010 \'b8\'f6\u29420 \'b6\'c0\u31435 \'c1\'a2\u26465 \'cc\'f5\u30446 \'c4\'bf\u20174 \'b4\'d3\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u21024 \'c9\'be\u38500 \'b3\'fd\u26377 \'d3\'d0\u20004 \'c1\'bd\u31181 \'d6\'d6\u26041 \'b7\'bd\u27861 \'b7\'a8\u65306 \'a3\'ba\u20351 \'ca\'b9\u29992 \'d3\'c3\u20869 \'c4\'da\u32622 \'d6\'c3\u30340 \'b5\'c4\~remove()\~\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u25110 \'bb\'f2\u32773 \'d5\'df\u20351 \'ca\'b9\u29992 \'d3\'c3\~unlet\~\u21629 \'c3\'fc\u20196 \'c1\'ee\u65306 \'a3\'ba\uc1
\par let removed_value = \plain \f1\b\fs20 remove(dict, "key")unlet\plain \f1\fs20  dict["key"]
\par \uc2\u20174 \'b4\'d3\u19968 \'d2\'bb\u20010 \'b8\'f6\u23383 \'d7\'d6\u20856 \'b5\'e4\u21024 \'c9\'be\u38500 \'b3\'fd\u22810 \'b6\'e0\u20010 \'b8\'f6\u26465 \'cc\'f5\u30446 \'c4\'bf\u26102 \'ca\'b1\u65292 \'a3\'ac\u20351 \'ca\'b9\u29992 \'d3\'c3\~filter()\~\u20250 \'bb\'e1\u26356 \'b8\'fc\u31616 \'bc\'f2\u27905 \'bd\'e0\u65292 \'a3\'ac\u26356 \'b8\'fc\u26377 \'d3\'d0\u25928 \'d0\'a7\u12290 \'a1\'a3filter()\~\u20989 \'ba\'af\u25968 \'ca\'fd\u30340 \'b5\'c4\u24037 \'b9\'a4\u20316 \'d7\'f7\u26041 \'b7\'bd\u27861 \'b7\'a8\u21644 \'ba\'cd\u21015 \'c1\'d0\u34920 \'b1\'ed\u20013 \'d6\'d0\u30340 \'b5\'c4\u30456 \'cf\'e0\u21516 \'cd\'ac\u65292 \'a3\'ac\u38500 \'b3\'fd\u20102 \'c1\'cb\u29992 \'d3\'c3\~v:val\~\u26469 \'c0\'b4\u26816 \'bc\'ec\u27979 \'b2\'e2\u21508 \'b8\'f7\u26465 \'cc\'f5\u30446 \'c4\'bf\u30340 \'b5\'c4\u20540 \'d6\'b5\u65292 \'a3\'ac\u24744 \'c4\'fa\u36824 \'bb\'b9\u21487 \'bf\'c9\u20197 \'d2\'d4\u29992 \'d3\'c3\~v:key\~\u26469 \'c0\'b4\u26816 \'bc\'ec\u27979 \'b2\'e2\u23427 \'cb\'fc\u30340 \'b5\'c4\u38190 \'bc\'fc\u12290 \'a1\'a3\u20363 \'c0\'fd\u22914 \'c8\'e7\u65306 \'a3\'ba\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 2. \u26816 \'bc\'ec\u27979 \'b2\'e2\u20540 \'d6\'b5\u21644 \'ba\'cd\u38190 \'bc\'fc\uc1
\par \plain \f1\i\fs20 " Remove any entry whose key starts with C...\plain \f1\fs20 \'0ac
\par call filter(diagnosis, 'v:key[0] != "C"')\'0a\'0a
\par 
\par \plain \f1\i\fs20 " Remove any entry whose value doesn't contain 'Savant'...\plain \f1\fs20 \'0ac
\par call filter(diagnosis, 'v:val =~ "Savant"')\'0a\'0a
\par 
\par \plain \f1\i\fs20 " Remove any entry whose value is the same as its key...\plain \f1\fs20 \'0ac
\par call filter(diagnosis, 'v:key != v:val')
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u20854 \'c6\'e4\u23427 \'cb\'fc\u23383 \'d7\'d6\u20856 \'b5\'e4\u30456 \'cf\'e0\u20851 \'b9\'d8\u20989 \'ba\'af\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 \uc2\u38500 \'b3\'fd\u20102 \'c1\'cb\~filter()\~\u20197 \'d2\'d4\u22806 \'cd\'e2\u65292 \'a3\'ac\u23383 \'d7\'d6\u20856 \'b5\'e4\u21487 \'bf\'c9\u20197 \'d2\'d4\u20351 \'ca\'b9\u29992 \'d3\'c3\u20854 \'c6\'e4\u23427 \'cb\'fc\u21644 \'ba\'cd\u21015 \'c1\'d0\u34920 \'b1\'ed\u30456 \'cf\'e0\u21516 \'cd\'ac\u30340 \'b5\'c4\u20869 \'c4\'da\u32622 \'d6\'c3\u20989 \'ba\'af\u25968 \'ca\'fd\u21644 \'ba\'cd\u26041 \'b7\'bd\u27861 \'b7\'a8\u12290 \'a1\'a3\u20960 \'bc\'b8\u20046 \'ba\'f5\u22312 \'d4\'da\u25152 \'cb\'f9\u26377 \'d3\'d0\u30340 \'b5\'c4\u24773 \'c7\'e9\u20917 \'bf\'f6\u65288 \'a3\'a8\u26368 \'d7\'ee\u26174 \'cf\'d4\u33879 \'d6\'f8\u30340 \'b5\'c4\u20363 \'c0\'fd\u22806 \'cd\'e2\u26159 \'ca\'c7\~string()\u65289 \'a3\'a9\u19979 \'cf\'c2\u65292 \'a3\'ac\u19968 \'d2\'bb\u20010 \'b8\'f6\u24212 \'d3\'a6\u29992 \'d3\'c3\u21040 \'b5\'bd\u23383 \'d7\'d6\u20856 \'b5\'e4\u30340 \'b5\'c4\u21015 \'c1\'d0\u34920 \'b1\'ed\u20989 \'ba\'af\u25968 \'ca\'fd\u30340 \'b5\'c4\u34892 \'d0\'d0\u20026 \'ce\'aa\u23601 \'be\'cd\u20687 \'cf\'f1\u35813 \'b8\'c3\u20989 \'ba\'af\u25968 \'ca\'fd\u25910 \'ca\'d5\u21040 \'b5\'bd\u20102 \'c1\'cb\u35813 \'b8\'c3\u23383 \'d7\'d6\u20856 \'b5\'e4\u30340 \'b5\'c4\u19968 \'d2\'bb\u20010 \'b8\'f6\u20540 \'d6\'b5\u21015 \'c1\'d0\u34920 \'b1\'ed\u12290 \'a1\'a3\u28165 \'c7\'e5\u21333 \'b5\'a5 3 \u26174 \'cf\'d4\u31034 \'ca\'be\u20102 \'c1\'cb\u26368 \'d7\'ee\u24120 \'b3\'a3\u29992 \'d3\'c3\u30340 \'b5\'c4\u20989 \'ba\'af\u25968 \'ca\'fd\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 3. \u20854 \'c6\'e4\u23427 \'cb\'fc\u36866 \'ca\'ca\u29992 \'d3\'c3\u20110 \'d3\'da\u23383 \'d7\'d6\u20856 \'b5\'e4\u30340 \'b5\'c4\u21015 \'c1\'d0\u34920 \'b1\'ed\u20989 \'ba\'af\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 let is_empty = empty(dict)           \plain \f1\i\fs20 " True if no entries at all
\par \plain \f1\fs20 \'0al
\par let entry_count = len(dict)          \plain \f1\i\fs20 " How many entries?
\par \plain \f1\fs20 \'0al
\par let occurrences = count(dict, str)   \plain \f1\i\fs20 " How many values are equal to str?
\par \plain \f1\fs20 \'0al
\par let greatest = max(dict)             \plain \f1\i\fs20 " Find largest value of any entry\plain \f1\fs20 \'0al
\par let least    = min(dict)             \plain \f1\i\fs20 " Find smallest value of any entry
\par \plain \f1\fs20 \'0ac
\par call map(dict, value_transform_str)  \plain \f1\i\fs20 " Transform values by eval'ing string
\par \plain \f1\fs20 \'0ae
\par echo string(dict)                    \plain \f1\i\fs20 " Print dictionary as key/value pairs
\par \plain \f1\fs20 \uc2\u20869 \'c4\'da\u32622 \'d6\'c3\u30340 \'b5\'c4\~filter()\~\u22312 \'d4\'da\u23383 \'d7\'d6\u20856 \'b5\'e4\u20869 \'c4\'da\u35268 \'b9\'e6\u33539 \'b7\'b6\u21270 \'bb\'af\u25968 \'ca\'fd\u25454 \'be\'dd\u26102 \'ca\'b1\u38750 \'b7\'c7\u24120 \'b3\'a3\u26041 \'b7\'bd\u20415 \'b1\'e3\u12290 \'a1\'a3\u20363 \'c0\'fd\u22914 \'c8\'e7\u65292 \'a3\'ac\u32473 \'b8\'f8\u23450 \'b6\'a8\u19968 \'d2\'bb\u20010 \'b8\'f6\u21253 \'b0\'fc\u21547 \'ba\'ac\u39318 \'ca\'d7\u36873 \'d1\'a1\u29992 \'d3\'c3\u25143 \'bb\'a7\u21517 \'c3\'fb\u65288 \'a3\'a8\u25110 \'bb\'f2\u35768 \'d0\'ed\u25353 \'b0\'b4\u29992 \'d3\'c3\u25143 \'bb\'a7 ID \u32034 \'cb\'f7\u24341 \'d2\'fd\u65289 \'a3\'a9\u30340 \'b5\'c4\u23383 \'d7\'d6\u20856 \'b5\'e4\u65292 \'a3\'ac\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u20445 \'b1\'a3\u35777 \'d6\'a4\u27599 \'c3\'bf\u20010 \'b8\'f6\u21517 \'c3\'fb\u31216 \'b3\'c6\u30340 \'b5\'c4\u22823 \'b4\'f3\u23567 \'d0\'a1\u20889 \'d0\'b4\u37117 \'b6\'bc\u27491 \'d5\'fd\u30830 \'c8\'b7\u65292 \'a3\'ac\u23601 \'be\'cd\u20687 \'cf\'f1\u36825 \'d5\'e2\u26679 \'d1\'f9\u65306 \'a3\'ba\uc1
\par call map( names, 'toupper(v:val[0]) . tolower(v:val[1:])' )
\par \uc2\u35843 \'b5\'f7\u29992 \'d3\'c3\~map()\~\u21487 \'bf\'c9\u20197 \'d2\'d4\u36941 \'b1\'e9\u21382 \'c0\'fa\u21508 \'b8\'f7\u20010 \'b8\'f6\u20540 \'d6\'b5\u65292 \'a3\'ac\u23558 \'bd\'ab\u20854 \'c6\'e4\u20316 \'d7\'f7\u20026 \'ce\'aa\u21035 \'b1\'f0\u21517 \'c3\'fb\u36171 \'b8\'b3\u32473 \'b8\'f8\~v:val\u65292 \'a3\'ac\u22312 \'d4\'da\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u20013 \'d6\'d0\u35745 \'bc\'c6\u31639 \'cb\'e3\u34920 \'b1\'ed\u36798 \'b4\'ef\u24335 \'ca\'bd\u65292 \'a3\'ac\u24182 \'b2\'a2\u29992 \'d3\'c3\u34920 \'b1\'ed\u36798 \'b4\'ef\u24335 \'ca\'bd\u32467 \'bd\'e1\u26524 \'b9\'fb\u26367 \'cc\'e6\u25442 \'bb\'bb\u20540 \'d6\'b5\u12290 \'a1\'a3\u22312 \'d4\'da\u36825 \'d5\'e2\u20010 \'b8\'f6\u20363 \'c0\'fd\u23376 \'d7\'d3\u20013 \'d6\'d0\u65292 \'a3\'ac\u23427 \'cb\'fc\u23558 \'bd\'ab\u21517 \'c3\'fb\u31216 \'b3\'c6\u30340 \'b5\'c4\u39318 \'ca\'d7\u23383 \'d7\'d6\u27597 \'c4\'b8\u22823 \'b4\'f3\u20889 \'d0\'b4\u65292 \'a3\'ac\u20854 \'c6\'e4\u23427 \'cb\'fc\u30340 \'b5\'c4\u23383 \'d7\'d6\u27597 \'c4\'b8\u20445 \'b1\'a3\u25345 \'b3\'d6\u23567 \'d0\'a1\u20889 \'d0\'b4\u65292 \'a3\'ac\u28982 \'c8\'bb\u21518 \'ba\'f3\u29992 \'d3\'c3\u20462 \'d0\'de\u25913 \'b8\'c4\u36807 \'b9\'fd\u30340 \'b5\'c4\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u20316 \'d7\'f7\u20026 \'ce\'aa\u26032 \'d0\'c2\u30340 \'b5\'c4\u21517 \'c3\'fb\u31216 \'b3\'c6\u20540 \'d6\'b5\u12290 \'a1\'a3\uc1
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u37096 \'b2\'bf\u32626 \'ca\'f0\u23383 \'d7\'d6\u20856 \'b5\'e4\u33719 \'bb\'f1\u24471 \'b5\'c3\u26356 \'b8\'fc\u31616 \'bc\'f2\u27905 \'bd\'e0\u30340 \'b5\'c4\u20195 \'b4\'fa\u30721 \'c2\'eb\uc1
\par \plain \f1\fs20 \uc2\u26412 \'b1\'be\u31995 \'cf\'b5\u21015 \'c1\'d0\u30340 \'b5\'c4\~\uc1\plain \f1\ul\fs20\cf1 \uc2\u20351 \'ca\'b9\u29992 \'d3\'c3\u33050 \'bd\'c5\u26412 \'b1\'be\u32534 \'b1\'e0\u20889 \'d0\'b4 Vim \u32534 \'b1\'e0\u36753 \'bc\'ad\u22120 \'c6\'f7\u65292 \'a3\'ac\u31532 \'b5\'da 3 \u37096 \'b2\'bf\u20998 \'b7\'d6\u65306 \'a3\'ba\u20869 \'c4\'da\u32622 \'d6\'c3\u21015 \'c1\'d0\u34920 \'b1\'ed\uc1\plain \f1\fs20 \~\uc2\u29992 \'d3\'c3\u19968 \'d2\'bb\u20010 \'b8\'f6\u22312 \'d4\'da\u25351 \'d6\'b8\u23450 \'b6\'a8\u25991 \'ce\'c4\u26412 \'b1\'be\u21608 \'d6\'dc\u22260 \'ce\'a7\u29983 \'c9\'fa\u25104 \'b3\'c9\u35780 \'c6\'c0\u35770 \'c2\'db\u26694 \'bf\'f2\u30340 \'b5\'c4\u23567 \'d0\'a1\u20363 \'c0\'fd\u23376 \'d7\'d3\u65292 \'a3\'ac\u35299 \'bd\'e2\u37322 \'ca\'cd\u20102 \'c1\'cb Vimscript \u30340 \'b5\'c4\~\uc1\plain \f1\i\fs20 variadic\plain \f1\fs20 \~\uc2\u20989 \'ba\'af\u25968 \'ca\'fd\u21442 \'b2\'ce\u25968 \'ca\'fd\u12290 \'a1\'a3\u21487 \'bf\'c9\u36873 \'d1\'a1\u21442 \'b2\'ce\u25968 \'ca\'fd\u21487 \'bf\'c9\u20197 \'d2\'d4\u28155 \'cc\'ed\u21152 \'bc\'d3\u22312 \'d4\'da\u25991 \'ce\'c4\u26412 \'b1\'be\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u20043 \'d6\'ae\u21518 \'ba\'f3\u65292 \'a3\'ac\u29992 \'d3\'c3\u26469 \'c0\'b4\u25351 \'d6\'b8\u23450 \'b6\'a8\u35780 \'c6\'c0\u35770 \'c2\'db\u20154 \'c8\'cb\u65292 \'a3\'ac\u29992 \'d3\'c3\u20316 \'d7\'f7 \ldblquote \u26694 \'bf\'f2\rdblquote  \u30340 \'b5\'c4\u23383 \'d7\'d6\u31526 \'b7\'fb\u65292 \'a3\'ac\u20197 \'d2\'d4\u21450 \'bc\'b0\u35780 \'c6\'c0\u35770 \'c2\'db\u30340 \'b5\'c4\u23485 \'bf\'ed\u24230 \'b6\'c8\u12290 \'a1\'a3\u28165 \'c7\'e5\u21333 \'b5\'a5 4 \u22797 \'b8\'b4\u21046 \'d6\'c6\u20102 \'c1\'cb\u21407 \'d4\'ad\u22987 \'ca\'bc\u30340 \'b5\'c4\u20989 \'ba\'af\u25968 \'ca\'fd\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 4. \u23558 \'bd\'ab\u21487 \'bf\'c9\u36873 \'d1\'a1\u21442 \'b2\'ce\u25968 \'ca\'fd\u20256 \'b4\'ab\u36882 \'b5\'dd\u20026 \'ce\'aa\u21487 \'bf\'c9\u21464 \'b1\'e4\u21442 \'b2\'ce\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 function! CommentBlock(comment, ...)\'0a 
\par \plain \f1\i\fs20     " If 1 or more optional args, first optional arg is introducer...
\par \plain \f1\fs20     let introducer =  a:0 >= 1  ?  a:1  :  "//"\'0a\'0a
\par 
\par \plain \f1\i\fs20     " If 2 or more optional args, second optional arg is boxing character...
\par \plain \f1\fs20     let box_char   =  a:0 >= 2  ?  a:2  :  "*"\'0a\'0a
\par 
\par \plain \f1\i\fs20     " If 3 or more optional args, third optional arg is comment width...
\par \plain \f1\fs20     let width      =  a:0 >= 3  ?  a:3  :  strlen(a:comment) + 2 \'0a\'0a
\par 
\par \plain \f1\i\fs20     " Build the comment box and put the comment inside it...
\par \plain \f1\fs20     return introducer . repeat(box_char,width) . "\\<CR>"\'0a 
\par     \\    . introducer . " " . a:comment        . "\\<CR>"\'0a 
\par     \\    . introducer . repeat(box_char,width) . "\\<CR>"\'0ae
\par endfunction
\par \uc2\u21487 \'bf\'c9\u21464 \'b1\'e4\u21442 \'b2\'ce\u25968 \'ca\'fd\u65288 \'a3\'a8variadic arguments\u65289 \'a3\'a9\u29992 \'d3\'c3\u20110 \'d3\'da\u25351 \'d6\'b8\u23450 \'b6\'a8\u20989 \'ba\'af\u25968 \'ca\'fd\u36873 \'d1\'a1\u39033 \'cf\'ee\u26159 \'ca\'c7\u24456 \'ba\'dc\u26041 \'b7\'bd\u20415 \'b1\'e3\u30340 \'b5\'c4\u65292 \'a3\'ac\u20294 \'b5\'ab\u26159 \'ca\'c7\u26377 \'d3\'d0\u20004 \'c1\'bd\u20010 \'b8\'f6\u20027 \'d6\'f7\u35201 \'d2\'aa\u30340 \'b5\'c4\u32570 \'c8\'b1\u28857 \'b5\'e3\u65306 \'a3\'ba\u23427 \'cb\'fc\u20204 \'c3\'c7\u23545 \'b6\'d4\u20989 \'ba\'af\u25968 \'ca\'fd\u30340 \'b5\'c4\u21442 \'b2\'ce\u25968 \'ca\'fd\u24378 \'c7\'bf\u21046 \'d6\'c6\u36827 \'bd\'f8\u34892 \'d0\'d0\u26126 \'c3\'f7\u30830 \'c8\'b7\u25490 \'c5\'c5\u24207 \'d0\'f2\u65292 \'a3\'ac\u20294 \'b5\'ab\u22312 \'d4\'da\u20989 \'ba\'af\u25968 \'ca\'fd\u35843 \'b5\'f7\u29992 \'d3\'c3\u26102 \'ca\'b1\u27809 \'c3\'bb\u26377 \'d3\'d0\u26126 \'c3\'f7\u30830 \'c8\'b7\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u37325 \'d6\'d8\u28201 \'ce\'c2\u33258 \'d7\'d4\u21160 \'b6\'af\u35780 \'c6\'c0\u35770 \'c2\'db\uc1
\par \plain \f1\fs20 \uc2\u27491 \'d5\'fd\u22914 \'c8\'e7\~\uc1\plain \f1\ul\fs20\cf1 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 4\uc1\plain \f1\fs20 \~\uc2\u25152 \'cb\'f9\u35828 \'cb\'b5\u26126 \'c3\'f7\u30340 \'b5\'c4\u65292 \'a3\'ac\u24403 \'b5\'b1\u20219 \'c8\'ce\u20309 \'ba\'ce\u21442 \'b2\'ce\u25968 \'ca\'fd\u21487 \'bf\'c9\u36873 \'d1\'a1\u26102 \'ca\'b1\u65292 \'a3\'ac\u36890 \'cd\'a8\u24120 \'b3\'a3\u38656 \'d0\'e8\u35201 \'d2\'aa\u20107 \'ca\'c2\u21069 \'c7\'b0\u20915 \'be\'f6\u23450 \'b6\'a8\u20854 \'c6\'e4\u25351 \'d6\'b8\u23450 \'b6\'a8\u30340 \'b5\'c4\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\u28982 \'c8\'bb\u32780 \'b6\'f8\u65292 \'a3\'ac\u36825 \'d5\'e2\u19968 \'d2\'bb\u38656 \'d0\'e8\u35201 \'d2\'aa\u20984 \'cd\'b9\u26174 \'cf\'d4\u20102 \'c1\'cb\u19968 \'d2\'bb\u20010 \'b8\'f6\u35774 \'c9\'e8\u35745 \'bc\'c6\u38382 \'ce\'ca\u39064 \'cc\'e2\u65306 \'a3\'ba\u20026 \'ce\'aa\u20102 \'c1\'cb\u25351 \'d6\'b8\u23450 \'b6\'a8\u19968 \'d2\'bb\u20010 \'b8\'f6\u31245 \'c9\'d4\u21518 \'ba\'f3\u30340 \'b5\'c4\u36873 \'d1\'a1\u39033 \'cf\'ee\u65292 \'a3\'ac\u29992 \'d3\'c3\u25143 \'bb\'a7\u24517 \'b1\'d8\u39035 \'d0\'eb\u22312 \'d4\'da\u27492 \'b4\'cb\u20043 \'d6\'ae\u21069 \'c7\'b0\u26126 \'c3\'f7\u30830 \'c8\'b7\u22320 \'b5\'d8\u25351 \'d6\'b8\u23450 \'b6\'a8\u25152 \'cb\'f9\u26377 \'d3\'d0\u36873 \'d1\'a1\u39033 \'cf\'ee\u12290 \'a1\'a3\u29702 \'c0\'ed\u24819 \'cf\'eb\u24773 \'c7\'e9\u20917 \'bf\'f6\u19979 \'cf\'c2\u65292 \'a3\'ac\u31532 \'b5\'da\u19968 \'d2\'bb\u36873 \'d1\'a1\u39033 \'cf\'ee\u24212 \'d3\'a6\u35813 \'b8\'c3\u26159 \'ca\'c7\u26368 \'d7\'ee\u24120 \'b3\'a3\u29992 \'d3\'c3\u30340 \'b5\'c4\u65292 \'a3\'ac\u31532 \'b5\'da\u20108 \'b6\'fe\u36873 \'d1\'a1\u39033 \'cf\'ee\u26159 \'ca\'c7\u31532 \'b5\'da\u20108 \'b6\'fe\u24120 \'b3\'a3\u29992 \'d3\'c3\u30340 \'b5\'c4\u65292 \'a3\'ac\u20197 \'d2\'d4\u27492 \'b4\'cb\u31867 \'c0\'e0\u25512 \'cd\'c6\u12290 \'a1\'a3\u20107 \'ca\'c2\u23454 \'ca\'b5\u19978 \'c9\'cf\u65292 \'a3\'ac\u22312 \'d4\'da\u20989 \'ba\'af\u25968 \'ca\'fd\u24191 \'b9\'e3\u27867 \'b7\'ba\u37096 \'b2\'bf\u32626 \'ca\'f0\u20197 \'d2\'d4\u21069 \'c7\'b0\u20915 \'be\'f6\u23450 \'b6\'a8\u36825 \'d5\'e2\u20123 \'d0\'a9\u25490 \'c5\'c5\u24207 \'d0\'f2\u26159 \'ca\'c7\u24456 \'ba\'dc\u22256 \'c0\'a7\u38590 \'c4\'d1\u30340 \'b5\'c4\u65307 \'a3\'bb\u24744 \'c4\'fa\u22914 \'c8\'e7\u20309 \'ba\'ce\u33021 \'c4\'dc\u30693 \'d6\'aa\u36947 \'b5\'c0\u21738 \'c4\'c4\u20010 \'b8\'f6\u36873 \'d1\'a1\u39033 \'cf\'ee\u23545 \'b6\'d4\u22823 \'b4\'f3\u22810 \'b6\'e0\u25968 \'ca\'fd\u20154 \'c8\'cb\u26159 \'ca\'c7\u26368 \'d7\'ee\u37325 \'d6\'d8\u35201 \'d2\'aa\u30340 \'b5\'c4\u65311 \'a3\'bf\uc1
\par \uc2\u20363 \'c0\'fd\u22914 \'c8\'e7\u65292 \'a3\'ac\u22312 \'d4\'da\u28165 \'c7\'e5\u21333 \'b5\'a5 4 \u20013 \'d6\'d0\u30340 \'b5\'c4\~CommentBlock()\~\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u20551 \'bc\'d9\u35774 \'c9\'e8\u35780 \'c6\'c0\u35770 \'c2\'db\u20154 \'c8\'cb\u21487 \'bf\'c9\u33021 \'c4\'dc\u26159 \'ca\'c7\u26368 \'d7\'ee\u38656 \'d0\'e8\u35201 \'d2\'aa\u30340 \'b5\'c4\u21487 \'bf\'c9\u36873 \'d1\'a1\u21442 \'b2\'ce\u25968 \'ca\'fd\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u23558 \'bd\'ab\u20854 \'c6\'e4\u25918 \'b7\'c5\u32622 \'d6\'c3\u22312 \'d4\'da\u21442 \'b2\'ce\u25968 \'ca\'fd\u21015 \'c1\'d0\u34920 \'b1\'ed\u30340 \'b5\'c4\u31532 \'b5\'da\u19968 \'d2\'bb\u20301 \'ce\'bb\u12290 \'a1\'a3\u20294 \'b5\'ab\u26159 \'ca\'c7\u22914 \'c8\'e7\u26524 \'b9\'fb\u36825 \'d5\'e2\u20010 \'b8\'f6\u20989 \'ba\'af\u25968 \'ca\'fd\u29992 \'d3\'c3\u25143 \'bb\'a7\u21482 \'d6\'bb\u29992 \'d3\'c3 C \u21644 \'ba\'cd C++ \u32534 \'b1\'e0\u31243 \'b3\'cc\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u20174 \'b4\'d3\u27809 \'c3\'bb\u26377 \'d3\'d0\u25913 \'b8\'c4\u21464 \'b1\'e4\u36807 \'b9\'fd\u40664 \'c4\'ac\u35748 \'c8\'cf\u35780 \'c6\'c0\u35770 \'c2\'db\u20154 \'c8\'cb\u35201 \'d2\'aa\u24590 \'d4\'f5\u20040 \'c3\'b4\u21150 \'b0\'ec\u65311 \'a3\'bf\u26356 \'b8\'fc\u31967 \'d4\'e3\u31957 \'b8\'e2\u30340 \'b5\'c4\u26159 \'ca\'c7\u65292 \'a3\'ac\u22914 \'c8\'e7\u26524 \'b9\'fb\u35780 \'c6\'c0\u35770 \'c2\'db\u22359 \'bf\'e9\u30340 \'b5\'c4\u23485 \'bf\'ed\u24230 \'b6\'c8\u22240 \'d2\'f2\u21508 \'b8\'f7\u20010 \'b8\'f6\u26032 \'d0\'c2\u39033 \'cf\'ee\u30446 \'c4\'bf\u32780 \'b6\'f8\u19981 \'b2\'bb\u21516 \'cd\'ac\u21448 \'d3\'d6\u20250 \'bb\'e1\u24590 \'d4\'f5\u26679 \'d1\'f9\u65311 \'a3\'bf\u36825 \'d5\'e2\u23558 \'bd\'ab\u26159 \'ca\'c7\u35753 \'c8\'c3\u20154 \'c8\'cb\u24700 \'c4\'d5\u28779 \'bb\'f0\u30340 \'b5\'c4\u65292 \'a3\'ac\u22240 \'d2\'f2\u20026 \'ce\'aa\u24320 \'bf\'aa\u21457 \'b7\'a2\u20154 \'c8\'cb\u21592 \'d4\'b1\u29616 \'cf\'d6\u22312 \'d4\'da\u19981 \'b2\'bb\u24471 \'b5\'c3\u19981 \'b2\'bb\u27599 \'c3\'bf\u27425 \'b4\'ce\u25351 \'d6\'b8\u23450 \'b6\'a8\u25152 \'cb\'f9\u26377 \'d3\'d0\u19977 \'c8\'fd\u20010 \'b8\'f6\u21487 \'bf\'c9\u36873 \'d1\'a1\u21442 \'b2\'ce\u25968 \'ca\'fd\u65292 \'a3\'ac\u21363 \'bc\'b4\u20415 \'b1\'e3\u22914 \'c8\'e7\u27492 \'b4\'cb\u65292 \'a3\'ac\u22836 \'cd\'b7\u20004 \'c1\'bd\u20010 \'b8\'f6\u36824 \'bb\'b9\u26159 \'ca\'c7\u24120 \'b3\'a3\u24120 \'b3\'a3\u20250 \'bb\'e1\u32473 \'b8\'f8\u20986 \'b3\'f6\u20854 \'c6\'e4\u40664 \'c4\'ac\u35748 \'c8\'cf\u20540 \'d6\'b5\u65306 \'a3\'ba\uc1
\par \plain \f1\i\fs20 " Comment of required width, with standard delimiter and box character...\plain \f1\fs20 \'0al
\par let new_comment = CommentBlock(comment_text, '//', '*', comment_width)
\par \uc2\u36825 \'d5\'e2\u20010 \'b8\'f6\u38382 \'ce\'ca\u39064 \'cc\'e2\u20063 \'d2\'b2\u30452 \'d6\'b1\u25509 \'bd\'d3\u23548 \'b5\'bc\u33268 \'d6\'c2\u20102 \'c1\'cb\u31532 \'b5\'da\u20108 \'b6\'fe\u20010 \'b8\'f6\u38382 \'ce\'ca\u39064 \'cc\'e2\u65292 \'a3\'ac\u21363 \'bc\'b4\u24403 \'b5\'b1\u20219 \'c8\'ce\u20309 \'ba\'ce\u36873 \'d1\'a1\u39033 \'cf\'ee\u38656 \'d0\'e8\u35201 \'d2\'aa\u34987 \'b1\'bb\u26126 \'c3\'f7\u30830 \'c8\'b7\u22320 \'b5\'d8\u25351 \'d6\'b8\u23450 \'b6\'a8\u26102 \'ca\'b1\u65292 \'a3\'ac\u23427 \'cb\'fc\u20204 \'c3\'c7\u20013 \'d6\'d0\u30340 \'b5\'c4\u20960 \'bc\'b8\u20010 \'b8\'f6\u37117 \'b6\'bc\u19981 \'b2\'bb\u24471 \'b5\'c3\u19981 \'b2\'bb\u34987 \'b1\'bb\u25351 \'d6\'b8\u23450 \'b6\'a8\u12290 \'a1\'a3\u20294 \'b5\'ab\u26159 \'ca\'c7\u65292 \'a3\'ac\u22240 \'d2\'f2\u20026 \'ce\'aa\u40664 \'c4\'ac\u35748 \'c8\'cf\u26159 \'ca\'c7\u36890 \'cd\'a8\u24120 \'b3\'a3\u26368 \'d7\'ee\u38656 \'d0\'e8\u35201 \'d2\'aa\u30340 \'b5\'c4\u20540 \'d6\'b5\u65292 \'a3\'ac\u29992 \'d3\'c3\u25143 \'bb\'a7\u21487 \'bf\'c9\u33021 \'c4\'dc\u20250 \'bb\'e1\u19981 \'b2\'bb\u29087 \'ca\'ec\u24713 \'cf\'a4\u22914 \'c8\'e7\u20309 \'ba\'ce\u25351 \'d6\'b8\u23450 \'b6\'a8\u36873 \'d1\'a1\u39033 \'cf\'ee\u65292 \'a3\'ac\u22240 \'d2\'f2\u27492 \'b4\'cb\u20063 \'d2\'b2\u19981 \'b2\'bb\u29087 \'ca\'ec\u24713 \'cf\'a4\u25152 \'cb\'f9\u38656 \'d0\'e8\u30340 \'b5\'c4\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\u36825 \'d5\'e2\u23601 \'be\'cd\u20250 \'bb\'e1\u23548 \'b5\'bc\u33268 \'d6\'c2\u22914 \'c8\'e7\u19979 \'cf\'c2\u30340 \'b5\'c4\u23454 \'ca\'b5\u29616 \'cf\'d6\u38169 \'b4\'ed\u35823 \'ce\'f3\u65306 \'a3\'ba\uc1
\par \plain \f1\i\fs20 " Box comment using ==== to standard line width...\plain \f1\fs20 \'0al
\par let new_comment = CommentBlock(comment_text, '=', 72)
\par \uc2\u8230 \'a1\'ad\u8230 \'a1\'ad\u20196 \'c1\'ee\u20154 \'c8\'cb\u19981 \'b2\'bb\u23433 \'b0\'b2\u30340 \'b5\'c4\u26159 \'ca\'c7\u65292 \'a3\'ac\u36825 \'d5\'e2\u20250 \'bb\'e1\u20135 \'b2\'fa\u29983 \'c9\'fa\u20687 \'cf\'f1\u36825 \'d5\'e2\u26679 \'d1\'f9\u30340 \'b5\'c4\u65288 \'a3\'a8\u38750 \'b7\'c7\u65289 \'a3\'a9\u35780 \'c6\'c0\u35770 \'c2\'db\u65306 \'a3\'ba\uc1
\par =727272727272727272727272727272 = A bad comment =727272727272727272727272727272
\par \uc2\u36825 \'d5\'e2\u20010 \'b8\'f6\u38382 \'ce\'ca\u39064 \'cc\'e2\u23601 \'be\'cd\u26159 \'ca\'c7\u65292 \'a3\'ac\u21487 \'bf\'c9\u36873 \'d1\'a1\u21442 \'b2\'ce\u25968 \'ca\'fd\u27809 \'c3\'bb\u26377 \'d3\'d0\u26126 \'c3\'f7\u30830 \'c8\'b7\u25351 \'d6\'b8\u20986 \'b3\'f6\u23427 \'cb\'fc\u20204 \'c3\'c7\u25171 \'b4\'f2\u31639 \'cb\'e3\u35774 \'c9\'e8\u32622 \'d6\'c3\u21738 \'c4\'c4\u20010 \'b8\'f6\u36873 \'d1\'a1\u39033 \'cf\'ee\u12290 \'a1\'a3\u23427 \'cb\'fc\u20204 \'c3\'c7\u30340 \'b5\'c4\u21547 \'ba\'ac\u20041 \'d2\'e5\u30001 \'d3\'c9\u23427 \'cb\'fc\u20204 \'c3\'c7\u22312 \'d4\'da\u21442 \'b2\'ce\u25968 \'ca\'fd\u21015 \'c1\'d0\u34920 \'b1\'ed\u37324 \'c0\'ef\u30340 \'b5\'c4\u20301 \'ce\'bb\u32622 \'d6\'c3\u38544 \'d2\'fe\u24335 \'ca\'bd\u30830 \'c8\'b7\u23450 \'b6\'a8\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u20854 \'c6\'e4\u25490 \'c5\'c5\u24207 \'d0\'f2\u20013 \'d6\'d0\u30340 \'b5\'c4\u20219 \'c8\'ce\u20309 \'ba\'ce\u38169 \'b4\'ed\u35823 \'ce\'f3\u37117 \'b6\'bc\u20250 \'bb\'e1\u24708 \'c7\'c4\u24708 \'c7\'c4\u25913 \'b8\'c4\u21464 \'b1\'e4\u20854 \'c6\'e4\u21547 \'ba\'ac\u20041 \'d2\'e5\u12290 \'a1\'a3\uc1
\par \uc2\u36825 \'d5\'e2\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u20351 \'ca\'b9\u29992 \'d3\'c3\u38169 \'b4\'ed\u35823 \'ce\'f3\u24037 \'b9\'a4\u20855 \'be\'df\u24037 \'b9\'a4\u20316 \'d7\'f7\u30340 \'b5\'c4\u32463 \'be\'ad\u20856 \'b5\'e4\u26696 \'b0\'b8\u20363 \'c0\'fd\u12290 \'a1\'a3\u21482 \'d6\'bb\u26377 \'d3\'d0\u22312 \'d4\'da\u39034 \'cb\'b3\u24207 \'d0\'f2\u24456 \'ba\'dc\u37325 \'d6\'d8\u35201 \'d2\'aa\u65292 \'a3\'ac\u19988 \'c7\'d2\u20301 \'ce\'bb\u32622 \'d6\'c3\u26368 \'d7\'ee\u22909 \'ba\'c3\u22320 \'b5\'d8\u26263 \'b0\'b5\u31034 \'ca\'be\u36523 \'c9\'ed\u20221 \'b7\'dd\u26102 \'ca\'b1\u65292 \'a3\'ac\u21015 \'c1\'d0\u34920 \'b1\'ed\u25165 \'b2\'c5\u26159 \'ca\'c7\u23436 \'cd\'ea\u32654 \'c3\'c0\u30340 \'b5\'c4\u12290 \'a1\'a3\u20294 \'b5\'ab\u26159 \'ca\'c7\u65292 \'a3\'ac\u22312 \'d4\'da\u36825 \'d5\'e2\u20010 \'b8\'f6\u20363 \'c0\'fd\u23376 \'d7\'d3\u20013 \'d6\'d0\u65292 \'a3\'ac\u21487 \'bf\'c9\u36873 \'d1\'a1\u21442 \'b2\'ce\u25968 \'ca\'fd\u30340 \'b5\'c4\u25490 \'c5\'c5\u24207 \'d0\'f2\u19982 \'d3\'eb\u20854 \'c6\'e4\u35828 \'cb\'b5\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u26377 \'d3\'d0\u21033 \'c0\'fb\u26465 \'cc\'f5\u20214 \'bc\'fe\u65292 \'a3\'ac\u20498 \'b5\'b9\u19981 \'b2\'bb\u26159 \'ca\'c7\u35828 \'cb\'b5\u26159 \'ca\'c7\u20010 \'b8\'f6\u40635 \'c2\'e9\u28902 \'b7\'b3\u65292 \'a3\'ac\u23427 \'cb\'fc\u20204 \'c3\'c7\u30340 \'b5\'c4\u36873 \'d1\'a1\u39033 \'cf\'ee\u24456 \'ba\'dc\u23481 \'c8\'dd\u26131 \'d2\'d7\u34987 \'b1\'bb\u25630 \'b8\'e3\u28151 \'bb\'ec\u65292 \'a3\'ac\u36825 \'d5\'e2\u20250 \'bb\'e1\u23548 \'b5\'bc\u33268 \'d6\'c2\u24494 \'ce\'a2\u22937 \'c3\'ee\u30340 \'b5\'c4\u36523 \'c9\'ed\u20221 \'b7\'dd\u35782 \'ca\'b6\u21035 \'b1\'f0\u38169 \'b4\'ed\u35823 \'ce\'f3\u12290 \'a1\'a3\uc1
\par \uc2\u20174 \'b4\'d3\u26576 \'c4\'b3\u31181 \'d6\'d6\u24847 \'d2\'e2\u20041 \'d2\'e5\u19978 \'c9\'cf\u35828 \'cb\'b5\u65292 \'a3\'ac\u24744 \'c4\'fa\u25152 \'cb\'f9\u24819 \'cf\'eb\u35201 \'d2\'aa\u30340 \'b5\'c4\u21644 \'ba\'cd\u21015 \'c1\'d0\u34920 \'b1\'ed\u19978 \'c9\'cf\u32473 \'b8\'f8\u20986 \'b3\'f6\u30340 \'b5\'c4\u26159 \'ca\'c7\u23436 \'cd\'ea\u20840 \'c8\'ab\u30456 \'cf\'e0\u21453 \'b7\'b4\u30340 \'b5\'c4\u65306 \'a3\'ba\u19968 \'d2\'bb\u20010 \'b8\'f6\u39034 \'cb\'b3\u24207 \'d0\'f2\u19981 \'b2\'bb\u30456 \'cf\'e0\u20851 \'b9\'d8\u65292 \'a3\'ac\u20294 \'b5\'ab\u36523 \'c9\'ed\u20221 \'b7\'dd\u26126 \'c3\'f7\u30830 \'c8\'b7\u30340 \'b5\'c4\u25968 \'ca\'fd\u25454 \'be\'dd\u32467 \'bd\'e1\u26500 \'b9\'b9\u12290 \'a1\'a3\u25442 \'bb\'bb\u21477 \'be\'e4\u35805 \'bb\'b0\u35828 \'cb\'b5\u65292 \'a3\'ac\u23601 \'be\'cd\u26159 \'ca\'c7\u23383 \'d7\'d6\u20856 \'b5\'e4\u12290 \'a1\'a3\u28165 \'c7\'e5\u21333 \'b5\'a5 5 \u26174 \'cf\'d4\u31034 \'ca\'be\u20102 \'c1\'cb\u30456 \'cf\'e0\u21516 \'cd\'ac\u30340 \'b5\'c4\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u20294 \'b5\'ab\u26159 \'ca\'c7\u20351 \'ca\'b9\u29992 \'d3\'c3\u30340 \'b5\'c4\u26159 \'ca\'c7\u36890 \'cd\'a8\u36807 \'b9\'fd\u23383 \'d7\'d6\u20856 \'b5\'e4\u65292 \'a3\'ac\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u21487 \'bf\'c9\u21464 \'b1\'e4\u21442 \'b2\'ce\u25968 \'ca\'fd\u25351 \'d6\'b8\u23450 \'b6\'a8\u30340 \'b5\'c4\u36873 \'d1\'a1\u39033 \'cf\'ee\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 5. \u22312 \'d4\'da\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u20256 \'b4\'ab\u36882 \'b5\'dd\u21487 \'bf\'c9\u36873 \'d1\'a1\u21442 \'b2\'ce\u25968 \'ca\'fd\uc1
\par \plain \f1\ul\fs20\cf1 \uc2\u28857 \'b5\'e3\u20987 \'bb\'f7\u26597 \'b2\'e9\u30475 \'bf\'b4\u20195 \'b4\'fa\u30721 \'c2\'eb\u28165 \'c7\'e5\u21333 \'b5\'a5\uc1
\par \plain \f1\fs20 \uc2\u36825 \'d5\'e2\u20010 \'b8\'f6\u29256 \'b0\'e6\u26412 \'b1\'be\u30340 \'b5\'c4\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u21482 \'d6\'bb\u20256 \'b4\'ab\u36882 \'b5\'dd\u20102 \'c1\'cb\u20004 \'c1\'bd\u20010 \'b8\'f6\u21442 \'b2\'ce\u25968 \'ca\'fd\u65306 \'a3\'ba\u26368 \'d7\'ee\u37325 \'d6\'d8\u35201 \'d2\'aa\u30340 \'b5\'c4\u35780 \'c6\'c0\u35770 \'c2\'db\u25991 \'ce\'c4\u26412 \'b1\'be\u65292 \'a3\'ac\u20197 \'d2\'d4\u21450 \'bc\'b0\u19968 \'d2\'bb\u20010 \'b8\'f6\u36873 \'d1\'a1\u39033 \'cf\'ee\u23383 \'d7\'d6\u20856 \'b5\'e4\u12290 \'a1\'a3\u22914 \'c8\'e7\u26524 \'b9\'fb\u36873 \'d1\'a1\u39033 \'cf\'ee\u27809 \'c3\'bb\u26377 \'d3\'d0\u25351 \'d6\'b8\u23450 \'b6\'a8\u65292 \'a3\'ac\u20869 \'c4\'da\u32622 \'d6\'c3\u30340 \'b5\'c4\~get()\~\u20989 \'ba\'af\u25968 \'ca\'fd\u21487 \'bf\'c9\u20197 \'d2\'d4\u29992 \'d3\'c3\u26469 \'c0\'b4\u26816 \'bc\'ec\u32034 \'cb\'f7\u21508 \'b8\'f7\u20010 \'b8\'f6\u36873 \'d1\'a1\u39033 \'cf\'ee\u65292 \'a3\'ac\u25110 \'bb\'f2\u32773 \'d5\'df\u20854 \'c6\'e4\u40664 \'c4\'ac\u35748 \'c8\'cf\u20540 \'d6\'b5\u12290 \'a1\'a3\u28982 \'c8\'bb\u21518 \'ba\'f3\u35843 \'b5\'f7\u29992 \'d3\'c3\u35813 \'b8\'c3\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u29992 \'d3\'c3\u24050 \'d2\'d1\u21629 \'c3\'fc\u21517 \'c3\'fb\u30340 \'b5\'c4\u36873 \'d1\'a1\u39033 \'cf\'ee/\u20540 \'d6\'b5\u23545 \'b6\'d4\u26469 \'c0\'b4\u37197 \'c5\'e4\u32622 \'d6\'c3\u20854 \'c6\'e4\u34892 \'d0\'d0\u20026 \'ce\'aa\u12290 \'a1\'a3\u22312 \'d4\'da\u20989 \'ba\'af\u25968 \'ca\'fd\u20869 \'c4\'da\u23454 \'ca\'b5\u26045 \'ca\'a9\u21442 \'b2\'ce\u25968 \'ca\'fd\u35299 \'bd\'e2\u26512 \'ce\'f6\u23601 \'be\'cd\u21464 \'b1\'e4\u24471 \'b5\'c3\u36739 \'bd\'cf\u20026 \'ce\'aa\u31616 \'bc\'f2\u27905 \'bd\'e0\u65292 \'a3\'ac\u20989 \'ba\'af\u25968 \'ca\'fd\u35843 \'b5\'f7\u29992 \'d3\'c3\u20063 \'d2\'b2\u21464 \'b1\'e4\u24471 \'b5\'c3\u26356 \'b8\'fc\u20855 \'be\'df\u21487 \'bf\'c9\u35835 \'b6\'c1\u24615 \'d0\'d4\u65292 \'a3\'ac\u19981 \'b2\'bb\u26131 \'d2\'d7\u20986 \'b3\'f6\u38169 \'b4\'ed\u12290 \'a1\'a3\u20363 \'c0\'fd\u22914 \'c8\'e7\u65306 \'a3\'ba\uc1
\par \plain \f1\i\fs20 " Comment of required width, with standard delimiter and box character...\plain \f1\fs20 \'0al
\par let new_comment = CommentBlock(comment_text, \{'width':comment_width\})\'0a\'0a
\par 
\par \plain \f1\i\fs20 " Box comment using ==== to standard line width...\plain \f1\fs20 \'0al
\par let new_comment = CommentBlock(comment_text, \{'box':'=', 'width':72\})
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u37325 \'d6\'d8\u26500 \'b9\'b9\u33258 \'d7\'d4\u21160 \'b6\'af\u23545 \'b6\'d4\u40784 \'c6\'eb\uc1
\par \plain \f1\fs20 \uc2\u22312 \'d4\'da\u26412 \'b1\'be\u31995 \'cf\'b5\u21015 \'c1\'d0\~\uc1\plain \f1\ul\fs20\cf1 \uc2\u20351 \'ca\'b9\u29992 \'d3\'c3\u33050 \'bd\'c5\u26412 \'b1\'be\u32534 \'b1\'e0\u20889 \'d0\'b4 Vim \u32534 \'b1\'e0\u36753 \'bc\'ad\u22120 \'c6\'f7\u65292 \'a3\'ac\u31532 \'b5\'da 3 \u37096 \'b2\'bf\u20998 \'b7\'d6\u65306 \'a3\'ba\u20869 \'c4\'da\u32622 \'d6\'c3\u21015 \'c1\'d0\u34920 \'b1\'ed\uc1\plain \f1\fs20 \~\uc2\u20013 \'d6\'d0\u65292 \'a3\'ac\u25105 \'ce\'d2\u20204 \'c3\'c7\u26356 \'b8\'fc\u26032 \'d0\'c2\u20102 \'c1\'cb\u36739 \'bd\'cf\u26089 \'d4\'e7\u30340 \'b5\'c4\u21517 \'c3\'fb\u20026 \'ce\'aa\~AlignAssignments()\~\u30340 \'b5\'c4\u31034 \'ca\'be\u20363 \'c0\'fd\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u23545 \'b6\'d4\u20854 \'c6\'e4\u36827 \'bd\'f8\u34892 \'d0\'d0\u36716 \'d7\'aa\u25442 \'bb\'bb\u20351 \'ca\'b9\u29992 \'d3\'c3\u21015 \'c1\'d0\u34920 \'b1\'ed\u26469 \'c0\'b4\u23384 \'b4\'e6\u20648 \'b4\'a2\u27491 \'d5\'fd\u22312 \'d4\'da\u20462 \'d0\'de\u25913 \'b8\'c4\u30340 \'b5\'c4\u25991 \'ce\'c4\u26412 \'b1\'be\u20869 \'c4\'da\u23481 \'c8\'dd\u12290 \'a1\'a3\u28165 \'c7\'e5\u21333 \'b5\'a5 6 \u20877 \'d4\'d9\u29616 \'cf\'d6\u20102 \'c1\'cb\u36825 \'d5\'e2\u20010 \'b8\'f6\u20989 \'ba\'af\u25968 \'ca\'fd\u30340 \'b5\'c4\u21319 \'c9\'fd\u32423 \'bc\'b6\u29256 \'b0\'e6\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 6. \u26356 \'b8\'fc\u26032 \'d0\'c2\u21518 \'ba\'f3\u30340 \'b5\'c4 AlignAssignments() \u20989 \'ba\'af\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 function! AlignAssignments ()\'0a 
\par \plain \f1\i\fs20     " Patterns needed to locate assignment operators...
\par \plain \f1\fs20     let ASSIGN_OP   = '[-+*/%|&]\\?=\\@<!=[=~]\\@!'\'0a 
\par     let ASSIGN_LINE = '^\\(.\\\{-\}\\)\\s*\\(' . ASSIGN_OP . '\\)\\(.*\\)$'\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Locate block of code to be considered (same indentation, no blanks)...
\par \plain \f1\fs20     let indent_pat = '^' . matchstr(getline('.'), '^\\s*') . '\\S'\'0a 
\par     let firstline  = search('^\\%('. indent_pat . '\\)\\@!','bnW') + 1\'0a 
\par     let lastline   = search('^\\%('. indent_pat . '\\)\\@!', 'nW') - 1\'0a 
\par     if lastline < 0\'0a 
\par         let lastline = line('$')\'0a 
\par     endif\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Decompose lines at assignment operators...
\par \plain \f1\fs20     let lines = []\'0a 
\par     for linetext in getline(firstline, lastline)\'0a 
\par         let fields = matchlist(linetext, ASSIGN_LINE)\'0a 
\par         call add(lines, fields[1:3])\'0a 
\par     endfor\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Determine maximal lengths of lvalue and operator...
\par \plain \f1\fs20     let op_lines = filter(copy(lines),'!empty(v:val)')\'0a 
\par     let max_lval = max( map(copy(op_lines), 'strlen(v:val[0])') ) + 1\'0a 
\par     let max_op   = max( map(copy(op_lines), 'strlen(v:val[1])'  ) )\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Recompose lines with operators at the maximum length...
\par \plain \f1\fs20     let linenum = firstline\'0a 
\par     for line in lines\'0a 
\par         if !empty(line)\'0a 
\par             let newline\'0a 
\par             \\    = printf("%-*s%*s%s", max_lval, line[0], max_op, line[1], line[2])\'0a 
\par             call setline(linenum, newline)\'0a 
\par         endif\'0a 
\par         let linenum += 1\'0a 
\par     endfor\'0ae
\par endfunction
\par \uc2\u36825 \'d5\'e2\u20010 \'b8\'f6\u29256 \'b0\'e6\u26412 \'b1\'be\u23545 \'b6\'d4\u25968 \'ca\'fd\u25454 \'be\'dd\u36827 \'bd\'f8\u34892 \'d0\'d0\u32531 \'bb\'ba\u23384 \'b4\'e6\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u37325 \'d6\'d8\u26032 \'d0\'c2\u21152 \'bc\'d3\u36733 \'d4\'d8\u65292 \'a3\'ac\u24456 \'ba\'dc\u22823 \'b4\'f3\u31243 \'b3\'cc\u24230 \'b6\'c8\u19978 \'c9\'cf\u25913 \'b8\'c4\u21892 \'c9\'c6\u20102 \'c1\'cb\u20989 \'ba\'af\u25968 \'ca\'fd\u30340 \'b5\'c4\u26377 \'d3\'d0\u25928 \'d0\'a7\u24615 \'d0\'d4\u65292 \'a3\'ac\u20294 \'b5\'ab\u36825 \'d5\'e2\u20250 \'bb\'e1\u38656 \'d0\'e8\u35201 \'d2\'aa\u26356 \'b8\'fc\u22810 \'b6\'e0\u30340 \'b5\'c4\u32500 \'ce\'ac\u25252 \'bb\'a4\u36153 \'b7\'d1\u29992 \'d3\'c3\u12290 \'a1\'a3\u20855 \'be\'df\u20307 \'cc\'e5\u26469 \'c0\'b4\u35828 \'cb\'b5\u65292 \'a3\'ac\u22240 \'d2\'f2\u20026 \'ce\'aa\u23427 \'cb\'fc\u23558 \'bd\'ab\u21508 \'b8\'f7\u34892 \'d0\'d0\u30340 \'b5\'c4\u21508 \'b8\'f7\u31181 \'d6\'d6\u32452 \'d7\'e9\u20214 \'bc\'fe\u23384 \'b4\'e6\u20648 \'b4\'a2\u22312 \'d4\'da\u23567 \'d0\'a1\u30340 \'b5\'c4\u19977 \'c8\'fd\u20803 \'d4\'aa\u32032 \'cb\'d8\u25968 \'ca\'fd\u32452 \'d7\'e9\u20013 \'d6\'d0\u65292 \'a3\'ac\u20195 \'b4\'fa\u30721 \'c2\'eb\u34987 \'b1\'bb \ldblquote \u31070 \'c9\'f1\u22855 \'c6\'e6\u32034 \'cb\'f7\u24341 \'d2\'fd\rdblquote \u65288 \'a3\'a8\u20363 \'c0\'fd\u22914 \'c8\'e7\~v:val[0]\~\u21644 \'ba\'cd\~line[1]\u65289 \'a3\'a9\u25171 \'b4\'f2\u20081 \'c2\'d2\u65292 \'a3\'ac\u36825 \'d5\'e2\u20123 \'d0\'a9\u32034 \'cb\'f7\u24341 \'d2\'fd\u30340 \'b5\'c4\u21517 \'c3\'fb\u23383 \'d7\'d6\u23545 \'b6\'d4\u23427 \'cb\'fc\u20204 \'c3\'c7\u30340 \'b5\'c4\u29992 \'d3\'c3\u36884 \'cd\'be\u27809 \'c3\'bb\u26377 \'d3\'d0\u20219 \'c8\'ce\u20309 \'ba\'ce\u25552 \'cc\'e1\u31034 \'ca\'be\u12290 \'a1\'a3\uc1
\par \uc2\u23383 \'d7\'d6\u20856 \'b5\'e4\u23601 \'be\'cd\u26159 \'ca\'c7\u19987 \'d7\'a8\u38376 \'c3\'c5\u35299 \'bd\'e2\u20915 \'be\'f6\u36825 \'d5\'e2\u19968 \'d2\'bb\u38382 \'ce\'ca\u39064 \'cc\'e2\u30340 \'b5\'c4\u65292 \'a3\'ac\u22240 \'d2\'f2\u20026 \'ce\'aa\u65292 \'a3\'ac\u20687 \'cf\'f1\u21015 \'c1\'d0\u34920 \'b1\'ed\u19968 \'d2\'bb\u26679 \'d1\'f9\u65292 \'a3\'ac\u23427 \'cb\'fc\u23558 \'bd\'ab\u25968 \'ca\'fd\u25454 \'be\'dd\u25972 \'d5\'fb\u29702 \'c0\'ed\u22312 \'d4\'da\u19968 \'d2\'bb\u20010 \'b8\'f6\u21333 \'b5\'a5\u29420 \'b6\'c0\u30340 \'b5\'c4\u32467 \'bd\'e1\u26500 \'b9\'b9\u20013 \'d6\'d0\u65292 \'a3\'ac\u20294 \'b5\'ab\u21644 \'ba\'cd\u21015 \'c1\'d0\u34920 \'b1\'ed\u19981 \'b2\'bb\u19968 \'d2\'bb\u26679 \'d1\'f9\u30340 \'b5\'c4\u26159 \'ca\'c7\u65292 \'a3\'ac\u23427 \'cb\'fc\u20204 \'c3\'c7\u29992 \'d3\'c3\u19968 \'d2\'bb\u20010 \'b8\'f6\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u23545 \'b6\'d4\u21508 \'b8\'f7\u20010 \'b8\'f6\u25968 \'ca\'fd\u25454 \'be\'dd\u36827 \'bd\'f8\u34892 \'d0\'d0\u26631 \'b1\'ea\u35782 \'ca\'b6\u65292 \'a3\'ac\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u29992 \'d3\'c3\u25968 \'ca\'fd\u23383 \'d7\'d6\u12290 \'a1\'a3\u22914 \'c8\'e7\u26524 \'b9\'fb\u36825 \'d5\'e2\u20123 \'d0\'a9\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u32463 \'be\'ad\u36807 \'b9\'fd\u31934 \'be\'ab\u24515 \'d0\'c4\u25361 \'cc\'f4\u36873 \'d1\'a1\u65292 \'a3\'ac\u23427 \'cb\'fc\u20204 \'c3\'c7\u23601 \'be\'cd\u21487 \'bf\'c9\u20197 \'d2\'d4\u20351 \'ca\'b9\u32467 \'bd\'e1\u26524 \'b9\'fb\u20195 \'b4\'fa\u30721 \'c2\'eb\u26356 \'b8\'fc\u31616 \'bc\'f2\u27905 \'bd\'e0\u12290 \'a1\'a3\u19981 \'b2\'bb\u20351 \'ca\'b9\u29992 \'d3\'c3\u31070 \'c9\'f1\u22855 \'c6\'e6\u32034 \'cb\'f7\u24341 \'d2\'fd\u65292 \'a3\'ac\u25105 \'ce\'d2\u20204 \'c3\'c7\u23558 \'bd\'ab\u33719 \'bb\'f1\u24471 \'b5\'c3\u26377 \'d3\'d0\u24847 \'d2\'e2\u20041 \'d2\'e5\u30340 \'b5\'c4\u21517 \'c3\'fb\u31216 \'b3\'c6\u65288 \'a3\'a8\u20363 \'c0\'fd\u22914 \'c8\'e7\u65292 \'a3\'acv:val.lval\~\u29992 \'d3\'c3\u20110 \'d3\'da\u21508 \'b8\'f7\u34892 \'d0\'d0\u30340 \'b5\'c4\~lvalue\u65292 \'a3\'acline.op\~\u29992 \'d3\'c3\u20110 \'d3\'da\u21508 \'b8\'f7\u34892 \'d0\'d0\u30340 \'b5\'c4\u25805 \'b2\'d9\u20316 \'d7\'f7\u31526 \'b7\'fb\u65289 \'a3\'a9\u12290 \'a1\'a3\uc1
\par \uc2\u20351 \'ca\'b9\u29992 \'d3\'c3\u23383 \'d7\'d6\u20856 \'b5\'e4\u26469 \'c0\'b4\u37325 \'d6\'d8\u20889 \'d0\'b4\u20989 \'ba\'af\u25968 \'ca\'fd\u26159 \'ca\'c7\u38750 \'b7\'c7\u24120 \'b3\'a3\u31616 \'bc\'f2\u21333 \'b5\'a5\u30340 \'b5\'c4\u65292 \'a3\'ac\u22914 \'c8\'e7\u28165 \'c7\'e5\u21333 \'b5\'a5 7 \u25152 \'cb\'f9\u31034 \'ca\'be\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 7. \u36827 \'bd\'f8\u19968 \'d2\'bb\u27493 \'b2\'bd\u25913 \'b8\'c4\u33391 \'c1\'bc\u30340 \'b5\'c4 AlignAssignments() \u20989 \'ba\'af\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 function! AlignAssignments ()\'0a 
\par \plain \f1\i\fs20     " Patterns needed to locate assignment operators...
\par \plain \f1\fs20     let ASSIGN_OP   = '[-+*/%|&]\\?=\\@<!=[=~]\\@!'\'0a 
\par     let ASSIGN_LINE = '^\\(.\\\{-\}\\)\\s*\\(' . ASSIGN_OP . '\\)\\(.*\\)$'\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Locate block of code to be considered (same indentation, no blanks)...
\par \plain \f1\fs20     let indent_pat = '^' . matchstr(getline('.'), '^\\s*') . '\\S'\'0a 
\par     let firstline  = search('^\\%('. indent_pat . '\\)\\@!','bnW') + 1\'0a 
\par     let lastline   = search('^\\%('. indent_pat . '\\)\\@!', 'nW') - 1\'0a 
\par     if lastline < 0\'0a 
\par         let lastline = line('$')\'0a 
\par     endif\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Decompose lines at assignment operators...
\par \plain \f1\fs20     let lines = []\'0a 
\par     for linetext in getline(firstline, lastline)\'0a 
\par         let fields = matchlist(linetext, ASSIGN_LINE)\'0a 
\par \plain \f1\b\fs20         if len(fields) \'0a 
\par             call add(lines, \{'lval':fields[1], 'op':fields[2], 'rval':fields[3]\})\'0a 
\par         else\'0a 
\par             call add(lines, \{'text':linetext,  'op':''                         \})\'0a 
\par         endif
\par \plain \f1\fs20     endfor\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Determine maximal lengths of lvalue and operator...
\par \plain \f1\fs20     let op_lines = filter(copy(lines),'!empty(\plain \f1\b\fs20 v:val.op\plain \f1\fs20 )')\'0a 
\par     let max_lval = max( map(copy(op_lines), 'strlen(\plain \f1\b\fs20 v:val.lval\plain \f1\fs20 )') ) + 1\'0a 
\par     let max_op   = max( map(copy(op_lines), 'strlen(\plain \f1\b\fs20 v:val.op\plain \f1\fs20 )'  ) )\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Recompose lines with operators at the maximum length...
\par \plain \f1\fs20     let linenum = firstline\'0a 
\par     for line in lines\'0a 
\par \plain \f1\b\fs20         let newline = empty(line.op)\'0a 
\par         \\ ? line.text\'0a 
\par         \\ : printf("%-*s%*s%s", max_lval, line.lval, max_op, line.op, line.rval)
\par \plain \f1\fs20         call setline(linenum, newline)\'0a 
\par         let linenum += 1\'0a 
\par     endfor\'0ae
\par endfunction
\par \uc2\u26032 \'d0\'c2\u29256 \'b0\'e6\u26412 \'b1\'be\u20013 \'d6\'d0\u30340 \'b5\'c4\u24046 \'b2\'ee\u24322 \'d2\'ec\u29992 \'d3\'c3\u40657 \'ba\'da\u20307 \'cc\'e5\u23383 \'d7\'d6\u26631 \'b1\'ea\u20986 \'b3\'f6\u12290 \'a1\'a3\u21482 \'d6\'bb\u26377 \'d3\'d0\u20004 \'c1\'bd\u22788 \'b4\'a6\u65306 \'a3\'ba\u21508 \'b8\'f7\u34892 \'d0\'d0\u30340 \'b5\'c4\u35760 \'bc\'c7\u24405 \'c2\'bc\u29616 \'cf\'d6\u22312 \'d4\'da\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u23383 \'d7\'d6\u20856 \'b5\'e4\u65292 \'a3\'ac\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u21704 \'b9\'fe\u24076 \'cf\'a3\u34920 \'b1\'ed\u65292 \'a3\'ac\u27599 \'c3\'bf\u20010 \'b8\'f6\u35760 \'bc\'c7\u24405 \'c2\'bc\u30340 \'b5\'c4\u20803 \'d4\'aa\u32032 \'cb\'d8\u30340 \'b5\'c4\u21518 \'ba\'f3\u32493 \'d0\'f8\u35775 \'b7\'c3\u38382 \'ce\'ca\u20351 \'ca\'b9\u29992 \'d3\'c3\u24050 \'d2\'d1\u21629 \'c3\'fc\u21517 \'c3\'fb\u30340 \'b5\'c4\u26597 \'b2\'e9\u35810 \'d1\'af\u65292 \'a3\'ac\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u25968 \'ca\'fd\u20540 \'d6\'b5\u32034 \'cb\'f7\u24341 \'d2\'fd\u12290 \'a1\'a3\u24635 \'d7\'dc\u30340 \'b5\'c4\u32467 \'bd\'e1\u26524 \'b9\'fb\u26159 \'ca\'c7\u20195 \'b4\'fa\u30721 \'c2\'eb\u30340 \'b5\'c4\u21487 \'bf\'c9\u35835 \'b6\'c1\u24615 \'d0\'d4\u26356 \'b8\'fc\u24378 \'c7\'bf\u65292 \'a3\'ac\u26356 \'b8\'fc\u19981 \'b2\'bb\u23481 \'c8\'dd\u26131 \'d2\'d7\u21457 \'b7\'a2\u29983 \'c9\'fa\u25968 \'ca\'fd\u32452 \'d7\'e9\u32034 \'cb\'f7\u24341 \'d2\'fd\u24120 \'b3\'a3\u20986 \'b3\'f6\u29616 \'cf\'d6\u30340 \'b5\'c4\u31163 \'c0\'eb\u19968 \'d2\'bb\u65288 \'a3\'a8off-by-one\u65289 \'a3\'a9\u35823 \'ce\'f3\u24046 \'b2\'ee\u12290 \'a1\'a3\uc1
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u20316 \'d7\'f7\u20026 \'ce\'aa\u25968 \'ca\'fd\u25454 \'be\'dd\u32467 \'bd\'e1\u26500 \'b9\'b9\u30340 \'b5\'c4\u23383 \'d7\'d6\u20856 \'b5\'e4\uc1
\par \plain \f1\fs20 Vim \uc2\u25552 \'cc\'e1\u20379 \'b9\'a9\u19968 \'d2\'bb\u20010 \'b8\'f6\u20869 \'c4\'da\u32622 \'d6\'c3\u30340 \'b5\'c4\u21629 \'c3\'fc\u20196 \'c1\'ee\u65292 \'a3\'ac\u20801 \'d4\'ca\u35768 \'d0\'ed\u24744 \'c4\'fa\u20174 \'b4\'d3\u19968 \'d2\'bb\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u20013 \'d6\'d0\u21024 \'c9\'be\u38500 \'b3\'fd\u37325 \'d6\'d8\u22797 \'b8\'b4\u30340 \'b5\'c4\u34892 \'d0\'d0\u65306 \'a3\'ba\uc1
\par :%sort u
\par u\~\uc2\u36873 \'d1\'a1\u39033 \'cf\'ee\u20250 \'bb\'e1\u20351 \'ca\'b9\u20869 \'c4\'da\u32622 \'d6\'c3\u30340 \'b5\'c4\~sort\~\u21629 \'c3\'fc\u20196 \'c1\'ee\u21024 \'c9\'be\u38500 \'b3\'fd\u37325 \'d6\'d8\u22797 \'b8\'b4\u30340 \'b5\'c4\u34892 \'d0\'d0\u65288 \'a3\'a8\u22914 \'c8\'e7\u26524 \'b9\'fb\u23427 \'cb\'fc\u20204 \'c3\'c7\u24050 \'d2\'d1\u32463 \'be\'ad\u34987 \'b1\'bb\u23384 \'b4\'e6\u20648 \'b4\'a2\u65289 \'a3\'a9\u65292 \'a3\'ac\u21069 \'c7\'b0\u23548 \'b5\'bc\u30340 \'b5\'c4\~%\~\u20250 \'bb\'e1\u24212 \'d3\'a6\u29992 \'d3\'c3\u37027 \'c4\'c7\u20010 \'b8\'f6\u29305 \'cc\'d8\u27530 \'ca\'e2\u30340 \'b5\'c4\~sort\~\u26469 \'c0\'b4\u24212 \'d3\'a6\u29992 \'d3\'c3\u21040 \'b5\'bd\u25972 \'d5\'fb\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\u22914 \'c8\'e7\u26524 \'b9\'fb\u24744 \'c4\'fa\u19981 \'b2\'bb\u22312 \'d4\'da\u24847 \'d2\'e2\u20445 \'b1\'a3\u23384 \'b4\'e6\u25991 \'ce\'c4\u20214 \'bc\'fe\u20013 \'d6\'d0\u21807 \'ce\'a8\u19968 \'d2\'bb\u19968 \'d2\'bb\u34892 \'d0\'d0\u30340 \'b5\'c4\u21407 \'d4\'ad\u22987 \'ca\'bc\u25490 \'c5\'c5\u24207 \'d0\'f2\u65292 \'a3\'ac\u36825 \'d5\'e2\u26159 \'ca\'c7\u38750 \'b7\'c7\u24120 \'b3\'a3\u26041 \'b7\'bd\u20415 \'b1\'e3\u30340 \'b5\'c4\u12290 \'a1\'a3\u22914 \'c8\'e7\u26524 \'b9\'fb\u36825 \'d5\'e2\u20123 \'d0\'a9\u34892 \'d0\'d0\u26159 \'ca\'c7\u33719 \'bb\'f1\u22870 \'bd\'b1\u32773 \'d5\'df\u30340 \'b5\'c4\u21517 \'c3\'fb\u21333 \'b5\'a5\u65292 \'a3\'ac\u19968 \'d2\'bb\u20010 \'b8\'f6\u26377 \'d3\'d0\u38480 \'cf\'de\u36164 \'d7\'ca\u28304 \'d4\'b4\u30340 \'b5\'c4\u30331 \'b5\'c7\u35760 \'bc\'c7\u34920 \'b1\'ed\u65292 \'a3\'ac\u19968 \'d2\'bb\u20010 \'b8\'f6\u24453 \'b4\'fd\u21150 \'b0\'ec\u20107 \'ca\'c2\u39033 \'cf\'ee\u28165 \'c7\'e5\u21333 \'b5\'a5\u65292 \'a3\'ac\u25110 \'bb\'f2\u32773 \'d5\'df\u20854 \'c6\'e4\u20182 \'cb\'fb\u27880 \'d7\'a2\u37325 \'d6\'d8\u39034 \'cb\'b3\u24207 \'d0\'f2\u30340 \'b5\'c4\u24207 \'d0\'f2\u21015 \'c1\'d0\u65292 \'a3\'ac\u36825 \'d5\'e2\u23601 \'be\'cd\u21487 \'bf\'c9\u33021 \'c4\'dc\u20250 \'bb\'e1\u26159 \'ca\'c7\u19968 \'d2\'bb\u20010 \'b8\'f6\u38382 \'ce\'ca\u39064 \'cc\'e2\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u26080 \'ce\'de\u25490 \'c5\'c5\u24207 \'d0\'f2\u21807 \'ce\'a8\u19968 \'d2\'bb\u24615 \'d0\'d4\uc1
\par \plain \f1\fs20 \uc2\u23383 \'d7\'d6\u20856 \'b5\'e4\u30340 \'b5\'c4\u38190 \'bc\'fc\u22825 \'cc\'ec\u29983 \'c9\'fa\u26159 \'ca\'c7\u21807 \'ce\'a8\u19968 \'d2\'bb\u30340 \'b5\'c4\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u21487 \'bf\'c9\u20197 \'d2\'d4\u29992 \'d3\'c3\u23383 \'d7\'d6\u20856 \'b5\'e4\u26469 \'c0\'b4\u21024 \'c9\'be\u38500 \'b3\'fd\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u37325 \'d6\'d8\u22797 \'b8\'b4\u34892 \'d0\'d0\u65292 \'a3\'ac\u20026 \'ce\'aa\u20102 \'c1\'cb\u23436 \'cd\'ea\u25104 \'b3\'c9\u36825 \'d5\'e2\u39033 \'cf\'ee\u24037 \'b9\'a4\u20316 \'d7\'f7\u21487 \'bf\'c9\u20197 \'d2\'d4\u37319 \'b2\'c9\u29992 \'d3\'c3\u20445 \'b1\'a3\u23384 \'b4\'e6\u36825 \'d5\'e2\u20123 \'d0\'a9\u34892 \'d0\'d0\u30340 \'b5\'c4\u21407 \'d4\'ad\u22987 \'ca\'bc\u25490 \'c5\'c5\u24207 \'d0\'f2\u30340 \'b5\'c4\u26041 \'b7\'bd\u27861 \'b7\'a8\u12290 \'a1\'a3\u28165 \'c7\'e5\u21333 \'b5\'a5 8 \u23637 \'d5\'b9\u31034 \'ca\'be\u20102 \'c1\'cb\u19968 \'d2\'bb\u20010 \'b8\'f6\u29992 \'d3\'c3\u20110 \'d3\'da\u23436 \'cd\'ea\u25104 \'b3\'c9\u35813 \'b8\'c3\u20219 \'c8\'ce\u21153 \'ce\'f1\u30340 \'b5\'c4\u31616 \'bc\'f2\u21333 \'b5\'a5\u20989 \'ba\'af\u25968 \'ca\'fd\u12290 \'a1\'a3\uc1
\par \plain \f1\b\fs20 \uc2\u28165 \'c7\'e5\u21333 \'b5\'a5 8. \u19968 \'d2\'bb\u20010 \'b8\'f6\u20445 \'b1\'a3\u23384 \'b4\'e6\u25490 \'c5\'c5\u24207 \'d0\'f2\u21807 \'ce\'a8\u19968 \'d2\'bb\u24615 \'d0\'d4\u30340 \'b5\'c4\u20989 \'ba\'af\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 function! Uniq () range\'0a 
\par \plain \f1\i\fs20     " Nothing unique seen yet...
\par \plain \f1\fs20     let have_already_seen = \{\}\'0a 
\par     let unique_lines = []\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Walk through the lines, remembering only the hitherto-unseen ones...
\par \plain \f1\fs20     for original_line in getline(a:firstline, a:lastline)\'0a 
\par         let normalized_line = '>' . original_line \'0a 
\par         if !has_key(have_already_seen, normalized_line)\'0a 
\par             call add(unique_lines, original_line)\'0a 
\par             let have_already_seen[normalized_line] = 1\'0a 
\par         endif\'0a 
\par     endfor\'0a\'0a
\par 
\par \plain \f1\i\fs20     " Replace the range of original lines with just the unique lines...
\par \plain \f1\fs20     exec a:firstline . ',' . a:lastline . 'delete'\'0a 
\par     call append(a:firstline-1, unique_lines)\'0ae
\par endfunction
\par Uniq()\~\uc2\u20989 \'ba\'af\u25968 \'ca\'fd\u34987 \'b1\'bb\u22768 \'c9\'f9\u26126 \'c3\'f7\u20026 \'ce\'aa\u25509 \'bd\'d3\u21463 \'ca\'dc\u19968 \'d2\'bb\u20010 \'b8\'f6\u33539 \'b7\'b6\u22260 \'ce\'a7\u65292 \'a3\'ac\u22240 \'d2\'f2\u27492 \'b4\'cb\u21482 \'d6\'bb\u33021 \'c4\'dc\u35843 \'b5\'f7\u29992 \'d3\'c3\u19968 \'d2\'bb\u27425 \'b4\'ce\u65292 \'a3\'ac\u21363 \'bc\'b4\u20351 \'ca\'b9\u22312 \'d4\'da\u32531 \'bb\'ba\u20914 \'b3\'e5\u21306 \'c7\'f8\u20869 \'c4\'da\u30340 \'b5\'c4\u19968 \'d2\'bb\u20010 \'b8\'f6\u34892 \'d0\'d0\u33539 \'b7\'b6\u22260 \'ce\'a7\u19978 \'c9\'cf\u35843 \'b5\'f7\u29992 \'d3\'c3\u26102 \'ca\'b1\u12290 \'a1\'a3\uc1
\par \uc2\u35843 \'b5\'f7\u29992 \'d3\'c3\u26102 \'ca\'b1\u65292 \'a3\'ac\u23427 \'cb\'fc\u39318 \'ca\'d7\u20808 \'cf\'c8\u35774 \'c9\'e8\u32622 \'d6\'c3\u19968 \'d2\'bb\u20010 \'b8\'f6\u31354 \'bf\'d5\u30340 \'b5\'c4\u23383 \'d7\'d6\u20856 \'b5\'e4\u65288 \'a3\'a8have_already_seen\u65289 \'a3\'a9\u65292 \'a3\'ac\u36825 \'d5\'e2\u20010 \'b8\'f6\u23383 \'d7\'d6\u20856 \'b5\'e4\u29992 \'d3\'c3\u20110 \'d3\'da\u36319 \'b8\'fa\u36394 \'d7\'d9\u22312 \'d4\'da\u25351 \'d6\'b8\u23450 \'b6\'a8\u33539 \'b7\'b6\u22260 \'ce\'a7\u20869 \'c4\'da\u24050 \'d2\'d1\u32463 \'be\'ad\u36935 \'d3\'f6\u21040 \'b5\'bd\u20102 \'c1\'cb\u21738 \'c4\'c4\u20123 \'d0\'a9\u34892 \'d0\'d0\u12290 \'a1\'a3\u20043 \'d6\'ae\u21069 \'c7\'b0\u27809 \'c3\'bb\u26377 \'d3\'d0\u35265 \'bc\'fb\u36807 \'b9\'fd\u30340 \'b5\'c4\u34892 \'d0\'d0\u23601 \'be\'cd\u20250 \'bb\'e1\u34987 \'b1\'bb\u28155 \'cc\'ed\u21152 \'bc\'d3\u21040 \'b5\'bd\u23384 \'b4\'e6\u20648 \'b4\'a2\u22312 \'d4\'da\~unique_lines\~\u30340 \'b5\'c4\u28165 \'c7\'e5\u21333 \'b5\'a5\u20013 \'d6\'d0\u12290 \'a1\'a3\uc1
\par \uc2\u28982 \'c8\'bb\u21518 \'ba\'f3\u20989 \'ba\'af\u25968 \'ca\'fd\u25552 \'cc\'e1\u20379 \'b9\'a9\u19968 \'d2\'bb\u20010 \'b8\'f6\u24490 \'d1\'ad\u29615 \'bb\'b7\u65292 \'a3\'ac\u20934 \'d7\'bc\u30830 \'c8\'b7\u22320 \'b5\'d8\u23436 \'cd\'ea\u25104 \'b3\'c9\u36825 \'d5\'e2\u19968 \'d2\'bb\u24037 \'b9\'a4\u20316 \'d7\'f7\u12290 \'a1\'a3\u23427 \'cb\'fc\u36890 \'cd\'a8\u36807 \'b9\'fd\~getline()\~\u20174 \'b4\'d3\u32531 \'bb\'ba\u20914 \'b3\'e5\u21306 \'c7\'f8\u33719 \'bb\'f1\u21462 \'c8\'a1\u20195 \'b4\'fa\u30721 \'c2\'eb\u30340 \'b5\'c4\u25351 \'d6\'b8\u23450 \'b6\'a8\u33539 \'b7\'b6\u22260 \'ce\'a7\u65292 \'a3\'ac\u24182 \'b2\'a2\u23545 \'b6\'d4\u21508 \'b8\'f7\u39033 \'cf\'ee\u36827 \'bd\'f8\u34892 \'d0\'d0\u36845 \'b5\'fc\u20195 \'b4\'fa\u12290 \'a1\'a3\u23427 \'cb\'fc\u39318 \'ca\'d7\u20808 \'cf\'c8\u22312 \'d4\'da\u27599 \'c3\'bf\u19968 \'d2\'bb\u34892 \'d0\'d0\u28155 \'cc\'ed\u21152 \'bc\'d3\u19968 \'d2\'bb\u20010 \'b8\'f6\u21069 \'c7\'b0\u23548 \'b5\'bc\~'>'\~\u65292 \'a3\'ac\u30830 \'c8\'b7\u20445 \'b1\'a3\u23427 \'cb\'fc\u19981 \'b2\'bb\u26159 \'ca\'c7\u31354 \'bf\'d5\u30340 \'b5\'c4\u12290 \'a1\'a3Vimscript \u23383 \'d7\'d6\u20856 \'b5\'e4\u19981 \'b2\'bb\u33021 \'c4\'dc\u23384 \'b4\'e6\u20648 \'b4\'a2\u19968 \'d2\'bb\u20010 \'b8\'f6\u38190 \'bc\'fc\u20026 \'ce\'aa\u31354 \'bf\'d5\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u30340 \'b5\'c4\u26465 \'cc\'f5\u30446 \'c4\'bf\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u32531 \'bb\'ba\u20914 \'b3\'e5\u21306 \'c7\'f8\u20013 \'d6\'d0\u20026 \'ce\'aa\u31354 \'bf\'d5\u30340 \'b5\'c4\u20195 \'b4\'fa\u30721 \'c2\'eb\u19981 \'b2\'bb\u20250 \'bb\'e1\u34987 \'b1\'bb\u27491 \'d5\'fd\u30830 \'c8\'b7\u22320 \'b5\'d8\u28155 \'cc\'ed\u21152 \'bc\'d3\u21040 \'b5\'bdhave_already_seen\u12290 \'a1\'a3\uc1
\par \uc2\u19968 \'d2\'bb\u26086 \'b5\'a9\u36825 \'d5\'e2\u20123 \'d0\'a9\u34892 \'d0\'d0\u34987 \'b1\'bb\u35268 \'b9\'e6\u33539 \'b7\'b6\u21270 \'bb\'af\u65292 \'a3\'ac\u37027 \'c4\'c7\u20040 \'c3\'b4\u20989 \'ba\'af\u25968 \'ca\'fd\u23601 \'be\'cd\u33021 \'c4\'dc\u26816 \'bc\'ec\u26597 \'b2\'e9\u35813 \'b8\'c3\u34892 \'d0\'d0\u26159 \'ca\'c7\u21542 \'b7\'f1\u24050 \'d2\'d1\u32463 \'be\'ad\u20316 \'d7\'f7\u20026 \'ce\'aa\u38190 \'bc\'fc\u22312 \'d4\'da\~have_already_seen\~\u23383 \'d7\'d6\u20856 \'b5\'e4\u20013 \'d6\'d0\u34987 \'b1\'bb\u20351 \'ca\'b9\u29992 \'d3\'c3\u36807 \'b9\'fd\u12290 \'a1\'a3\u22914 \'c8\'e7\u26524 \'b9\'fb\u26159 \'ca\'c7\u30340 \'b5\'c4\u35805 \'bb\'b0\u65292 \'a3\'ac\u34987 \'b1\'bb\u30830 \'c8\'b7\u23450 \'b6\'a8\u30340 \'b5\'c4\u36825 \'d5\'e2\u34892 \'d0\'d0\u32943 \'bf\'cf\u23450 \'b6\'a8\u24050 \'d2\'d1\u32463 \'be\'ad\u34987 \'b1\'bb\u26597 \'b2\'e9\u30475 \'bf\'b4\u36807 \'b9\'fd\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u34987 \'b1\'bb\u28155 \'cc\'ed\u21152 \'bc\'d3\u21040 \'b5\'bd\~unique_lines\u65292 \'a3\'ac\u36825 \'d5\'e2\u26679 \'d1\'f9\u37325 \'d6\'d8\u22797 \'b8\'b4\u30340 \'b5\'c4\u37096 \'b2\'bf\u20998 \'b7\'d6\u23601 \'be\'cd\u21487 \'bf\'c9\u20197 \'d2\'d4\u24573 \'ba\'f6\u30053 \'c2\'d4\u12290 \'a1\'a3\u30456 \'cf\'e0\u21453 \'b7\'b4\u22320 \'b5\'d8\u65292 \'a3\'ac\u22914 \'c8\'e7\u26524 \'b9\'fb\u35813 \'b8\'c3\u34892 \'d0\'d0\u26159 \'ca\'c7\u31532 \'b5\'da\u19968 \'d2\'bb\u27425 \'b4\'ce\u36935 \'d3\'f6\u21040 \'b5\'bd\u65292 \'a3\'ac\u37027 \'c4\'c7\u20040 \'c3\'b4\u21407 \'d4\'ad\u22987 \'ca\'bc\u65288 \'a3\'a8\u26410 \'ce\'b4\u35268 \'b9\'e6\u33539 \'b7\'b6\u21270 \'bb\'af\u30340 \'b5\'c4\u65289 \'a3\'a9\u19968 \'d2\'bb\u34892 \'d0\'d0\u24517 \'b1\'d8\u39035 \'d0\'eb\u34987 \'b1\'bb\u28155 \'cc\'ed\u21152 \'bc\'d3\u21040 \'b5\'bd\~unique_lines\u65292 \'a3\'ac\u35268 \'b9\'e6\u33539 \'b7\'b6\u21270 \'bb\'af\u30340 \'b5\'c4\u37027 \'c4\'c7\u19968 \'d2\'bb\u29256 \'b0\'e6\u24517 \'b1\'d8\u39035 \'d0\'eb\u20316 \'d7\'f7\u20026 \'ce\'aa\u38190 \'bc\'fc\u34987 \'b1\'bb\u28155 \'cc\'ed\u21152 \'bc\'d3\u21040 \'b5\'bd\~have_already_seen\u12290 \'a1\'a3\uc1
\par \uc2\u24403 \'b5\'b1\u25152 \'cb\'f9\u26377 \'d3\'d0\u30340 \'b5\'c4\u20195 \'b4\'fa\u30721 \'c2\'eb\u24050 \'d2\'d1\u32463 \'be\'ad\u25353 \'b0\'b4\u36825 \'d5\'e2\u31181 \'d6\'d6\u26041 \'b7\'bd\u27861 \'b7\'a8\u36807 \'b9\'fd\u28388 \'c2\'cb\u20102 \'c1\'cb\u19968 \'d2\'bb\u36941 \'b1\'e9\u20043 \'d6\'ae\u21518 \'ba\'f3\u65292 \'a3\'acunique_lines\~\u23558 \'bd\'ab\u20250 \'bb\'e1\u21482 \'d6\'bb\u20250 \'bb\'e1\u21253 \'b0\'fc\u21547 \'ba\'ac\u23427 \'cb\'fc\u20204 \'c3\'c7\u20013 \'d6\'d0\u21807 \'ce\'a8\u19968 \'d2\'bb\u30340 \'b5\'c4\u23376 \'d7\'d3\u38598 \'bc\'af\u65292 \'a3\'ac\u25353 \'b0\'b4\u29031 \'d5\'d5\u36935 \'d3\'f6\u35265 \'bc\'fb\u30340 \'b5\'c4\u20808 \'cf\'c8\u21518 \'ba\'f3\u39034 \'cb\'b3\u24207 \'d0\'f2\u25490 \'c5\'c5\u21015 \'c1\'d0\u12290 \'a1\'a3\u25152 \'cb\'f9\u26377 \'d3\'d0\u30041 \'c1\'f4\u19979 \'cf\'c2\u30340 \'b5\'c4\u36825 \'d5\'e2\u20123 \'d0\'a9\u34892 \'d0\'d0\u23558 \'bd\'ab\u20250 \'bb\'e1\u21024 \'c9\'be\u38500 \'b3\'fd\u20854 \'c6\'e4\u21407 \'d4\'ad\u22987 \'ca\'bc\u30340 \'b5\'c4\u34892 \'d0\'d0\u32452 \'d7\'e9\u65292 \'a3\'ac\u29992 \'d3\'c3\u36825 \'d5\'e2\u20123 \'d0\'a9\u31215 \'bb\'fd\u32047 \'c0\'db\u19979 \'cf\'c2\u26469 \'c0\'b4\u30340 \'b5\'c4\u21807 \'ce\'a8\u19968 \'d2\'bb\u34892 \'d0\'d0\u26469 \'c0\'b4\u26367 \'cc\'e6\u25442 \'bb\'bb\u23427 \'cb\'fc\u65288 \'a3\'a8\u36890 \'cd\'a8\u36807 \'b9\'fd\u19968 \'d2\'bb\u20010 \'b8\'f6\~append()\u65289 \'a3\'a9\u12290 \'a1\'a3\uc1
\par \uc2\u26377 \'d3\'d0\u20102 \'c1\'cb\u36825 \'d5\'e2\u26679 \'d1\'f9\u19968 \'d2\'bb\u20010 \'b8\'f6\u21487 \'bf\'c9\u29992 \'d3\'c3\u30340 \'b5\'c4\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u35774 \'c9\'e8\u32622 \'d6\'c3\u19968 \'d2\'bb\u20010 \'b8\'f6\u27491 \'d5\'fd\u24120 \'b3\'a3\u27169 \'c4\'a3\u24335 \'ca\'bd\u30340 \'b5\'c4\u38190 \'bc\'fc\u26144 \'d3\'b3\u23556 \'c9\'e4\u26469 \'c0\'b4\u35843 \'b5\'f7\u29992 \'d3\'c3\u20840 \'c8\'ab\u37096 \'b2\'bf\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u21629 \'c3\'fc\u20196 \'c1\'ee\u65292 \'a3\'ac\u23601 \'be\'cd\u20687 \'cf\'f1\u36825 \'d5\'e2\u26679 \'d1\'f9\u65306 \'a3\'ba\uc1
\par nmap ;u :%call Uniq()<CR>
\par \uc2\u25110 \'bb\'f2\u32773 \'d5\'df\u24744 \'c4\'fa\u21487 \'bf\'c9\u20197 \'d2\'d4\u23558 \'bd\'ab\u20854 \'c6\'e4\u24212 \'d3\'a6\u29992 \'d3\'c3\u21040 \'b5\'bd\u19968 \'d2\'bb\u20010 \'b8\'f6\u20195 \'b4\'fa\u30721 \'c2\'eb\u30340 \'b5\'c4\u29305 \'cc\'d8\u27530 \'ca\'e2\u38598 \'bc\'af\u20013 \'d6\'d0\u65288 \'a3\'a8\u20363 \'c0\'fd\u22914 \'c8\'e7\u65292 \'a3\'ac\u19968 \'d2\'bb\u20010 \'b8\'f6\u22312 \'d4\'da Visual \u27169 \'c4\'a3\u24335 \'ca\'bd\u20013 \'d6\'d0\u36873 \'d1\'a1\u23450 \'b6\'a8\u30340 \'b5\'c4\u33539 \'b7\'b6\u22260 \'ce\'a7\u65289 \'a3\'a9\u65292 \'a3\'ac\u23601 \'be\'cd\u20687 \'cf\'f1\u36825 \'d5\'e2\u26679 \'d1\'f9\u65306 \'a3\'ba\uc1
\par vmap  u :call Uniq()<CR>
\par \plain \f1\ul\fs20\cf1 \uc2\u22238 \'bb\'d8\u39029 \'d2\'b3\u39318 \'ca\'d7\uc1
\par \plain \f1\b\fs20 \uc2\u23637 \'d5\'b9\u26395 \'cd\'fb\u26410 \'ce\'b4\u26469 \'c0\'b4\uc1
\par \plain \f1\fs20 \uc2\u30446 \'c4\'bf\u21069 \'c7\'b0\u25105 \'ce\'d2\u20204 \'c3\'c7\u35752 \'cc\'d6\u35770 \'c2\'db\u30340 \'b5\'c4 Vimscript \u22522 \'bb\'f9\u26412 \'b1\'be\u29305 \'cc\'d8\u24615 \'d0\'d4\u65288 \'a3\'a8\u35821 \'d3\'ef\u21477 \'be\'e4\u21644 \'ba\'cd\u20989 \'ba\'af\u25968 \'ca\'fd\u65292 \'a3\'ac\u25968 \'ca\'fd\u32452 \'d7\'e9\u21644 \'ba\'cd\u21704 \'b9\'fe\u24076 \'cf\'a3\u34920 \'b1\'ed\u65289 \'a3\'a9\u24050 \'d2\'d1\u32463 \'be\'ad\u36275 \'d7\'e3\u22815 \'b9\'bb\u20026 \'ce\'aa Vim \u30340 \'b5\'c4\u26680 \'ba\'cb\u24515 \'d0\'c4\u29305 \'cc\'d8\u24615 \'d0\'d4\u38598 \'bc\'af\u21019 \'b4\'b4\u24314 \'bd\'a8\u20960 \'bc\'b8\u20046 \'ba\'f5\u20219 \'c8\'ce\u20309 \'ba\'ce\u31867 \'c0\'e0\u22411 \'d0\'cd\u30340 \'b5\'c4\u28155 \'cc\'ed\u21152 \'bc\'d3\u39033 \'cf\'ee\u12290 \'a1\'a3\u20294 \'b5\'ab\u26159 \'ca\'c7\u25105 \'ce\'d2\u20204 \'c3\'c7\u25152 \'cb\'f9\u30475 \'bf\'b4\u21040 \'b5\'bd\u30340 \'b5\'c4\u25193 \'c0\'a9\u23637 \'d5\'b9\u65292 \'a3\'ac\u37117 \'b6\'bc\u38656 \'d0\'e8\u35201 \'d2\'aa\u29992 \'d3\'c3\u25143 \'bb\'a7\u36890 \'cd\'a8\u36807 \'b9\'fd\u21457 \'b7\'a2\u24067 \'b2\'bc\u19968 \'d2\'bb\u20010 \'b8\'f6\u27491 \'d5\'fd\u24120 \'b3\'a3\u27169 \'c4\'a3\u24335 \'ca\'bd\u21629 \'c3\'fc\u20196 \'c1\'ee\u65292 \'a3\'ac\u25110 \'bb\'f2\u32773 \'d5\'df\u22312 \'d4\'da\u25554 \'b2\'e5\u20837 \'c8\'eb\u27169 \'c4\'a3\u24335 \'ca\'bd\u20013 \'d6\'d0\u36755 \'ca\'e4\u20837 \'c8\'eb\u19968 \'d2\'bb\u20010 \'b8\'f6\u29305 \'cc\'d8\u27530 \'ca\'e2\u30340 \'b5\'c4\u24207 \'d0\'f2\u21015 \'c1\'d0\u65292 \'a3\'ac\u26126 \'c3\'f7\u30830 \'c8\'b7\u22320 \'b5\'d8\u35831 \'c7\'eb\u27714 \'c7\'f3\u34892 \'d0\'d0\u20026 \'ce\'aa\u12290 \'a1\'a3\uc1
\par \uc2\u22312 \'d4\'da\u26412 \'b1\'be\u31995 \'cf\'b5\u21015 \'c1\'d0\u30340 \'b5\'c4\u19979 \'cf\'c2\u19968 \'d2\'bb\u31687 \'c6\'aa\u25991 \'ce\'c4\u31456 \'d5\'c2\u20013 \'d6\'d0\u65292 \'a3\'ac\u25105 \'ce\'d2\u20204 \'c3\'c7\u20250 \'bb\'e1\u20171 \'bd\'e9\u32461 \'c9\'dc Vim \u30340 \'b5\'c4\u20869 \'c4\'da\u32622 \'d6\'c3\u20107 \'ca\'c2\u20214 \'bc\'fe\u27169 \'c4\'a3\u22411 \'d0\'cd\u65292 \'a3\'ac\u24182 \'b2\'a2\u25506 \'cc\'bd\u32034 \'cb\'f7\u22914 \'c8\'e7\u20309 \'ba\'ce\u24314 \'bd\'a8\u31435 \'c1\'a2\u22312 \'d4\'da\u29992 \'d3\'c3\u25143 \'bb\'a7\u32534 \'b1\'e0\u36753 \'bc\'ad\u26102 \'ca\'b1\u33258 \'d7\'d4\u21160 \'b6\'af\u35302 \'b4\'a5\u21457 \'b7\'a2\u30340 \'b5\'c4\u29992 \'d3\'c3\u25143 \'bb\'a7\u33258 \'d7\'d4\u23450 \'b6\'a8\u20041 \'d2\'e5\u20989 \'ba\'af\u25968 \'ca\'fd\uc1\par}