{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}{\f4\fnil\fcharset2 Symbol;}{\f5\fnil\fcharset0 Courier New;}}{\colortbl;\red0\green0\blue255;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid699138157\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1879078947}
{\list\listtemplateid1326770355\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1024040326}
{\list\listtemplateid1252110242\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1825881137}
{\list\listtemplateid1119974649
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid166490852}
{\list\listtemplateid1543787128\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1718108767}
{\list\listtemplateid1430440927
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid2121383266}
{\list\listtemplateid553107183\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1455831213}
}
{\*\listoverridetable
{\listoverride\listid1879078947\listoverridecount0\ls1}
{\listoverride\listid1024040326\listoverridecount0\ls2}
{\listoverride\listid1825881137\listoverridecount0\ls3}
{\listoverride\listid166490852\listoverridecount0\ls4}
{\listoverride\listid1718108767\listoverridecount0\ls5}
{\listoverride\listid2121383266\listoverridecount0\ls6}
{\listoverride\listid1455831213\listoverridecount0\ls7}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf2 /etc/sshd_config man(5) EN
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 SSHD_CONFIG(5)              BSD File Formats Manual             SSHD_CONFIG(5)
\par 
\par NAME
\par \plain \f1\fs20\cf1      sshd_config - OpenSSH SSH daemon configuration file
\par \plain \f1\fs20 
\par SYNOPSIS
\par \plain \f1\fs20\cf1      /etc/ssh/sshd_config
\par \plain \f1\fs20 
\par DESCRIPTION
\par      sshd(8) reads configuration data from /etc/ssh/sshd_config (or the file specified with -f on the command line).
\par      The file contains keyword-argument pairs, one per line.  Lines starting with \lquote #\rquote  and empty lines are interpreted as
\par      comments.  Arguments may optionally be enclosed in double quotes (") in order to represent arguments containing
\par      spaces.
\par 
\par      The possible keywords and their meanings are as follows (note that keywords are case-insensitive and arguments are
\par      case-sensitive):
\par 
\par      AcceptEnv
\par              Specifies what environment variables sent by the client will be copied into the session\rquote s environ(7).  See
\par              SendEnv in ssh_config(5) for how to configure the client.  Note that environment passing is only supported
\par              for protocol 2.  Variables are specified by name, which may contain the wildcard characters \lquote *\rquote  and \lquote ?\rquote .
\par              Multiple environment variables may be separated by whitespace or spread across multiple AcceptEnv direc-
\par              tives.  Be warned that some environment variables could be used to bypass restricted user environments.
\par              For this reason, care should be taken in the use of this directive.  The default is not to accept any envi-
\par              ronment variables.
\par 
\par      AddressFamily
\par              Specifies which address family should be used by sshd(8).  Valid arguments are \ldblquote any\rdblquote , \ldblquote inet\rdblquote  (use IPv4
\par              only), or \ldblquote inet6\rdblquote  (use IPv6 only).  The default is \ldblquote any\rdblquote .
\par 
\par      AllowAgentForwarding
\par              Specifies whether ssh-agent(1) forwarding is permitted.  The default is \ldblquote yes\rdblquote .  Note that disabling agent
\par              forwarding does not improve security unless users are also denied shell access, as they can always install
\par              their own forwarders.
\par 
\par      AllowGroups
\par              This keyword can be followed by a list of group name patterns, separated by spaces.  If specified, login is
\par              allowed only for users whose primary group or supplementary group list matches one of the patterns.  Only
\par              group names are valid; a numerical group ID is not recognized.  By default, login is allowed for all
\par              groups.  The allow/deny directives are processed in the following order: DenyUsers, AllowUsers, DenyGroups,
\par              and finally AllowGroups.
\par 
\par              See PATTERNS in ssh_config(5) for more information on patterns.
\par 
\par      AllowTcpForwarding
\par              Specifies whether TCP forwarding is permitted.  The default is \ldblquote yes\rdblquote .  Note that disabling TCP forwarding
\par              does not improve security unless users are also denied shell access, as they can always install their own
\par              forwarders.
\par 
\par      AllowUsers
\par              This keyword can be followed by a list of user name patterns, separated by spaces.  If specified, login is
\par              allowed only for user names that match one of the patterns.  Only user names are valid; a numerical user ID
\par              is not recognized.  By default, login is allowed for all users.  If the pattern takes the form USER@HOST
\par              then USER and HOST are separately checked, restricting logins to particular users from particular hosts.
\par              The allow/deny directives are processed in the following order: DenyUsers, AllowUsers, DenyGroups, and
\par              finally AllowGroups.
\par 
\par              See PATTERNS in ssh_config(5) for more information on patterns.
\par 
\par      AuthorizedKeysFile
\par              Specifies the file that contains the public keys that can be used for user authentication.
\par              AuthorizedKeysFile may contain tokens of the form %T which are substituted during connection setup.  The
\par              following tokens are defined: %% is replaced by a literal \rquote %\rquote , %h is replaced by the home directory of the
\par              user being authenticated, and %u is replaced by the username of that user.  After expansion,
\par              AuthorizedKeysFile is taken to be an absolute path or one relative to the user\rquote s home directory.  The
\par              default is \ldblquote .ssh/authorized_keys\rdblquote .
\par 
\par      Banner  The contents of the specified file are sent to the remote user before authentication is allowed.  If the
\par              argument is \ldblquote none\rdblquote  then no banner is displayed.  This option is only available for protocol version 2.  By
\par              default, no banner is displayed.
\par 
\par      ChallengeResponseAuthentication
\par              Specifies whether challenge-response authentication is allowed (e.g. via PAM or though authentication
\par              styles supported in login.conf(5)) The default is \ldblquote yes\rdblquote .
\par 
\par      ChrootDirectory
\par              Specifies a path to chroot(2) to after authentication.  This path, and all its components, must be root-
\par              owned directories that are not writable by any other user or group.  After the chroot, sshd(8) changes the
\par              working directory to the user\rquote s home directory.
\par 
\par              The path may contain the following tokens that are expanded at runtime once the connecting user has been
\par              authenticated: %% is replaced by a literal \rquote %\rquote , %h is replaced by the home directory of the user being
\par              authenticated, and %u is replaced by the username of that user.
\par 
\par              The ChrootDirectory must contain the necessary files and directories to support the user\rquote s session.  For an
\par              interactive session this requires at least a shell, typically sh(1), and basic /dev nodes such as null(4),
\par              zero(4), stdin(4), stdout(4), stderr(4), arandom(4) and tty(4) devices.  For file transfer sessions using
\par              \ldblquote sftp\rdblquote , no additional configuration of the environment is necessary if the in-process sftp server is used,
\par              though sessions which use logging do require /dev/log inside the chroot directory (see sftp-server(8) for
\par              details).
\par 
\par              The default is not to chroot(2).
\par 
\par      Ciphers
\par              Specifies the ciphers allowed for protocol version 2.  Multiple ciphers must be comma-separated.  The sup-
\par              ported ciphers are \ldblquote 3des-cbc\rdblquote , \ldblquote aes128-cbc\rdblquote , \ldblquote aes192-cbc\rdblquote , \ldblquote aes256-cbc\rdblquote , \ldblquote aes128-ctr\rdblquote , \ldblquote aes192-ctr\rdblquote ,
\par              \ldblquote aes256-ctr\rdblquote , \ldblquote arcfour128\rdblquote , \ldblquote arcfour256\rdblquote , \ldblquote arcfour\rdblquote , \ldblquote blowfish-cbc\rdblquote , and \ldblquote cast128-cbc\rdblquote .  The default is:
\par 
\par                 aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,
\par                 aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,
\par                 aes256-cbc,arcfour
\par 
\par      ClientAliveCountMax
\par              Sets the number of client alive messages (see below) which may be sent without sshd(8) receiving any mes-
\par              sages back from the client.  If this threshold is reached while client alive messages are being sent, sshd
\par              will disconnect the client, terminating the session.  It is important to note that the use of client alive
\par              messages is very different from TCPKeepAlive (below).  The client alive messages are sent through the
\par              encrypted channel and therefore will not be spoofable.  The TCP keepalive option enabled by TCPKeepAlive is
\par              spoofable.  The client alive mechanism is valuable when the client or server depend on knowing when a con-
\par              nection has become inactive.
\par 
\par              The default value is 3.  If ClientAliveInterval (see below) is set to 15, and ClientAliveCountMax is left
\par              at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds.  This option
\par              applies to protocol version 2 only.
\par 
\par      ClientAliveInterval
\par              Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will
\par              send a message through the encrypted channel to request a response from the client.  The default is 0,
\par              indicating that these messages will not be sent to the client.  This option applies to protocol version 2
\par              only.
\par 
\par      Compression
\par              Specifies whether compression is allowed, or delayed until the user has authenticated successfully.  The
\par              argument must be \ldblquote yes\rdblquote , \ldblquote delayed\rdblquote , or \ldblquote no\rdblquote .  The default is \ldblquote delayed\rdblquote .
\par 
\par      DenyGroups
\par              This keyword can be followed by a list of group name patterns, separated by spaces.  Login is disallowed
\par              for users whose primary group or supplementary group list matches one of the patterns.  Only group names
\par              are valid; a numerical group ID is not recognized.  By default, login is allowed for all groups.  The
\par              allow/deny directives are processed in the following order: DenyUsers, AllowUsers, DenyGroups, and finally
\par              AllowGroups.
\par 
\par              See PATTERNS in ssh_config(5) for more information on patterns.
\par 
\par      DenyUsers
\par              This keyword can be followed by a list of user name patterns, separated by spaces.  Login is disallowed for
\par              user names that match one of the patterns.  Only user names are valid; a numerical user ID is not recog-
\par              nized.  By default, login is allowed for all users.  If the pattern takes the form USER@HOST then USER and
\par              HOST are separately checked, restricting logins to particular users from particular hosts.  The allow/deny
\par              directives are processed in the following order: DenyUsers, AllowUsers, DenyGroups, and finally
\par              AllowGroups.
\par 
\par              See PATTERNS in ssh_config(5) for more information on patterns.
\par 
\par      ForceCommand
\par              Forces the execution of the command specified by ForceCommand, ignoring any command supplied by the client
\par              and ~/.ssh/rc if present.  The command is invoked by using the user\rquote s login shell with the -c option.  This
\par              applies to shell, command, or subsystem execution.  It is most useful inside a Match block.  The command
\par              originally supplied by the client is available in the SSH_ORIGINAL_COMMAND environment variable.  Specify-
\par              ing a command of \ldblquote internal-sftp\rdblquote  will force the use of an in-process sftp server that requires no support
\par              files when used with ChrootDirectory.
\par 
\par      GatewayPorts
\par              Specifies whether remote hosts are allowed to connect to ports forwarded for the client.  By default,
\par              sshd(8) binds remote port forwardings to the loopback address.  This prevents other remote hosts from con-
\par              necting to forwarded ports.  GatewayPorts can be used to specify that sshd should allow remote port for-
\par              wardings to bind to non-loopback addresses, thus allowing other hosts to connect.  The argument may be \ldblquote no\rdblquote 
\par              to force remote port forwardings to be available to the local host only, \ldblquote yes\rdblquote  to force remote port for-
\par              wardings to bind to the wildcard address, or \ldblquote clientspecified\rdblquote  to allow the client to select the address to
\par              which the forwarding is bound.  The default is \ldblquote no\rdblquote .
\par 
\par      GSSAPIAuthentication
\par              Specifies whether user authentication based on GSSAPI is allowed.  The default is \ldblquote no\rdblquote .  Note that this
\par              option applies to protocol version 2 only.
\par 
\par      GSSAPIKeyExchange
\par              Specifies whether key exchange based on GSSAPI is allowed. GSSAPI key exchange doesn\rquote t rely on ssh keys to
\par              verify host identity.  The default is \ldblquote no\rdblquote .  Note that this option applies to protocol version 2 only.
\par 
\par      GSSAPICleanupCredentials
\par              Specifies whether to automatically destroy the user\rquote s credentials cache on logout.  The default is \ldblquote yes\rdblquote .
\par              Note that this option applies to protocol version 2 only.
\par 
\par      GSSAPIStrictAcceptorCheck
\par              Determines whether to be strict about the identity of the GSSAPI acceptor a client authenticates against.
\par              If \ldblquote yes\rdblquote  then the client must authenticate against the host service on the current hostname. If \ldblquote no\rdblquote  then
\par              the client may authenticate against any service key stored in the machine\rquote s default store. This facility is
\par              provided to assist with operation on multi homed machines.  The default is \ldblquote yes\rdblquote .  Note that this option
\par              applies only to protocol version 2 GSSAPI connections, and setting it to \ldblquote no\rdblquote  may only work with recent
\par              Kerberos GSSAPI libraries.
\par 
\par      GSSAPIStoreCredentialsOnRekey
\par              Controls whether the user\rquote s GSSAPI credentials should be updated following a successful connection rekey-
\par              ing. This option can be used to accepted renewed or updated credentials from a compatible client. The
\par              default is \ldblquote no\rdblquote .
\par 
\par      HostbasedAuthentication
\par              Specifies whether rhosts or /etc/hosts.equiv authentication together with successful public key client host
\par              authentication is allowed (host-based authentication).  This option is similar to RhostsRSAAuthentication
\par              and applies to protocol version 2 only.  The default is \ldblquote no\rdblquote .
\par 
\par      HostbasedUsesNameFromPacketOnly
\par              Specifies whether or not the server will attempt to perform a reverse name lookup when matching the name in
\par              the ~/.shosts, ~/.rhosts, and /etc/hosts.equiv files during HostbasedAuthentication.  A setting of \ldblquote yes\rdblquote 
\par              means that sshd(8) uses the name supplied by the client rather than attempting to resolve the name from the
\par              TCP connection itself.  The default is \ldblquote no\rdblquote .
\par 
\par      HostKey
\par              Specifies a file containing a private host key used by SSH.  The default is /etc/ssh/ssh_host_key for pro-
\par              tocol version 1, and /etc/ssh/ssh_host_rsa_key and /etc/ssh/ssh_host_dsa_key for protocol version 2.  Note
\par              that sshd(8) will refuse to use a file if it is group/world-accessible.  It is possible to have multiple
\par              host key files.  \ldblquote rsa1\rdblquote  keys are used for version 1 and \ldblquote dsa\rdblquote  or \ldblquote rsa\rdblquote  are used for version 2 of the SSH
\par              protocol.
\par 
\par      IgnoreRhosts
\par              Specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or
\par              HostbasedAuthentication.
\par 
\par              /etc/hosts.equiv and /etc/ssh/shosts.equiv are still used.  The default is \ldblquote yes\rdblquote .
\par 
\par      IgnoreUserKnownHosts
\par              Specifies whether sshd(8) should ignore the user\rquote s ~/.ssh/known_hosts during RhostsRSAAuthentication or
\par              HostbasedAuthentication.  The default is \ldblquote no\rdblquote .
\par 
\par      KerberosAuthentication
\par              Specifies whether the password provided by the user for PasswordAuthentication will be validated through
\par              the Kerberos KDC.  To use this option, the server needs a Kerberos servtab which allows the verification of
\par              the KDC\rquote s identity.  The default is \ldblquote no\rdblquote .
\par 
\par      KerberosGetAFSToken
\par              If AFS is active and the user has a Kerberos 5 TGT, attempt to acquire an AFS token before accessing the
\par              user\rquote s home directory.  The default is \ldblquote no\rdblquote .
\par 
\par      KerberosOrLocalPasswd
\par              If password authentication through Kerberos fails then the password will be validated via any additional
\par              local mechanism such as /etc/passwd.  The default is \ldblquote yes\rdblquote .
\par 
\par      KerberosTicketCleanup
\par              Specifies whether to automatically destroy the user\rquote s ticket cache file on logout.  The default is \ldblquote yes\rdblquote .
\par 
\par      KerberosUseKuserok
\par              Specifies whether to look at .k5login file for user\rquote s aliases.  The default is \ldblquote yes\rdblquote .
\par 
\par      KeyRegenerationInterval
\par              In protocol version 1, the ephemeral server key is automatically regenerated after this many seconds (if it
\par              has been used).  The purpose of regeneration is to prevent decrypting captured sessions by later breaking
\par              into the machine and stealing the keys.  The key is never stored anywhere.  If the value is 0, the key is
\par              never regenerated.  The default is 3600 (seconds).
\par 
\par      ListenAddress
\par              Specifies the local addresses sshd(8) should listen on.  The following forms may be used:
\par 
\par                    ListenAddress host|IPv4_addr|IPv6_addr
\par                    ListenAddress host|IPv4_addr:port
\par                    ListenAddress [host|IPv6_addr]:port
\par 
\par              If port is not specified, sshd will listen on the address and all prior Port options specified.  The
\par              default is to listen on all local addresses.  Multiple ListenAddress options are permitted.  Additionally,
\par              any Port options must precede this option for non-port qualified addresses.
\par 
\par      LoginGraceTime
\par              The server disconnects after this time if the user has not successfully logged in.  If the value is 0,
\par              there is no time limit.  The default is 120 seconds.
\par 
\par      LogLevel
\par              Gives the verbosity level that is used when logging messages from sshd(8).  The possible values are: QUIET,
\par              FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3.  The default is INFO.  DEBUG and DEBUG1 are
\par              equivalent.  DEBUG2 and DEBUG3 each specify higher levels of debugging output.  Logging with a DEBUG level
\par              violates the privacy of users and is not recommended.
\par 
\par      MACs    Specifies the available MAC (message authentication code) algorithms.  The MAC algorithm is used in proto-
\par              col version 2 for data integrity protection.  Multiple algorithms must be comma-separated.  The default is:
\par 
\par                    hmac-md5,hmac-sha1,umac-64@openssh.com,
\par                    hmac-ripemd160,hmac-sha1-96,hmac-md5-96
\par 
\par      Match   Introduces a conditional block.  If all of the criteria on the Match line are satisfied, the keywords on
\par              the following lines override those set in the global section of the config file, until either another Match
\par              line or the end of the file.
\par 
\par              The arguments to Match are one or more criteria-pattern pairs.  The available criteria are User, Group,
\par              Host, and Address.  The match patterns may consist of single entries or comma-separated lists and may use
\par              the wildcard and negation operators described in the PATTERNS section of ssh_config(5).
\par 
\par              The patterns in an Address criteria may additionally contain addresses to match in CIDR address/masklen
\par              format, e.g. \ldblquote 192.0.2.0/24\rdblquote  or \ldblquote 3ffe:ffff::/32\rdblquote .  Note that the mask length provided must be consistent
\par              with the address - it is an error to specify a mask length that is too long for the address or one with
\par              bits set in this host portion of the address.  For example, \ldblquote 192.0.2.0/33\rdblquote  and \ldblquote 192.0.2.0/8\rdblquote  respectively.
\par 
\par              Only a subset of keywords may be used on the lines following a Match keyword.  Available keywords are
\par              AllowAgentForwarding, AllowTcpForwarding, Banner, ChrootDirectory, ForceCommand, GatewayPorts,
\par              GSSAPIAuthentication, HostbasedAuthentication, KbdInteractiveAuthentication, KerberosAuthentication,
\par              KerberosUseKuserok, MaxAuthTries, MaxSessions, PubkeyAuthentication, AuthorizedKeysCommand,
\par              AuthorizedKeysCommandRunAs, PasswordAuthentication, PermitEmptyPasswords, PermitOpen, PermitRootLogin,
\par              RequiredAuthentications1, RequiredAuthentications2, RhostsRSAAuthentication, RSAAuthentication,
\par              X11DisplayOffset, X11Forwarding and X11UseLocalHost.
\par 
\par      MaxAuthTries
\par              Specifies the maximum number of authentication attempts permitted per connection.  Once the number of fail-
\par              ures reaches half this value, additional failures are logged.  The default is 6.
\par 
\par      MaxSessions
\par              Specifies the maximum number of open sessions permitted per network connection.  The default is 10.
\par 
\par      MaxStartups
\par              Specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.  Additional con-
\par              nections will be dropped until authentication succeeds or the LoginGraceTime expires for a connection.  The
\par              default is 10.
\par 
\par              Alternatively, random early drop can be enabled by specifying the three colon separated values
\par              \ldblquote start:rate:full\rdblquote  (e.g. "10:30:60").  sshd(8) will refuse connection attempts with a probability of
\par              \ldblquote rate/100\rdblquote  (30%) if there are currently \ldblquote start\rdblquote  (10) unauthenticated connections.  The probability
\par              increases linearly and all connection attempts are refused if the number of unauthenticated connections
\par              reaches \ldblquote full\rdblquote  (60).
\par 
\par      PasswordAuthentication
\par              Specifies whether password authentication is allowed.  The default is \ldblquote yes\rdblquote .
\par 
\par      PermitEmptyPasswords
\par              When password authentication is allowed, it specifies whether the server allows login to accounts with
\par              empty password strings.  The default is \ldblquote no\rdblquote .
\par 
\par      PermitOpen
\par              Specifies the destinations to which TCP port forwarding is permitted.  The forwarding specification must be
\par              one of the following forms:
\par 
\par                    PermitOpen host:port
\par                    PermitOpen IPv4_addr:port
\par                    PermitOpen [IPv6_addr]:port
\par 
\par              Multiple forwards may be specified by separating them with whitespace.  An argument of \ldblquote any\rdblquote  can be used to
\par              remove all restrictions and permit any forwarding requests.  By default all port forwarding requests are
\par              permitted.
\par 
\par      PermitRootLogin
\par              Specifies whether root can log in using ssh(1).  The argument must be \ldblquote yes\rdblquote , \ldblquote without-password\rdblquote ,
\par              \ldblquote forced-commands-only\rdblquote , or \ldblquote no\rdblquote .  The default is \ldblquote yes\rdblquote .
\par 
\par              If this option is set to \ldblquote without-password\rdblquote , password authentication is disabled for root.
\par 
\par              If this option is set to \ldblquote forced-commands-only\rdblquote , root login with public key authentication will be allowed,
\par              but only if the command option has been specified (which may be useful for taking remote backups even if
\par              root login is normally not allowed).  All other authentication methods are disabled for root.
\par 
\par              If this option is set to \ldblquote no\rdblquote , root is not allowed to log in.
\par 
\par      PermitTunnel
\par              Specifies whether tun(4) device forwarding is allowed.  The argument must be \ldblquote yes\rdblquote , \ldblquote point-to-point\rdblquote  (layer
\par              3), \ldblquote ethernet\rdblquote  (layer 2), or \ldblquote no\rdblquote .  Specifying \ldblquote yes\rdblquote  permits both \ldblquote point-to-point\rdblquote  and \ldblquote ethernet\rdblquote .  The
\par              default is \ldblquote no\rdblquote .
\par 
\par      PermitUserEnvironment
\par              Specifies whether ~/.ssh/environment and environment= options in ~/.ssh/authorized_keys are processed by
\par              sshd(8).  The default is \ldblquote no\rdblquote .  Enabling environment processing may enable users to bypass access restric-
\par              tions in some configurations using mechanisms such as LD_PRELOAD.
\par 
\par      PidFile
\par              Specifies the file that contains the process ID of the SSH daemon.  The default is /var/run/sshd.pid.
\par 
\par      Port    Specifies the port number that sshd(8) listens on.  The default is 22.  Multiple options of this type are
\par              permitted.  See also ListenAddress.
\par 
\par      PrintLastLog
\par              Specifies whether sshd(8) should print the date and time of the last user login when a user logs in inter-
\par              actively.  The default is \ldblquote yes\rdblquote .
\par 
\par      PrintMotd
\par              Specifies whether sshd(8) should print /etc/motd when a user logs in interactively.  (On some systems it is
\par              also printed by the shell, /etc/profile, or equivalent.)  The default is \ldblquote yes\rdblquote .
\par 
\par      Protocol
\par              Specifies the protocol versions sshd(8) supports.  The possible values are \lquote 1\rquote  and \lquote 2\rquote .  Multiple versions
\par              must be comma-separated.  The default is \ldblquote 2,1\rdblquote .  Note that the order of the protocol list does not indicate
\par              preference, because the client selects among multiple protocol versions offered by the server.  Specifying
\par              \ldblquote 2,1\rdblquote  is identical to \ldblquote 1,2\rdblquote .
\par 
\par      PubkeyAuthentication
\par              Specifies whether public key authentication is allowed.  The default is \ldblquote yes\rdblquote .  Note that this option
\par              applies to protocol version 2 only.
\par 
\par      AuthorizedKeysCommand
\par              Specifies a program to be used for lookup of the user\rquote s public keys.  The program will be invoked with its
\par              first argument the name of the user being authorized, and should produce on standard output AuthorizedKeys
\par              lines (see AUTHORIZED_KEYS in sshd(8)).  By default (or when set to the empty string) there is no Autho-
\par              rizedKeysCommand run.  If the AuthorizedKeysCommand does not successfully authorize the user, authorization
\par              falls through to the AuthorizedKeysFile.  Note that this option has an effect only with PubkeyAuthentica-
\par              tion turned on.
\par 
\par      AuthorizedKeysCommandRunAs
\par              Specifies the user under whose account the AuthorizedKeysCommand is run. Empty string (the default value)
\par              means the user being authorized is used.
\par 
\par      RequiredAuthentications[12]
\par              Specifies required methods of authentications that has to succeed before authorizing the connection.
\par              (RequiredAuthentication1 for Protocol version 1, and RequiredAuthentication2 for v2)
\par 
\par                  RequiredAuthentications1 method[,method...]
\par                  RequiredAuthentications2 method[,method...]
\par 
\par              Example 1:
\par 
\par                  RequiredAuthentications2 password,hostbased
\par 
\par              Example 2:
\par 
\par                  RequiredAuthentications2 publickey,password
\par 
\par      RhostsRSAAuthentication
\par              Specifies whether rhosts or /etc/hosts.equiv authentication together with successful RSA host authentica-
\par              tion is allowed.  The default is \ldblquote no\rdblquote .  This option applies to protocol version 1 only.
\par 
\par      RSAAuthentication
\par              Specifies whether pure RSA authentication is allowed.  The default is \ldblquote yes\rdblquote .  This option applies to proto-
\par              col version 1 only.
\par 
\par      ServerKeyBits
\par              Defines the number of bits in the ephemeral protocol version 1 server key.  The minimum value is 512, and
\par              the default is 1024.
\par 
\par      ShowPatchLevel
\par              Specifies whether sshd will display the patch level of the binary in the identification string.  The patch
\par              level is set at compile-time.  The default is \ldblquote no\rdblquote .  This option applies to protocol version 1 only.
\par 
\par      StrictModes
\par              Specifies whether sshd(8) should check file modes and ownership of the user\rquote s files and home directory
\par              before accepting login.  This is normally desirable because novices sometimes accidentally leave their
\par              directory or files world-writable.  The default is \ldblquote yes\rdblquote .
\par 
\par      Subsystem
\par              Configures an external subsystem (e.g. file transfer daemon).  Arguments should be a subsystem name and a
\par              command (with optional arguments) to execute upon subsystem request.
\par 
\par              The command sftp-server(8) implements the \ldblquote sftp\rdblquote  file transfer subsystem.
\par 
\par              Alternately the name \ldblquote internal-sftp\rdblquote  implements an in-process \ldblquote sftp\rdblquote  server.  This may simplify configura-
\par              tions using ChrootDirectory to force a different filesystem root on clients.
\par 
\par              By default no subsystems are defined.  Note that this option applies to protocol version 2 only.
\par 
\par      SyslogFacility
\par              Gives the facility code that is used when logging messages from sshd(8).  The possible values are: DAEMON,
\par              USER, AUTH, AUTHPRIV, LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.  The default is AUTH.
\par 
\par      TCPKeepAlive
\par              Specifies whether the system should send TCP keepalive messages to the other side.  If they are sent, death
\par              of the connection or crash of one of the machines will be properly noticed.  However, this means that con-
\par              nections will die if the route is down temporarily, and some people find it annoying.  On the other hand,
\par              if TCP keepalives are not sent, sessions may hang indefinitely on the server, leaving \ldblquote ghost\rdblquote  users and
\par              consuming server resources.
\par 
\par              The default is \ldblquote yes\rdblquote  (to send TCP keepalive messages), and the server will notice if the network goes down
\par              or the client host crashes.  This avoids infinitely hanging sessions.
\par 
\par              To disable TCP keepalive messages, the value should be set to \ldblquote no\rdblquote .
\par 
\par      UseDNS  Specifies whether sshd(8) should look up the remote host name and check that the resolved host name for the
\par              remote IP address maps back to the very same IP address.  The default is \ldblquote yes\rdblquote .
\par 
\par      UseLogin
\par              Specifies whether login(1) is used for interactive login sessions.  The default is \ldblquote no\rdblquote .  Note that
\par              login(1) is never used for remote command execution.  Note also, that if this is enabled, X11Forwarding
\par              will be disabled because login(1) does not know how to handle xauth(1) cookies.  If UsePrivilegeSeparation
\par              is specified, it will be disabled after authentication.
\par 
\par      UsePAM  Enables the Pluggable Authentication Module interface.  If set to \ldblquote yes\rdblquote  this will enable PAM authentication
\par              using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session
\par              module processing for all authentication types.
\par 
\par              Because PAM challenge-response authentication usually serves an equivalent role to password authentication,
\par              you should disable either PasswordAuthentication or ChallengeResponseAuthentication.
\par 
\par              If UsePAM is enabled, you will not be able to run sshd(8) as a non-root user.  The default is \ldblquote no\rdblquote .
\par 
\par      UsePrivilegeSeparation
\par              Specifies whether sshd(8) separates privileges by creating an unprivileged child process to deal with
\par              incoming network traffic.  After successful authentication, another process will be created that has the
\par              privilege of the authenticated user.  The goal of privilege separation is to prevent privilege escalation
\par              by containing any corruption within the unprivileged processes.  The default is \ldblquote yes\rdblquote .
\par 
\par      X11DisplayOffset
\par              Specifies the first display number available for sshd(8)\rquote s X11 forwarding.  This prevents sshd from inter-
\par              fering with real X11 servers.  The default is 10.
\par 
\par      X11Forwarding
\par              Specifies whether X11 forwarding is permitted.  The argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote no\rdblquote .
\par 
\par              When X11 forwarding is enabled, there may be additional exposure to the server and to client displays if
\par              the sshd(8) proxy display is configured to listen on the wildcard address (see X11UseLocalhost below),
\par              though this is not the default.  Additionally, the authentication spoofing and authentication data verifi-
\par              cation and substitution occur on the client side.  The security risk of using X11 forwarding is that the
\par              client\rquote s X11 display server may be exposed to attack when the SSH client requests forwarding (see the warn-
\par              ings for ForwardX11 in ssh_config(5)).  A system administrator may have a stance in which they want to pro-
\par              tect clients that may expose themselves to attack by unwittingly requesting X11 forwarding, which can war-
\par              rant a \ldblquote no\rdblquote  setting.
\par 
\par              Note that disabling X11 forwarding does not prevent users from forwarding X11 traffic, as users can always
\par              install their own forwarders.  X11 forwarding is automatically disabled if UseLogin is enabled.
\par 
\par      X11UseLocalhost
\par              Specifies whether sshd(8) should bind the X11 forwarding server to the loopback address or to the wildcard
\par              address.  By default, sshd binds the forwarding server to the loopback address and sets the hostname part
\par              of the DISPLAY environment variable to \ldblquote localhost\rdblquote .  This prevents remote hosts from connecting to the
\par              proxy display.  However, some older X11 clients may not function with this configuration.  X11UseLocalhost
\par              may be set to \ldblquote no\rdblquote  to specify that the forwarding server should be bound to the wildcard address.  The
\par              argument must be \ldblquote yes\rdblquote  or \ldblquote no\rdblquote .  The default is \ldblquote yes\rdblquote .
\par 
\par      XAuthLocation
\par              Specifies the full pathname of the xauth(1) program.  The default is /usr/bin/xauth.
\par 
\par TIME FORMATS
\par      sshd(8) command-line arguments and configuration file options that specify time may be expressed using a sequence
\par      of the form: time[qualifier], where time is a positive integer value and qualifier is one of the following:
\par 
\par            \u9001 ?none\u9002 ?  seconds
\par            s | S   seconds
\par            m | M   minutes
\par            h | H   hours
\par            d | D   days
\par            w | W   weeks
\par 
\par      Each member of the sequence is added together to calculate the total time value.
\par 
\par      Time format examples:
\par 
\par            600     600 seconds (10 minutes)
\par            10m     10 minutes
\par            1h30m   1 hour 30 minutes (90 minutes)
\par 
\par FILES
\par      /etc/ssh/sshd_config
\par              Contains configuration data for sshd(8).  This file should be writable by root only, but it is recommended
\par              (though not necessary) that it be world-readable.
\par 
\par SEE ALSO
\par      sshd(8)
\par 
\par AUTHORS
\par      OpenSSH is a derivative of the original and free ssh 1.2.12 release by Tatu Ylonen.  Aaron Campbell, Bob Beck,
\par      Markus Friedl, Niels Provos, Theo de Raadt and Dug Song removed many bugs, re-added newer features and created
\par      OpenSSH.  Markus Friedl contributed the support for SSH protocol versions 1.5 and 2.0.  Niels Provos and Markus
\par      Friedl contributed support for privilege separation.
\par 
\par BSD                             January 5, 2014                            BSD\par}